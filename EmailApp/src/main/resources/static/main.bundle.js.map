{"version":3,"sources":["D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src async","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/analytics/analytics.component.css","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/analytics/analytics.component.html","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/analytics/analytics.root.component.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/analytics/analytics.service.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/analytics/tab.component.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/analytics/tabs.component.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/app-routing.module.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/app.component.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/app.module.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/core/authorization.service.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/core/global.service.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/core/model/base.entity.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/dashboard/dashboard.component.css","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/dashboard/dashboard.component.html","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/dashboard/dashboard.component.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/dashboard/dashboard.module.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/dashboard/index.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/default/default.component.css","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/default/default.component.html","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/default/default.component.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/default/index.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/contact/contact.component.css","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/contact/contact.component.html","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/contact/contact.component.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/contact/contact.service.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/contact/contact.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/contact/contact_search_criteria.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/contact/fileupload.component.css","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/contact/fileupload.component.html","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/contact/fileupload.component.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/contactgroup/contactgroup.service.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/contactgroup/contactgroup.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/email.module.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/email/email.component.css","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/email/email.component.html","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/email/email.component.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/email/email.service.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/email/email.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/email/error.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/email/table.min.css","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/group/group.component.html","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/group/group.component.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/group/group.service.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/group/group.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/group/group_search_criteria.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/server/emailServerPropertyValueTypeConstant.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/server/emailserver.component.html","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/server/emailserver.component.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/server/emailserver.properties.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/server/emailserver.service.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/server/emailserver.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/server/emailserverproperties.service.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/shared/common.service.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/home/home.component.css","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/home/home.component.html","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/home/home.component.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/index.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/rxjs-extensions.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/account-approval/accountapproval.component.css","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/account-approval/accountapproval.component.html","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/account-approval/accountapproval.component.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/account-approval/accountapproval.service.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/change-password/change-password.component.css","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/change-password/change-password.component.html","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/change-password/change-password.component.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/change-password/index.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/login/index.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/login/login.component.css","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/login/login.component.html","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/login/login.component.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/login/login.service.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/model/UserAccountSearchCriteria.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/model/item.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/model/user.role.search.criteria.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/model/user.role.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/model/user_account.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/model/user_account_change_password_resource.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/model/user_account_user_group.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/model/user_group.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/model/user_group_searchcriteria.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/model/user_group_user_role.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/registration/index.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/registration/registration.component.css","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/registration/registration.component.html","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/registration/registration.component.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/registration/registration.service.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/security.module.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/user-account/index.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/user-account/user-account.component.html","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/user-account/user-account.component.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/user-account/user-account.service.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/user-group/index.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/user-group/user-group.component.html","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/user-group/user-group.component.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/user-group/user-group.service.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/user-role/index.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/user-role/user-role.component.html","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/user-role/user-role.component.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/user-role/user-role.service.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/environments/environment.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/main.ts","D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/polyfills.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src async\n// module id = ../../../../../src async recursive\n// module chunks = 0","exports = module.exports = require(\"../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".centered {\\r\\n  position: fixed;\\r\\n  top: 50%;\\r\\n  left: 50%;\\r\\n  -webkit-transform: translate(-80%, -50%);\\r\\n          transform: translate(-80%, -50%);\\r\\n}\\r\\n\\r\\n.divtabs, .barChartTabs {\\r\\n\\t\\r\\n\\tpadding-left:8%;\\r\\n\\twidth:80%;\\r\\n\\theight:100%;\\r\\n}\\r\\n\\r\\n.tab.active {\\r\\n\\tbackground:blue;\\r\\n}\\r\\n\\r\\nmd-card {\\r\\nbox-shadow: -4px 10px 25px -6px rgba(0,0,0,0.75);\\r\\nmargin-top:2vh;\\r\\nbackground:white;\\r\\nborder-radius: 12px 12px 12px 12px;\\r\\n-moz-border-radius: 12px 12px 12px 12px;\\r\\n-webkit-border-radius: 12px 12px 12px 12px;\\r\\nborder: 0px solid #000000;\\r\\nmin-height:25vh;\\r\\nwidth:105%;\\r\\n}\\r\\n\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/analytics/analytics.component.css\n// module id = ../../../../../src/app/analytics/analytics.component.css\n// module chunks = 0","module.exports = \"<!--form (ngSubmit)=\\\"onSubmit()\\\" autocomplete=\\\"off\\\" novalidate #loginForm=\\\"ngForm\\\"-->\\r\\n<script src=\\\"https://www.gstatic.com/charts/loader.js\\\"></script>\\r\\n<script type=\\\"text/javascript\\\" src=\\\"https://www.google.com/jsapi\\\"></script>\\r\\n<script type=\\\"text/javascript\\\">        \\r\\n  google.load('visualization', '1.0', {\\r\\n    'packages': ['corechart']\\r\\n  });\\r\\n  \\r\\n</script>\\r\\n  <div class=\\\"col-xs-1 col-sm-3 col-md-4 col-lg-4 col-xl-4\\\"></div>\\r\\n  <div class=\\\"barChartTabs\\\" *ngIf=\\\"authorizationService.isUserSuperAdmin()\\\">\\r\\n      <md-card class=\\\"app-analytics-display-section\\\">\\r\\n      <md-card-title>Company Wise Registration Statistics</md-card-title>\\r\\n      <md-card-content>\\r\\n\\t\\t<google-chart [data]='regColumnChartOptions'></google-chart>\\r\\n      </md-card-content>\\r\\n      <md-card-actions>\\r\\n      </md-card-actions>\\r\\n    </md-card>\\r\\n  </div>\\r\\n  <div class=\\\"divtabs\\\">\\r\\n    <md-card class=\\\"app-analytics-display-section\\\">\\r\\n      <md-card-title>Campaign Wise Performance Statistics</md-card-title>\\r\\n      <md-card-content>\\r\\n\\t  <p>This view allows you to analyze the campaign statistics completed by you till date. \\r\\n\\t\\tIt has a stacked column chart with Total Reach, Clicks and Unsubscribes for each campaign.\\r\\n\\t  </p>\\r\\n\\t\\t<google-chart [data]='columnChartOptions'></google-chart>\\r\\n      </md-card-content>\\r\\n      <md-card-actions>\\r\\n      </md-card-actions>\\r\\n    </md-card>\\r\\n  </div>\\r\\n  <div class=\\\"barChartTabs\\\">\\r\\n      <md-card class=\\\"app-analytics-display-section\\\">\\r\\n      <md-card-title>Group Wise Unsubscription</md-card-title>\\r\\n      <md-card-content>\\r\\n\\t  <p>This is a view of how your contacts have opted for unsubscribing from your campaigns. It shows a bar chart for number of unsubscribes per group that you have created. \\r\\n\\t  </p>\\r\\n\\t\\t<google-chart [data]='barChartOptions'></google-chart>\\r\\n      </md-card-content>\\r\\n      <md-card-actions>\\r\\n      </md-card-actions>\\r\\n    </md-card>\\r\\n  </div>\\r\\n<!--/form-->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/analytics/analytics.component.html\n// module id = ../../../../../src/app/analytics/analytics.component.html\n// module chunks = 0","import { Component, OnInit, NgModule } from '@angular/core';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AnalyticsService } from \"../analytics/analytics.service\";\r\nimport { CampaignWisePerformance } from '../analytics/model/CampaignWisePerformance';\r\nimport { GroupWiseUnsubscription } from '../analytics/model/GroupWiseUnsubscription';\r\nimport { GlobalService } from '../core/global.service';\r\nimport { Observable }     from 'rxjs/Observable';\r\nimport { ChartReadyEvent } from 'ng2-google-charts';\r\nimport { ViewChild, ElementRef } from '@angular/core';\r\nimport { AuthorizationService } from '../core/authorization.service';\r\n\r\nimport {Tabs} from './tabs.component';\r\nimport {Tab} from './tab.component';\r\nimport {CompanyWiseRegistrationDTO} from './model/CompanyWiseRegistrationDTO';\r\n\r\n@Component({\r\n  selector: 'analytics',\r\n  templateUrl: './analytics.component.html',\r\n  styleUrls: ['./analytics.component.css'],\r\n  providers: [AnalyticsService]\r\n})\r\nexport class AnalyticsComponent {\r\n\r\n\t\r\n  userName:string\r\n  constructor(private AnalyticsService: AnalyticsService, private router: Router,private globalService: GlobalService,private authorizationService:AuthorizationService) {\r\n\t\t  \r\n\t\tlet user = this.globalService.loggedInUser.loggedInUserName;\r\n\t\tthis.campaignWisePerformance(user);\r\n\t\tthis.groupWiseSunsubscription(user);\r\n\t\tthis.getCompanyWiseRegistrationStats();\r\n\r\n  }\r\n  campaignWisePerformanceSummaryResponse:CampaignWisePerformance[]\r\n  groupWiseUnsubscriptionResponse:GroupWiseUnsubscription[]\r\n\tcompanyWiseRegistrationSummary:CompanyWiseRegistrationDTO[]\r\n  \r\n    campaignWisePerformance(username: string){\r\n\t    \r\n    this.AnalyticsService.campaignWisePerformanceSummary(username)\r\n            .subscribe((data) => {\r\n                 this.campaignWisePerformanceSummaryResponse=data;\r\n\t\t/*\tfor (let entry of this.campaignWisePerformanceSummaryResponse) \r\n\t\t\t{\r\n\t\t\t\tconsole.log(entry.campaignName+\" | \"+entry.totalReach); // 1, \"string\", false\r\n\t\t\t}*/ \r\n\t\t\t//console.log(\"response : \"+this.summary.unsubscribes+\" | \"+this.summary.reach+\" | \"+this.summary.clicks);\r\n\t\t\tthis.myClickCampaignWisePerformance();\r\n\t\t\t//this.loadData(\"Sent on \"+this.summary.sentOn,this.summary.subject,this.summary.clickPercentage,this.summary.unsubscribePercentage);\r\n            },\r\n            error => {\r\n            });\t\t\r\n  };\r\n\r\n\tgetCompanyWiseRegistrationStats(){\r\n\t    \r\n    this.AnalyticsService.companyWiseRegistrationStats()\r\n            .subscribe((data) => {\r\n                 this.companyWiseRegistrationSummary=data;\r\n\t\t\t/*for (let entry of this.companyWiseRegistrationSummary) \r\n\t\t\t{\r\n\t\t\t\tconsole.log(entry.companyName+\" | \"+entry.approvedCount+\" | \"+entry.pendingCount); // 1, \"string\", false\r\n\t\t\t}*/ \r\n\t\t\t//console.log(\"response : \"+this.summary.unsubscribes+\" | \"+this.summary.reach+\" | \"+this.summary.clicks);\r\n\t\t\tthis.myClickCompanyWiseRegistration();\r\n\t\t\t//this.loadData(\"Sent on \"+this.summary.sentOn,this.summary.subject,this.summary.clickPercentage,this.summary.unsubscribePercentage);\r\n            },\r\n            error => {\r\n            });\t\t\r\n  };\r\n  \r\n  groupWiseSunsubscription(username: string){\r\n\t  this.AnalyticsService.groupWiseUnsubscription(username)\r\n            .subscribe((data) => {\r\n                 this.groupWiseUnsubscriptionResponse=data;\r\n\t\t/*\tfor (let entry of this.groupWiseUnsubscriptionResponse) \r\n\t\t\t{\r\n\t\t\t\tconsole.log(entry.groupName+\" | \"+entry.unsubscribed); // 1, \"string\", false\r\n\t\t\t}*/\r\n\t\t\t//console.log(\"response : \"+this.summary.unsubscribes+\" | \"+this.summary.reach+\" | \"+this.summary.clicks);\r\n\t\t\tthis.myClickGroupWiseUnsubscribes();\r\n\t\t\t//this.loadData(\"Sent on \"+this.summary.sentOn,this.summary.subject,this.summary.clickPercentage,this.summary.unsubscribePercentage);\r\n            },\r\n            error => {\r\n            });\t\t\r\n\t  \r\n\t  \r\n  }\r\n  \r\n   public myClickGroupWiseUnsubscribes():void {\r\n    // forces a reference update (otherwise angular doesn't detect the change)\r\n    this.barChartOptions = Object.create(this.barChartOptions);\r\n\tfor(let entry of this.groupWiseUnsubscriptionResponse)\r\n\t{\r\n\t  //console.log(\"Setting values for : \"+entry.groupName+\" | \"+entry.unsubscribed);\t\r\n\t  this.barChartOptions.dataTable.push([entry.groupName,entry.unsubscribed]);\r\n\t}\r\n  }\r\n\r\n\t public myClickCompanyWiseRegistration():void {\r\n    // forces a reference update (otherwise angular doesn't detect the change)\r\n    this.regColumnChartOptions = Object.create(this.regColumnChartOptions);\r\n\tfor(let entry of this.companyWiseRegistrationSummary)\r\n\t{\r\n\t  //console.log(\"Setting values for : \"+entry.companyName);\t\r\n\t  this.regColumnChartOptions.dataTable.push([entry.companyName,entry.approvedCount,entry.pendingCount]);\r\n\t}\r\n  }\r\n  \r\n  public myClickCampaignWisePerformance():void \r\n\t{\r\n    // forces a reference update (otherwise angular doesn't detect the change)\r\n\t\t//console.log(\"Combo chart values : \"+this.columnChartOptions.dataTable[0][0]+\" | \"+this.columnChartOptions.dataTable[0][1]);\r\n    this.columnChartOptions = Object.create(this.columnChartOptions);\r\n\r\n\t\tfor(let entry of this.campaignWisePerformanceSummaryResponse)\r\n\t\t{\r\n\t  \t//console.log(\"Setting values for : \"+entry.subject+\" | \"+entry.totalReach+\" | \"+entry.clicks+\" | \"+entry.unsubscribes);\t\r\n\t  \tthis.columnChartOptions.dataTable.push([entry.subject,entry.totalReach,entry.clicks,entry.unsubscribes]);\r\n\t\t}\r\n  }\r\n\r\n\t\tpublic regColumnChartOptions:any =  {\r\n\t\tchartType: 'ColumnChart',\r\n\t\tdataTable: [\r\n\t\t  [{label:'Company Name',type:'string'},{ label:'Nmber of Approved Registrations',type:'number'},{label:'Number of Pending Registrations',type:'number'}]\r\n\t\t],\r\n\t\toptions: {\r\n\t\t\ttitle: 'Company Wise Registrations',\r\n\t\t\tanimation:\r\n\t\t\t{\r\n\t\t\t\tduration: 1000,\r\n\t\t\t\teasing: 'out',\r\n\t\t\t\tstartup:true\r\n\t\t\t},\r\n\t\t\tbar: \r\n\t\t\t{ \r\n\t\t\t\tgroupWidth: '40' \r\n\t\t\t},\r\n\t\t\tvAxis: \r\n\t\t\t{\r\n\t\t\t\ttitle: 'Count'\r\n\t\t\t},\r\n\t\t\thAxis: \r\n\t\t\t{\r\n\t\t\t\ttitle: 'Company Name'\r\n\t\t\t},\r\n\t\t\tseriesType: 'bars',\r\n\t\t\tisStacked:true,\r\n\t\t\twidth:'95%',\r\n\t\t\theight:'350'\r\n\t\t}\r\n\t  };\r\n\t  \r\n\tpublic columnChartOptions:any =  {\r\n    chartType: 'ColumnChart',\r\n    dataTable: [\r\n      [{label:'Campaign Name',type:'string'}, {label:'Total Reach',type:'number'}, {label:'Total Clicks',type:'number'}, {label:'Unsubscribes',type:'number'}]\r\n    ],\r\n    options: \r\n\t{\r\n\t\ttitle: 'Campaign Wise Performance Summary',\r\n\t\theight:'350',\r\n\t\tbar: \r\n\t\t\t{ \r\n\t\t\t\tgroupWidth: '40' \r\n\t\t\t},\r\n\t\tvAxis: \r\n\t\t{\r\n\t\t\ttitle: 'Count'\r\n\t\t},\r\n\t\thAxis: \r\n\t\t{\r\n\t\t\ttitle: 'Campaign Name'\r\n\t\t},\r\n\t\tseriesType: 'bars',\r\n\t\tisStacked:true,\r\n\t\tanimation:\r\n\t\t{\r\n\t\t\t\tduration: 1000,\r\n\t\t\t\teasing: 'out',\r\n\t\t\t\tstartup:true\r\n\t\t},\r\n\t\twidth:'95%'\r\n\t}\r\n  };\r\n  \r\n\t  \r\n\tpublic comboChartOptions:any =  {\r\n    chartType: 'ComboChart',\r\n    dataTable: [\r\n      ['Campaign Name', 'Total Reach', 'Total Clicks', 'Unsubscribes']\r\n    ],\r\n    options: {\r\n      title : 'Campaign Wise Performance Summary',\r\n\t  height:'350',\r\n      vAxis: {title: 'Count'},\r\n      hAxis: {title: 'Campaign Name'},\r\n      seriesType: 'bars',\r\n      series: {5: {type: 'line'}},\r\n\t\tanimation:\r\n\t\t{\r\n\t\t\t\tduration: 1000,\r\n\t\t\t\teasing: 'out',\r\n\t\t\t\tstartup:true\r\n\t\t},\r\n\t  width:'95%',\r\n\t  chartArea: { width: '65%',right:'15%',top:'1%',height:'85%' },\r\n    }\r\n  };\r\n\r\n  public pieChartOptions:any =  {\r\n    chartType: 'PieChart',\r\n    dataTable: [\r\n      ['Metrics', 'Percentage'],\r\n      ['Sent',     11],\r\n      ['Reach',      2],\r\n      ['Clicks',  2],\r\n      ['Failure', 2],\r\n      ['Bounce',    7]\r\n    ],\r\n    options: {\r\n\t\ttitle: 'Tasks',\r\n\t\t\tanimation:\r\n\t\t\t{\r\n\t\t\t\tduration: 1000,\r\n\t\t\t\teasing: 'out',\r\n\t\t\t\tstartup:true\r\n\t\t\t},\r\n\t\tis3D:true,\r\n\t\twidth:'95%',\r\n\t\theight:'350'\r\n\t}\r\n  };\r\n  \r\n  \tpublic barChartOptions:any = {\r\n\t\t  \r\n\t\tchartType: 'BarChart',  \r\n\t\tdataTable: [\r\n\t\t\t[{label:'Group Name',type:'string'}, {label:'Count',type:'number'}]\r\n\t\t],\r\n\r\n\t\toptions:\r\n\t\t{\r\n\t\t\twidth:'95%',\r\n\t\t\theight:'350',\r\n\t\t\tchartArea: { width: '65%',right:'15%',top:'1%' },\r\n\t\t\tbar: \r\n\t\t\t{ \r\n\t\t\t\tgroupWidth: '40' \r\n\t\t\t},\r\n\t\t\tanimation:\r\n\t\t\t{\r\n\t\t\t\tduration: 1000,\r\n\t\t\t\teasing: 'out',\r\n\t\t\t\tstartup:true\r\n\t\t\t},\r\n\t\t\thAxis: {\r\n\t\t\t\ttitle: 'Count',\r\n\t\t\t\tminValue: 0,\r\n\t\t\t\ttextStyle: {\r\n\t\t\t\t\tbold: true,\r\n\t\t\t\t\tfontSize: 11,\r\n\t\t\t\t\tcolor: '#4d4d4d'\r\n\t\t\t\t},\r\n\t\t\t\ttitleTextStyle: {\r\n\t\t\t\t\tbold: true,\r\n\t\t\t\t\tfontSize: 12,\r\n\t\t\t\t\tcolor: '#4d4d4d'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tvAxis: {\r\n\t\t\t\ttitle: 'Group Names',\r\n\t\t\t\ttextStyle: {\r\n\t\t\t\t\tfontSize: 11,\r\n\t\t\t\t\tbold: true,\r\n\t\t\t\t},\r\n\t\t\t\ttitleTextStyle: {\r\n\t\t\t\t\tfontSize: 14,\r\n\t\t\t\t\tbold: true,\r\n\t\t\t\t\tcolor: '#848484'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}  \r\n\t  };\t\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/analytics/analytics.root.component.ts","import { Injectable }     from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions, URLSearchParams } from '@angular/http';\r\nimport { Observable }     from 'rxjs/Observable';\r\nimport { RecentChartSummary } from './model/RecentChartSummary';\r\nimport { RecentUnsubscribes } from '../analytics/model/RecentUnsubscribes';\r\nimport { RecentUnsubscribedCount } from '../analytics/model/RecentUnsubscribedCount';\r\nimport { CampaignWisePerformance } from './model/CampaignWisePerformance';\r\nimport { JobStatusData } from '../analytics/model/JobStatusData';\r\nimport { GroupWiseUnsubscription } from './model/GroupWiseUnsubscription';\r\nimport { PageLink } from '../security/model/pagelink';\r\nimport { CompanyWiseRegistrationDTO } from './model/CompanyWiseRegistrationDTO';\r\n\r\n@Injectable()\r\nexport class AnalyticsService {\r\n    \r\n  constructor (private http: Http) {    \r\n  }\r\n\r\n  getJobStatusData(userName:string): Observable<JobStatusData[]>\r\n  {\r\n       let headers = new Headers();\r\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n        let options = new RequestOptions({ headers: headers });\r\n\t\tlet urlSearchParams = new URLSearchParams();\r\n        urlSearchParams.append('userName', userName);\r\n\t\tlet body = urlSearchParams.toString();\r\n          return this.http.post('analytics/getJobStatusData',body,options)\r\n\t\t .map(res => res.json())\r\n\t\t .catch(this.handleError); \r\n  }\r\n\r\n  getBlockedContacts()\r\n  {\r\n         let headers = new Headers();\r\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n        let options = new RequestOptions({ headers: headers });\r\n\t\t//let urlSearchParams = new URLSearchParams();\r\n        //urlSearchParams.append('userName', userName);\r\n\t\t//let body = urlSearchParams.toString();\r\n          return this.http.post('analytics/getBlockedContacts',options)\r\n\t\t .map(res => res.json())\r\n\t\t .catch(this.handleError); \r\n  }\r\n\r\n  cancelJob(batchId:number,requestId:string){\r\n\r\n      let headers = new Headers();\r\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n        let options = new RequestOptions({ headers: headers });\r\n\t\tlet urlSearchParams = new URLSearchParams();\r\n        urlSearchParams.append('batchId', batchId.toString());\r\n        urlSearchParams.append('requestId', requestId);\r\n\t\tlet body = urlSearchParams.toString();\r\n          return this.http.post('analytics/cancelJob',body,options)\r\n\t\t .map(res => res.json())\r\n\t\t .catch(this.handleError);  \r\n  }\r\n\r\n  recentChartSummary (userName: string):  Observable<RecentChartSummary>  {\r\n        let headers = new Headers();\r\n\t\t//console.log(\"dashboard for \"+userName);\r\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n        let options = new RequestOptions({ headers: headers });\r\n\t\tlet urlSearchParams = new URLSearchParams();\r\n        urlSearchParams.append('userName', userName);\r\n\t\tlet body = urlSearchParams.toString();\r\n          return this.http.post('analytics/recentSummary',body,options)\r\n\t\t .map(res => res.json())\r\n\t\t .catch(this.handleError);   \r\n  }\r\n\r\n  recentUnsubscribes (age: number,isAdmin:string):  Observable<RecentUnsubscribes[]>  {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n        let options = new RequestOptions({ headers: headers });\r\n\t\tlet urlSearchParams = new URLSearchParams();\r\n        urlSearchParams.append('age', age.toString());\r\n        urlSearchParams.append('isAdmin', isAdmin);\r\n\t\tlet body = urlSearchParams.toString();\r\n          return this.http.post('analytics/getRecentUnsubscribes',body,options)\r\n\t\t .map(res => res.json())\r\n\t\t .catch(this.handleError);    \r\n  }\r\n\r\n   recentUnsubscribedCount (age: number,isAdmin:string):  Observable<RecentUnsubscribedCount[]>  {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n        let options = new RequestOptions({ headers: headers });\r\n\t\tlet urlSearchParams = new URLSearchParams();\r\n        urlSearchParams.append('age', age.toString());\r\n        urlSearchParams.append('isAdmin', isAdmin);\r\n\t\tlet body = urlSearchParams.toString();\r\n          return this.http.post('analytics/getRecentUnsubscribedCount',body,options)\r\n\t\t .map(res => res.json())\r\n\t\t .catch(this.handleError);    \r\n  }\r\n\r\n  companyWiseRegistrationStats(): Observable<CompanyWiseRegistrationDTO[]> {\r\n\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n        let options = new RequestOptions({ headers: headers });\r\n        return this.http.get('analytics/getCompanyWiseRegistrationStats',options)\r\n\t\t.map(res => res.json())\r\n\t\t.catch(this.handleError);  \r\n\r\n  }\r\n  \r\n  campaignWisePerformanceSummary (userName: string):  Observable<CampaignWisePerformance[]>  {\r\n        let headers = new Headers();\r\n\t\t//console.log(\"campaign wise summary for \"+userName);\r\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n        let options = new RequestOptions({ headers: headers });\r\n\t\tlet urlSearchParams = new URLSearchParams();\r\n        urlSearchParams.append('userName', userName);\r\n\t\tlet body = urlSearchParams.toString();\r\n          return this.http.post('analytics/campaignWisePerformance',body,options)\r\n\t\t .map(res => res.json())\r\n\t\t .catch(this.handleError);   \r\n  }\r\n  \r\n  groupWiseUnsubscription (userName: string):  Observable<GroupWiseUnsubscription[]>  {\r\n        let headers = new Headers();\r\n\t\t//console.log(\"groupwise unsubscription for \"+userName);\r\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n        let options = new RequestOptions({ headers: headers });\r\n\t\tlet urlSearchParams = new URLSearchParams();\r\n        urlSearchParams.append('userName', userName);\r\n\t\tlet body = urlSearchParams.toString();\r\n          return this.http.post('analytics/groupWiseUnsubscription',body,options)\r\n\t\t .map(res => res.json())\r\n\t\t .catch(this.handleError);;     \r\n  }\r\n\r\n  private extractData(res: Response) {     \r\n    let body = res.json();\r\n    return body.data || { };\r\n  }\r\n  \r\n\r\n  private handleError (error: Response | any) {\r\n    // In a real world app, we might use a remote logging infrastructure\r\n    //console.log(error);\r\n    let errMsg: string;\r\n    if (error instanceof Response) {\r\n      const body = error.json() || '';\r\n      const err = body.error || JSON.stringify(body);\r\n      errMsg = `${error.status} - ${err}`;\r\n    } else {\r\n      errMsg = error.message ? error.message : error.toString();\r\n    }\r\n    //console.error(errMsg);\r\n    return Observable.throw(errMsg);\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/analytics/analytics.service.ts","import { Component, OnInit, Input } from '@angular/core';\r\n//import { LoginService } from \"../security/login/login.service\";\r\n//import { User } from '../security/model/user';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { GlobalService } from '../core/global.service';\r\nimport { ChartReadyEvent } from 'ng2-google-charts';\r\nimport { ChartErrorEvent } from 'ng2-google-charts';\r\nimport { ChartSelectEvent } from 'ng2-google-charts';\r\n\r\n@Component({\r\n  selector: 'tab',\r\n  styles: [`\r\n    .pane{\r\n      padding: 2em;\r\n    }\r\n  `],\r\n  template: `\r\n    <div [hidden]=\"!active\" class=\"pane\">\r\n\t\t<google-chart [data]='pieChartOptions'></google-chart>\r\n    </div>\r\n  `\r\n})\r\nexport class Tab {\r\n  @Input('tabTitle') title: string;\r\n  @Input() active = false;\r\n  \r\n  public selectEvent: ChartSelectEvent;\r\n\r\n  public columnChartOptions:any =  {\r\n    chartType: 'ColumnChart',\r\n    dataTable: [\r\n      ['Country', 'Performance', 'Profits'],\r\n      ['Germany', 700, 1200],\r\n      ['USA', 300, 600],\r\n      ['Brazil', 400, 500],\r\n      ['Canada', 500, 1000],\r\n      ['France', 600, 1100],\r\n      ['RU', 800, 1000]\r\n    ],\r\n    options: {title: 'Countries'}\r\n  };\r\n\r\n  public pieChartOptions:any =  {\r\n    chartType: 'PieChart',\r\n    dataTable: [\r\n      ['Task', 'Hours per Day'],\r\n      ['Work',     11],\r\n      ['Eat',      2],\r\n      ['Commute',  2],\r\n      ['Watch TV', 2],\r\n      ['Sleep',    7]\r\n    ],\r\n    options: \r\n\t{\r\n\t\ttitle: 'Total Summary',\r\n\t\tis3D: true,\r\n\t\theight:300,\r\n\t\tchartArea:\r\n\t\t{\r\n\t\t\tleft:1\r\n\t\t}\r\n\t}\r\n  };\r\n\r\n  public gaugeChartOptions:any =  {\r\n    chartType: 'Gauge',\r\n    dataTable: [\r\n      ['Label', 'Value'],\r\n      ['Value', 1.78]\r\n    ],\r\n    options: {\r\n      animation: {easing: 'out'},\r\n      width: 150, height: 150,\r\n      greenFrom: 1, greenTo: 4,\r\n      minorTicks: 5,\r\n      min: 0, max: 5,\r\n      majorTicks: ['0', '1', '2', '3', '4', '5'],\r\n      greenColor: '#d0e9c6'\r\n    }\r\n  };\r\n\r\n  public scatterChartOptions:any = {\r\n    chartType: 'ScatterChart',\r\n    dataTable: [\r\n      ['Age', 'Weight'],\r\n      [ 8,      12],\r\n      [ 4,      5.5],\r\n      [ 11,     14],\r\n      [ 4,      5],\r\n      [ 3,      3.5],\r\n      [ 6.5,    7]\r\n    ],\r\n    options: {\r\n      title: 'Age vs. Weight comparison',\r\n      hAxis: {title: 'Age', minValue: 0, maxValue: 15},\r\n      vAxis: {title: 'Weight', minValue: 0, maxValue: 15},\r\n      legend: 'none'\r\n    }\r\n  };\r\n\r\n public timelineChartOptions:any =  {\r\n    chartType: 'Timeline',\r\n    dataTable: [\r\n      ['Name', 'From', 'To'],\r\n      [ 'Washington', new Date(1789, 3, 30), new Date(1797, 2, 4) ],\r\n      [ 'Adams',      new Date(1797, 2, 4),  new Date(1801, 2, 4) ],\r\n      [ 'Jefferson',  new Date(1801, 2, 4),  new Date(1809, 2, 4) ]\r\n    ]\r\n }\r\n\r\n public lineChartOptions:any =  {\r\n    chartType: 'LineChart',\r\n    dataTable: [\r\n      ['Year', 'Sales', 'Expenses'],\r\n      ['2004',  1000,      400],\r\n      ['2005',  1170,      460],\r\n      ['2006',  660,       1120],\r\n      ['2007',  1030,      540]\r\n    ],\r\n    options: {title: 'Company Performance'}\r\n  };\r\n\r\n public myClick():void {\r\n    // forces a reference update (otherwise angular doesn't detect the change)\r\n    this.columnChartOptions = Object.create(this.columnChartOptions);\r\n    for (let i = 1; i < 7; i++) {\r\n      this.columnChartOptions.dataTable[i][1] = Math.round(\r\n        Math.random() * 1000);\r\n      this.columnChartOptions.dataTable[i][2] = Math.round(\r\n        Math.random() * 1000);\r\n    }\r\n  }\r\n\r\n  public ready(event: ChartReadyEvent) {\r\n    console.log(event.message);\r\n  }\r\n\r\n  public error(event: ChartErrorEvent) {\r\n    console.error(event);\r\n  }\r\n\r\n  public select(event: ChartSelectEvent) {\r\n    this.selectEvent = event;\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/analytics/tab.component.ts","import { Component, OnInit,ContentChildren, QueryList, AfterContentInit  } from '@angular/core';\r\n//import { LoginService } from \"../security/login/login.service\";\r\n//import { User } from '../model/user';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { GlobalService } from '../core/global.service';\r\nimport { Tab } from './tab.component';\r\n\r\n@Component({\r\nselector: 'tabs',\r\n  template:`\r\n    <ul class=\"nav nav-tabs\">\r\n      <li *ngFor=\"let tab of tabs\">\r\n        <h5 (click)=\"selectTab(tab)\" [class.active]=\"tab.active\">{{tab.title}}</h5>\r\n      </li>\r\n    </ul>\r\n    <ng-content></ng-content>\r\n  `,\r\n  styles: [`\r\n    ul {\r\n\t\tbackground:#19334d;\r\n\t\tbox-shadow: 4px 4px 9px grey;\r\n\t\t/*border: 2px solid #19334d;\r\n\t\tborder-radius: 5px;*/\r\n\t\t\r\n\t}\r\n    li h5 {\r\n\t\tcursor:pointer; cursor:hand;\r\n\t}\r\n    ul li h5{\r\n      padding: 0.5em 2em;\r\n\t  border-right: 1px solid white;\r\n\t  color:white;\r\n    }\r\n  `],\r\n})\r\nexport class Tabs implements AfterContentInit {\r\n\r\n  @ContentChildren(Tab) tabs: QueryList<Tab>;\r\n  \r\n  // contentChildren are set\r\n  ngAfterContentInit() {\r\n    // get all active tabs\r\n    let activeTabs = this.tabs.filter((tab)=>tab.active);\r\n    \r\n    // if there is no active tab set, activate the first\r\n    if(activeTabs.length === 0) {\r\n      this.selectTab(this.tabs.first);\r\n    }\r\n  }\r\n  \r\n  selectTab(tab: Tab){\r\n    // deactivate all tabs\r\n    this.tabs.toArray().forEach(tab => tab.active = false);\r\n    \r\n    // activate the tab the user has clicked on.\r\n    tab.active = true;\r\n  }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/analytics/tabs.component.ts","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home';\r\nimport { DefaultComponent } from './default';\r\nimport { LoginComponent } from './security/login';\r\nimport { DashboardComponent } from './dashboard';\r\nimport { UserRoleComponent } from './security/user-role';\r\nimport { UserGroupComponent } from './security/user-group';\r\nimport { UserAccountComponent } from './security/user-account';\r\nimport { GroupComponent } from './email/group/group.component';\r\nimport { ContactComponent } from './email/contact/contact.component';\r\nimport { EmailComponent } from './email/email/email.component';\r\nimport { EmailServerComponent } from './email/server/emailserver.component';\r\nimport {ChangePasswordComponent} from './security/change-password';\r\nimport {AnalyticsComponent} from './analytics/analytics.root.component';\r\nimport {FileUploadComponent} from './email/contact/fileupload.component';\r\nimport { RegistrationComponent } from './security/registration';\r\nimport { AccountApprovalComponent} from './security/account-approval/accountapproval.component';\r\n\r\nconst routes: Routes = [ \r\n  {path:'',component:DefaultComponent},\r\n  {path:'send_email',component:EmailComponent},\r\n  {path:'contacts',component:ContactComponent},\r\n  {path:'groups',component:GroupComponent},\r\n  {path:'servers',component:EmailServerComponent},\r\n  {path:'user_roles',component:UserRoleComponent},\r\n  {path:'user_accounts',component:UserAccountComponent},\r\n  {path:'user_groups',component:UserGroupComponent},\r\n  {path:'dashboard',component:DashboardComponent},\r\n  {path:'appLogin',component:LoginComponent},\r\n  {path:'changePassword',component:ChangePasswordComponent},\r\n  {path:'analytics',component:AnalyticsComponent},\r\n  {path:'bulk_upload',component:FileUploadComponent},\r\n  {path:'appRegister',component:RegistrationComponent},\r\n  {path:'account_approval',component:AccountApprovalComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes,{ useHash: true })],\r\n  exports: [RouterModule],\r\n  providers: []\r\n})\r\nexport class EmailAppRoutingModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/app-routing.module.ts","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  template: '<home-comp>loading</home-comp>'\r\n  //template: '<upload></upload>'\r\n})\r\nexport class AppComponent {\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule,JsonpModule } from '@angular/http';\r\nimport { MaterialModule } from '@angular/material';\r\nimport { AppComponent } from './app.component';\r\nimport { EmailAppRoutingModule } from './app-routing.module';\r\nimport { HomeComponent } from './home/home.component';\r\n//import { FileUploadComponent } from './email/contact/fileupload.component';\r\nimport './rxjs-extensions';\r\nimport 'rxjs/Rx';\r\nimport { DefaultComponent } from './default/default.component';\r\n//import { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SecurityModule } from './security/security.module';\r\nimport { EmailModule } from './email/email.module';\r\nimport { DashboardModule } from './dashboard/dashboard.module';\r\nimport {GlobalService} from './core/global.service';\r\nimport {AuthorizationService} from './core/authorization.service';\r\nimport {Ng2GoogleChartsModule} from 'ng2-google-charts';\r\nimport {Tab} from './analytics/tab.component';\r\nimport {Tabs} from './analytics/tabs.component';\r\nimport {AnalyticsComponent} from './analytics/analytics.root.component';\r\nimport { Uploader } from 'angular2-http-file-upload';\r\n//import { DataTableModule,SharedModule } from 'primeng/primeng';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    DefaultComponent,\r\n   // DashboardComponent,\r\n\t//FileUploadComponent,\r\n\tTab,\r\n\tTabs,\r\n    AnalyticsComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule,JsonpModule,\r\n    MaterialModule.forRoot(),\r\n    EmailAppRoutingModule,\r\n    SecurityModule,\r\n    EmailModule,\r\n    DashboardModule,\r\n    //DataTableModule,SharedModule,\r\n\t  Ng2GoogleChartsModule\r\n  ],\r\n  providers: [GlobalService,AuthorizationService,Uploader],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/app.module.ts","import { User } from '../security/model/user';\r\nimport { Injectable } from '@angular/core';\r\nimport { GlobalService } from './global.service';\r\n\r\n@Injectable()\r\nexport class AuthorizationService {\r\n\r\n    constructor(private globalService: GlobalService) {\r\n    }\r\n\r\n    isUserHasRole(role: string) {\r\n        if (this.globalService.loggedInUser) {\r\n\r\n            //console.log(\"Check for role : \"+role+\" | has access : \"+this.globalService.loggedInUser.uiRoles.indexOf(role));\r\n            if (this.globalService.loggedInUser.userType === 'ACC_TYPE_SUPER_ADMIN') {\r\n                //console.log(\"Super admin found.. roles available by default\");\r\n                return true;\r\n            } else if (this.globalService.loggedInUser.uiRoles.indexOf(role) >= 0) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isUserAdmin()\r\n    {\r\n        if (this.globalService.loggedInUser.userType === 'ACC_TYPE_SUPER_ADMIN' ||this.globalService.loggedInUser.userType === 'ACC_TYPE_ADMIN') {\r\n                //console.log(\"Super admin found.. roles available by default\");\r\n                return true;\r\n            }\r\n            else\r\n            {\r\n                return false;\r\n            }\r\n    }\r\n\r\n    isUserSuperAdmin()\r\n    {\r\n        if (this.globalService.loggedInUser.userType === 'ACC_TYPE_SUPER_ADMIN') {\r\n                //console.log(\"Super admin found.. roles available by default\");\r\n                return true;\r\n            }\r\n        else\r\n        {\r\n            return false;\r\n        }    \r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/core/authorization.service.ts","import { User } from '../security/model/user';\r\nimport { PageLink } from '../security/model/pagelink';\r\nimport { Injectable }     from '@angular/core';\r\n\r\n@Injectable()\r\nexport class GlobalService {\r\n  public loggedInUser:User;\r\n  public userLoggedIn:boolean;\r\n  public pageLinks:PageLink[];\r\n\r\n  constructor () { \r\n  }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/core/global.service.ts","export class BaseEntity {\r\n    public id: number;\r\n    public objectId: number;\r\n    public version: number;\r\n    public lastUpdatedDate: Date;\r\n    public lastUpdatedUser: string;\r\n    public creationDate: Date;\r\n    public createdUser: string;\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/core/model/base.entity.ts","exports = module.exports = require(\"../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#summary-left,#summary-right\\r\\n{\\r\\n\\tpadding:5px;\\r\\n}\\r\\n\\r\\n#summary-left h4,#summary-right h4 {\\r\\n\\tcolor:#2556B9;\\r\\n}\\r\\n\\r\\n#summary-left h6,#summary-right h6 {\\r\\n\\tcolor:#2198CB;\\r\\n}\\r\\n\\r\\n#summary-left {\\r\\n\\tdisplay:inline-block;\\r\\n\\twidth:50%;\\r\\n}\\r\\n#summary-right {\\r\\n\\tdisplay:inline-block;\\r\\n\\tposition:relative;\\r\\n\\twidth:44%;\\r\\n\\tpadding-left:10%;\\r\\n}\\r\\n\\r\\n#summaryContainer {\\r\\n\\toverflow:hidden;\\r\\n}\\r\\n\\r\\ntable tr\\r\\n{\\r\\n    padding:7px;\\r\\n}\\r\\n\\r\\n#chart {\\r\\n\\tdisplay: inline-block;\\r\\n    width: 52%;\\r\\n    padding-top: 1.5%;\\r\\n}\\r\\n#tabularData {\\r\\n\\tdisplay: inline-block;\\r\\n    position: absolute;\\r\\n    width: 46%;\\r\\n    margin-top: 20px;\\r\\n    padding-left: 7.5%;\\r\\n}\\r\\n\\r\\n#tabularData h4 {\\r\\n\\tcolor:#2556B9;\\r\\n}\\r\\n\\r\\n#tabularData table {\\r\\n\\twidth:98%;\\r\\n}\\r\\n\\r\\n#tabularData table thead tr {\\r\\n\\tbackground-color:#604688;\\r\\n\\tcolor:white;\\r\\n}\\r\\n\\r\\n#tabularData table tr td {\\r\\n\\tpadding:6px;\\r\\n}\\r\\n#tabularData table tr.totalreach {\\r\\n\\twidth:45%;\\r\\n\\tbackground-color:#F7F7F9;\\r\\n}\\r\\n\\r\\n#tabularData table tr.odd {\\r\\n\\tbackground-color:#F7F7F9;\\r\\n}\\r\\n\\r\\n#tabularData table tr.even {\\r\\n\\tbackground-color:#FEFDFE;\\r\\n}\\r\\n\\r\\n#tabularData table tr.clicks {\\r\\n\\twidth:45%;\\r\\n\\tbackground-color:#FEFDFE;\\r\\n}\\r\\n\\r\\n#tabularData table tr.unsubscribe {\\r\\n\\twidth:45%;\\r\\n\\tbackground-color:#F7F7F9;\\r\\n}\\r\\n\\r\\nmd-card-content {\\r\\n\\theight:100%;\\r\\n\\toverflow:hidden;\\r\\n}\\r\\nmd-card {\\r\\nbox-shadow: -7px 28px 66px -25px rgba(0,0,0,0.75);\\r\\nmargin-top:2vh;\\r\\nbackground:white;\\r\\nborder-radius: 12px 12px 12px 12px;\\r\\n-moz-border-radius: 12px 12px 12px 12px;\\r\\n-webkit-border-radius: 12px 12px 12px 12px;\\r\\nborder: 0px solid #000000;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/dashboard/dashboard.component.css\n// module id = ../../../../../src/app/dashboard/dashboard.component.css\n// module chunks = 0","module.exports = \"<p-growl [value]=\\\"msgs\\\"></p-growl>\\r\\n<script src=\\\"https://www.gstatic.com/charts/loader.js\\\"></script>\\r\\n<script type=\\\"text/javascript\\\" src=\\\"https://www.google.com/jsapi\\\"></script>\\r\\n<script type=\\\"text/javascript\\\">        \\r\\n  google.load('visualization', '1.1', {\\r\\n    'packages': ['corechart','bar']\\r\\n  });\\r\\n  \\r\\n</script>\\r\\n<div class=\\\"dashboardMainContainer\\\" style=\\\"min-height:110vh;\\\">\\r\\n<md-card class=\\\"app-input-section\\\">\\r\\n\\t<div id=\\\"refresh-button\\\">\\r\\n\\t\\t\\t<!--button type=\\\"submit\\\" class=\\\"btn btn-success btn-s\\\" (click)=\\\"refreshStats()\\\">Refresh Statistics</button-->\\r\\n\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-success btn-s\\\" (click)=\\\"refreshStats()\\\" ripple-radius style=\\\"float:right;margin-right:20px;\\\">Refresh Statistics</button>\\r\\n\\t</div>\\r\\n\\t\\t\\t<md-card-title>\\r\\n\\t\\t\\t\\t\\t<span><img src=\\\"../../app/resources/images/jobstatsicon.png\\\" style=\\\"width:65px;height:60px;margin-right:15px;opacity:100;\\\"/></span><span>Job Statistics (Queued)</span>\\r\\n\\t\\t\\t</md-card-title>\\r\\n\\t\\t\\t<md-card-content>\\r\\n\\t\\t\\t\\t<p-dataTable [value]=\\\"jobstatusdataQueued\\\" [rows]=\\\"10\\\" [paginator]=\\\"true\\\"\\r\\n        [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[10,20]\\\" selectionMode=\\\"single\\\" [(selection)]=\\\"selectedJob\\\" [responsive]=\\\"true\\\" [contextMenu]=\\\"cm\\\">\\r\\n        <header>Job Status Statistics (Queued)</header>\\r\\n\\t\\t\\t\\t<header>Right click on a row to request cancellation</header>\\r\\n        <p-column  field=\\\"jobId\\\" header=\\\"Job ID\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\"></p-column>\\r\\n        <p-column  field=\\\"batchId\\\" header=\\\"Batch Id\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\"></p-column>\\r\\n        <p-column  field=\\\"requestId\\\" header=\\\"Request ID\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\"></p-column>\\r\\n        <p-column  field=\\\"campaignName\\\" header=\\\"Campaign Name\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\"></p-column>\\r\\n\\t\\t\\t\\t<p-column  field=\\\"emailCount\\\" header=\\\"Total Contacts\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\"></p-column>\\r\\n\\t\\t\\t\\t<p-column  field=\\\"sender\\\" header=\\\"Sender\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\"></p-column>\\r\\n\\t\\t\\t\\t<p-column  field=\\\"status\\\" header=\\\"Status\\\" [sortable]=\\\"true\\\" [filter]=\\\"false\\\"></p-column>\\r\\n        <footer>\\r\\n        </footer>\\r\\n      </p-dataTable>\\r\\n\\t\\t\\t<p-contextMenu #cm [model]=\\\"datatable_menu_items\\\"></p-contextMenu>\\r\\n\\t\\t\\t</md-card-content>\\r\\n\\t\\t\\t<br><br>\\r\\n\\t\\t\\t<md-card-title>\\r\\n\\t\\t\\t\\t\\t<span><img src=\\\"../../app/resources/images/jobcompletedicon.png\\\" style=\\\"width:60px;height:60px;margin-right:15px;opacity:100;\\\"/></span><span> Job Statistics (Completed)</span>\\r\\n\\t\\t\\t</md-card-title>\\r\\n\\t\\t\\t<md-card-content>\\r\\n\\t\\t\\t\\t<p-dataTable [value]=\\\"jobstatusdataCompleted\\\" [rows]=\\\"10\\\" [paginator]=\\\"true\\\"\\r\\n        [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[10,20]\\\" selectionMode=\\\"single\\\" [responsive]=\\\"true\\\">\\r\\n        <header>Job Status Statistics (Completed)</header>\\r\\n        <p-column field=\\\"jobId\\\" header=\\\"Job ID\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\"></p-column>\\r\\n        <p-column field=\\\"batchId\\\" header=\\\"Batch Id\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\"></p-column>\\r\\n        <p-column field=\\\"requestId\\\" header=\\\"Request ID\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\"></p-column>\\r\\n        <p-column field=\\\"campaignName\\\" header=\\\"Campaign Name\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\"></p-column>\\r\\n\\t\\t\\t\\t<p-column field=\\\"emailCount\\\" header=\\\"Total Contacts\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\"></p-column>\\r\\n\\t\\t\\t\\t<p-column field=\\\"sender\\\" header=\\\"Sender\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\"></p-column>\\r\\n\\t\\t\\t\\t<p-column field=\\\"status\\\" header=\\\"Status\\\" [sortable]=\\\"true\\\" [filter]=\\\"false\\\"></p-column>\\r\\n        <footer>\\r\\n        </footer>\\r\\n      </p-dataTable>\\r\\n\\t\\t\\t</md-card-content>\\r\\n\\t\\t\\t<br><br>\\r\\n\\t\\t\\t\\t\\t\\t<md-card-title>\\r\\n\\t\\t\\t\\t\\t<span><img src=\\\"../../app/resources/images/jobfailedicon.png\\\" style=\\\"width:60px;height:60px;margin-right:15px;opacity:100;\\\"/></span><span>Job Statistics (Failed)</span>\\r\\n\\t\\t\\t</md-card-title>\\r\\n\\t\\t\\t<md-card-content>\\r\\n\\t\\t\\t\\t<p-dataTable [value]=\\\"jobstatusdataFailed\\\" [rows]=\\\"10\\\" [paginator]=\\\"true\\\"\\r\\n        [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[10,20]\\\" selectionMode=\\\"single\\\" [responsive]=\\\"true\\\">\\r\\n        <header>Job Status Statistics (Failed)</header>\\r\\n        <p-column field=\\\"jobId\\\" header=\\\"Job ID\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\"></p-column>\\r\\n        <p-column field=\\\"batchId\\\" header=\\\"Batch Id\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\"></p-column>\\r\\n        <p-column field=\\\"requestId\\\" header=\\\"Request ID\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\"></p-column>\\r\\n        <p-column field=\\\"campaignName\\\" header=\\\"Campaign Name\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\"></p-column>\\r\\n\\t\\t\\t\\t<p-column field=\\\"emailCount\\\" header=\\\"Total Contacts\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\"></p-column>\\r\\n\\t\\t\\t\\t<p-column field=\\\"sender\\\" header=\\\"Sender\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\"></p-column>\\r\\n\\t\\t\\t\\t<p-column field=\\\"status\\\" header=\\\"Status\\\" [sortable]=\\\"true\\\" [filter]=\\\"false\\\"></p-column>\\r\\n        <footer>\\r\\n        </footer>\\r\\n      </p-dataTable>\\r\\n\\t\\t\\t</md-card-content>\\r\\n\\t\\t\\t<br><br>\\r\\n\\t\\t\\t<div *ngIf=\\\"admin\\\">\\r\\n\\t\\t\\t<md-card-title>\\r\\n\\t\\t\\t\\t\\t<span><img src=\\\"../../app/resources/images/blockedcontacticon.png\\\" style=\\\"width:60px;height:60px;margin-right:15px;opacity:100;\\\"/></span><span>Blocked / Bounced Contacts</span>\\r\\n\\t\\t\\t</md-card-title>\\r\\n\\t\\t\\t<md-card-content>\\r\\n\\t\\t\\t\\t<p-dataTable [value]=\\\"blockedContacts\\\" [rows]=\\\"10\\\" [paginator]=\\\"true\\\"\\r\\n        \\t[pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[10,20]\\\" selectionMode=\\\"single\\\" [responsive]=\\\"true\\\">\\r\\n        \\t<header>Contacts Blocked due to Bounces / Failures</header>\\r\\n        \\t<p-column field=\\\"firstName\\\" header=\\\"First Name\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\"></p-column>\\r\\n        \\t<p-column field=\\\"lastName\\\" header=\\\"Last Name\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\"></p-column>\\r\\n        \\t<p-column field=\\\"email\\\" header=\\\"Email\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\"></p-column>\\r\\n        \\t<p-column field=\\\"reason\\\" header=\\\"Reason\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\"></p-column>\\r\\n\\t\\t\\t\\t\\t<p-column field=\\\"responseCode\\\" header=\\\"Response Code\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\"></p-column>\\r\\n        \\t<footer>\\r\\n        \\t</footer>\\r\\n      \\t</p-dataTable>\\r\\n\\t\\t\\t</md-card-content>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<br><br>\\r\\n      <md-card-title>\\r\\n\\t\\t\\t\\t<span><img src=\\\"../../app/resources/images/summary.png\\\" style=\\\"width:60px;height:60px;margin-right:15px;opacity:100;\\\"/></span><span>Recent Campaign Summary</span>\\r\\n\\t  </md-card-title>\\r\\n      <md-card-content>\\r\\n              <p> See your most recent campaign summary here </p>\\r\\n\\t\\t\\t  <div id=\\\"summaryContainer\\\">\\t\\t\\t  \\r\\n\\t\\t\\t\\t  <div id=\\\"summary-left\\\">\\r\\n\\t\\t\\t\\t\\t<h4 #emailSubject></h4>\\r\\n\\t\\t\\t\\t\\t<h6 #sentOnDate></h6>\\r\\n\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t\\t  <div id=\\\"summary-right\\\">\\r\\n\\t\\t\\t\\t\\t<h4> Statistical Summary </h4>\\r\\n\\t\\t\\t\\t\\t<p #description>\\r\\n\\t\\t\\t\\t\\t\\tThis is a section that gives a summarized text for visitor campaign held on May 01, 2017. The campaign was targeted to visitors, default and prime contact groups. The campaign was completed successfully with a bounce percentage of 3%\\r\\n\\t\\t\\t\\t\\t</p>\\r\\n\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t  </div>\\r\\n\\t\\t\\t  <div id=\\\"chartContainer\\\">\\r\\n\\t\\t\\t    <div id=\\\"chart\\\">\\r\\n\\t\\t\\t\\t\\t\\t<google-chart [data]='barChartOptions'></google-chart>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div id=\\\"tabularData\\\">\\r\\n\\t\\t\\t\\t\\t\\t<table>\\r\\n\\t\\t\\t\\t\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"odd\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>Statistical Analysis</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>Hit Percentage</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"totalreach\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<td>Total Reach</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<td>100%</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"clicks\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<td>Total clicks</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<td #clickPercentage></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"unsubscribe\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<td>Usubscribes</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<td #unsubscribePercentage></td>\\r\\n\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t</table>\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t  </div>\\r\\n      </md-card-content>\\r\\n\\t\\t\\t<md-card-title>\\r\\n\\t\\t\\t\\t<span><img src=\\\"../../app/resources/images/unsubscribedicon.png\\\" style=\\\"width:60px;height:60px;margin-right:15px;opacity:100;\\\"/></span><span>Recent Unsubscriptions</span>\\r\\n\\t  \\t</md-card-title>\\r\\n\\t\\t\\t<md-card-content>\\r\\n\\t\\t\\t  <p> Check how many people have opted out of this portal </p>\\r\\n\\t\\t\\t  <div id=\\\"summaryContainer\\\">\\r\\n\\t\\t\\t\\t\\t<div id=\\\"summary-left\\\">\\r\\n\\t\\t\\t\\t\\t\\t<h4>Recent Unsubscription Statistics</h4>\\r\\n\\t\\t\\t\\t\\t\\t<h6>A graphical representation of number of unsubscriptions per day</h6>\\r\\n\\t\\t\\t\\t  </div>\\t  \\r\\n\\t\\t\\t\\t  <div id=\\\"summary-right\\\">\\r\\n\\t\\t\\t\\t\\t<h4> Unsubscription records </h4>\\r\\n\\t\\t\\t\\t\\t<p>\\r\\n\\t\\t\\t\\t\\t\\tThis is a section that gives a summary of recent unsubscribes for the last 60 days\\r\\n\\t\\t\\t\\t\\t</p>\\r\\n\\t\\t\\t\\t  </div>\\r\\n\\t\\t\\t  </div>\\r\\n\\t\\t\\t  <div id=\\\"chartContainer\\\">\\r\\n\\t\\t\\t  \\t<div id=\\\"chart\\\">\\r\\n\\t\\t\\t\\t\\t\\t<google-chart [data]='unsubscribeLineChartOptions'></google-chart>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div id=\\\"tabularData\\\">\\r\\n\\t\\t\\t\\t    <table>\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <td>Serial No</td>\\r\\n                        <td>Contact Name</td>\\r\\n                        <td>Email</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>Date</td>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngIf=\\\"noDataFound\\\">\\r\\n                        <td colspan=\\\"8\\\">No unsubscriptions found</td>            \\r\\n                    </tr>\\r\\n                        <tr *ngFor=\\\"let data of unsubscribes\\\" [ngClass]=\\\"getClass(data.serialNo)\\\">\\r\\n                            <td>{{data.serialNo}}</td>\\r\\n                            <td>{{data.firstName}} {{data.lastName}}</td>\\r\\n                            <td>{{data.email}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{data.unsubscribedOn}}</td>\\r\\n                        </tr>\\r\\n                </tbody>\\r\\n            </table>\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t  </div>\\r\\n      </md-card-content>\\r\\n</md-card>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/dashboard/dashboard.component.html\n// module id = ../../../../../src/app/dashboard/dashboard.component.html\n// module chunks = 0","import { Component, OnInit } from '@angular/core';\r\nimport { AnalyticsService } from \"../analytics/analytics.service\";\r\nimport { RecentChartSummary } from '../analytics/model/RecentChartSummary';\r\nimport { RecentUnsubscribes } from '../analytics/model/RecentUnsubscribes';\r\nimport { RecentUnsubscribedCount } from '../analytics/model/RecentUnsubscribedCount';\r\nimport { JobStatusData } from '../analytics/model/JobStatusData';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { GlobalService } from '../core/global.service';\r\nimport { AuthorizationService } from '../core/authorization.service';\r\nimport { Observable }     from 'rxjs/Observable';\r\nimport { ChartReadyEvent } from 'ng2-google-charts';\r\nimport { ViewChild, ElementRef } from '@angular/core';\r\nimport { Message } from \"../message\";\r\nimport { BlockedContacts } from '../analytics/model/BlockedContacts';\r\nimport { MenuItem } from \"primeng/primeng\";\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css','../email/contact/fileupload.component.css'],\r\n  providers: [AnalyticsService]\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  userName:string\r\n  admin:boolean=false;\r\n  isAdmin:string;\r\n  constructor(private AnalyticsService: AnalyticsService, private router: Router,private globalService: GlobalService,private authService:AuthorizationService) {\r\n\t\t  \r\n\t\tlet user = this.globalService.loggedInUser.loggedInUserName;\r\n\t\tif (this.globalService.loggedInUser.userType === 'ACC_TYPE_SUPER_ADMIN' || this.globalService.loggedInUser.userType === 'ACC_TYPE_ADMIN') \r\n\t\t{\r\n\t\t\tthis.admin = true;\r\n\t\t\tthis.isAdmin = \"true\";\r\n\t\t\tthis.getBlockedContacts();\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tthis.isAdmin = \"false\";\r\n\t\t}\r\n\r\n\t\tthis.recentChartSummary(user);\r\n\t\tthis.recentUnsubscribedCount(60);\r\n\t\tthis.recentUnsubscribes(60);\r\n\t\tthis.getJobStatusDump(user);\r\n\r\n\t\t//console.log(\"User Type : \"+this.globalService.loggedInUser.userType);\r\n\r\n\r\n  }\r\n  summary:RecentChartSummary\r\n  unsubscribes:RecentUnsubscribes[]\r\n  unsubscribedCount:RecentUnsubscribedCount[]\r\n  dataSet:any[]\r\n  msgs: Message[] = [];\r\n  noDataFound:boolean = false\r\n  //jobstatusdata:JobStatusData[]\r\n  blockedContacts:BlockedContacts[]\r\n  jobstatusdataQueued:JobStatusData[]=[];\r\n  jobstatusdataCompleted:JobStatusData[]=[];\r\n  jobstatusdataFailed:JobStatusData[]=[];\r\n  datatable_menu_items: MenuItem[];\r\n  selectedJob:JobStatusData\r\n\r\n  getBlockedContacts()\r\n  {\r\n\t this.AnalyticsService.getBlockedContacts()\r\n \t\t\t.subscribe((data) => {\r\n                 this.blockedContacts = data;\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror => {\r\n\t\t\t\t\t});\t\r\n  }\r\n\r\n  getJobStatusDump(userName:string)\r\n  {\r\n\t   this.AnalyticsService.getJobStatusData(userName)\r\n \t\t\t.subscribe((data) => {\r\n                 //this.jobstatusdata = data;\r\n\t\t\t\t\t\tfor(let entry of data)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tif(entry.status==='COMPLETED')\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.jobstatusdataCompleted.push(entry);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if(entry.status==='QUEUED')\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.jobstatusdataQueued.push(entry);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if(entry.status==='FAILED')\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.jobstatusdataFailed.push(entry);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\terror => {\r\n\t\t\t\t\t});\t\r\n  }\r\n\r\n  cancelJob(data:JobStatusData)\r\n  {\r\n\t  this.AnalyticsService.cancelJob(data.batchId,data.requestId)\r\n\t  .subscribe((data)=>{\r\n\t\t\t this.msgs.push({ severity: \"info\", summary: \"Job Cancelled\", detail: \"The cancellation request was procesed successfully\" });\r\n\t  },\r\n\t  error => {\r\n\t\t\t this.msgs.push({ severity: \"error\", summary: \"Failed to process cancellation request\", detail: error });\r\n\t  });\r\n  }\r\n\r\n  refreshStats()\r\n  {\r\n\t    this.clear();\r\n\t  \tlet user = this.globalService.loggedInUser.loggedInUserName;\r\n\t\tthis.getJobStatusDump(user);\r\n  }\r\n\r\n  clear()\r\n  {\r\n\t  this.jobstatusdataQueued.splice(0);\r\n\t  this.jobstatusdataCompleted.splice(0);\r\n\t  this.jobstatusdataFailed.splice(0);\r\n  }\r\n  \r\n  getClass(id:number)\r\n  {\r\n\t  if(id%2===0)\r\n\t  {\r\n\t\t // console.log(\"id \"+id+\" Return class as even\");\r\n\t\t  return \"even\";\r\n\t  }\r\n\t  else\r\n\t  {\r\n\t\t // console.log(\"id \"+id+\"Return class as odd\");\r\n\t\t\treturn \"odd\";\r\n\t  }\r\n  }\r\n\r\n  ngOnInit() {\r\n\t   this.datatable_menu_items = [\r\n            {label: 'Cancel', icon: 'fa-close', command: (event) => this.cancelJob(this.selectedJob)}\r\n        ];\r\n  }\r\n  \r\n  \t@ViewChild('sentOnDate') sentOnDate: ElementRef;\r\n\t@ViewChild('emailSubject') emailSubject: ElementRef;\r\n\t@ViewChild('clickPercentage') clickPercentage: ElementRef;\r\n\t@ViewChild('unsubscribePercentage') unsubscribePercentage: ElementRef;\r\n\r\n    loadData(sentOn,subject,clickPercentage,unsubscribePercentage) {\r\n        this.sentOnDate.nativeElement.innerHTML = sentOn;\r\n\t\tthis.emailSubject.nativeElement.innerHTML = subject;\r\n\t\tthis.clickPercentage.nativeElement.innerHTML = clickPercentage+'%';\r\n\t\tthis.unsubscribePercentage.nativeElement.innerHTML = unsubscribePercentage+'%';\t\t\r\n    }\r\n  \r\n  recentChartSummary(username: string){\r\n\t    \r\n    this.AnalyticsService.recentChartSummary(username)\r\n            .subscribe((data) => {\r\n                 this.summary = data;\r\n\t\t\tconsole.log(\"data: \",data);\t \r\n\t\t\tconsole.log(\"response : \"+this.summary.unsubscribes+\" | \"+this.summary.reach+\" | \"+this.summary.clicks);\r\n\t\t\tthis.myClick();\r\n\t\t\tthis.loadData(\"Sent on \"+this.summary.sentOn,this.summary.subject,this.summary.clickPercentage,this.summary.unsubscribePercentage);\r\n            },\r\n            error => {\r\n            });\t\t\r\n  };\r\n\r\n  recentUnsubscribes(age: number){\r\n\t    \r\n    this.AnalyticsService.recentUnsubscribes(age,this.isAdmin)\r\n            .subscribe((data) => {\r\n                 this.unsubscribes = data;\r\n\t\t\t\t if(this.unsubscribes.length===0)\r\n\t\t\t\t {\r\n\t\t\t\t\t this.noDataFound = true;\r\n\t\t\t\t }\r\n\t\t\tconsole.log(\"unsubscribes: \",data);\r\n            },\r\n            error => {\r\n\t\t\t\tthis.noDataFound = true;\r\n            });\t\t\r\n  };\r\n\r\n  recentUnsubscribedCount(age: number){\r\n\t    \r\n    this.AnalyticsService.recentUnsubscribedCount(age,this.isAdmin)\r\n            .subscribe((data) => {\r\n                 this.unsubscribedCount = data;\r\n\t\t\tconsole.log(\"unsubscribedCount: \",data);\r\n\t\t\tthis.myRecentUnsubscribedCountClick();\r\n            },\r\n            error => {\r\n            });\t\t\r\n  };\r\n  \r\n  public ready(event: ChartReadyEvent) {\r\n    console.log(\"Chart Ready\",event.message);\r\n  }\r\n\r\n  public myRecentUnsubscribedCountClick():void {\r\n\r\n\t  this.unsubscribeLineChartOptions = Object.create(this.unsubscribeLineChartOptions);\r\n\t  let i=0;\r\n\t  for(let entry of this.unsubscribedCount)\r\n\t  {\r\n\t\t\tthis.unsubscribeLineChartOptions.dataTable.push([entry.unsubscribedOn,entry.count]);\r\n\t  }\r\n\r\n  }\r\n  \r\n  public myClick():void {\r\n    // forces a reference update (otherwise angular doesn't detect the change)\r\n    this.barChartOptions = Object.create(this.barChartOptions);\r\n      this.barChartOptions.dataTable[1][1] = this.summary.reach;\r\n      this.barChartOptions.dataTable[2][1] = this.summary.clicks;\r\n\t  this.barChartOptions.dataTable[3][1] = this.summary.unsubscribes;\r\n  }\r\n\r\n  \tpublic unsubscribeLineChartOptions:any =  {\r\n\t\tchartType: 'LineChart',\r\n\t\tdataTable: [\r\n\t\t  [{label:'Date',type:'string'},{ label:'Nmber of Unsubscriptions',type:'number'}]\r\n\t\t],\r\n\t\toptions: {\r\n\t\t\ttitle: 'Recent Unsubscribes',\r\n\t\t\tanimation:\r\n\t\t\t{\r\n\t\t\t\tduration: 1000,\r\n\t\t\t\teasing: 'out',\r\n\t\t\t\tstartup:true\r\n\t\t\t},\r\n\t\t\tvAxis: \r\n\t\t\t{\r\n\t\t\t\ttitle: 'Count'\r\n\t\t\t},\r\n\t\t\thAxis: \r\n\t\t\t{\r\n\t\t\t\ttitle: 'Date'\r\n\t\t\t},\r\n\t\t\twidth:'95%',\r\n\t\t\theight:'350'\r\n\t\t}\r\n\t  };\r\n\t\r\n\t  public barChartOptions:any = {\r\n\t\t  \r\n\t\tchartType: 'BarChart',  \r\n\t\tdataTable: [\r\n\t\t\t['Metrics Type', 'Count'],\r\n\t\t\t['Total Reach', 0],\r\n\t\t\t['Total Clicks',0],\r\n\t\t\t['Unsubscribed',0]\r\n\t\t\r\n\t\t],\r\n\r\n\t\toptions:\r\n\t\t{\r\n\t\t\twidth:'95%',\r\n\t\t\tchartArea: { width: '65%',right:'15%',top:'1%' },\r\n\t\t\tbar: \r\n\t\t\t{ \r\n\t\t\t\tgroupWidth: '50%' \r\n\t\t\t},\r\n\t\t\tanimation:\r\n\t\t\t{\r\n\t\t\t\tduration: 1000,\r\n\t\t\t\teasing: 'out',\r\n\t\t\t\tstartup:true\r\n\t\t\t},\r\n\t\t\thAxis: {\r\n\t\t\t\ttitle: 'Count',\r\n\t\t\t\tminValue: 0,\r\n\t\t\t\ttextStyle: {\r\n\t\t\t\t\tbold: true,\r\n\t\t\t\t\tfontSize: 11,\r\n\t\t\t\t\tcolor: '#4d4d4d'\r\n\t\t\t\t},\r\n\t\t\t\ttitleTextStyle: {\r\n\t\t\t\t\tbold: true,\r\n\t\t\t\t\tfontSize: 12,\r\n\t\t\t\t\tcolor: '#4d4d4d'\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tvAxis: {\r\n\t\t\t\ttitle: 'Categories',\r\n\t\t\t\ttextStyle: {\r\n\t\t\t\t\tfontSize: 11,\r\n\t\t\t\t\tbold: true,\r\n\t\t\t\t},\r\n\t\t\t\ttitleTextStyle: {\r\n\t\t\t\t\tfontSize: 14,\r\n\t\t\t\t\tbold: true,\r\n\t\t\t\t\tcolor: '#848484'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}  \r\n\t  };\t\t\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/dashboard/dashboard.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MaterialModule } from '@angular/material';\r\nimport { DataTableModule, GrowlModule,SharedModule,Message,DialogModule} from 'primeng/primeng';\r\nimport { AnalyticsService } from '../analytics/analytics.service';\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { Ng2GoogleChartsModule } from 'ng2-google-charts';\r\nimport { ButtonModule } from 'primeng/primeng';\r\nimport { ContextMenuModule, MenuItem } from \"primeng/primeng\";\r\n\r\n@NgModule({\r\n    declarations:[DashboardComponent],\r\n    imports: \r\n        [\r\n            DataTableModule, \r\n            SharedModule,\r\n            CommonModule,\r\n            MaterialModule.forRoot(),\r\n            GrowlModule,\r\n            DialogModule,\r\n            Ng2GoogleChartsModule,\r\n            ButtonModule,\r\n            ContextMenuModule\r\n        ],\r\n    providers: [AnalyticsService]\r\n})\r\nexport class DashboardModule { }\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/dashboard/dashboard.module.ts","export * from './dashboard.component';\r\n\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/dashboard/index.ts","exports = module.exports = require(\"../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/css?family=Montserrat);\", \"\"]);\n\n// module\nexports.push([module.id, \"section {\\r\\n  height: 100vh;\\r\\n  position: relative;\\r\\n  width: 100%;\\r\\n}\\r\\nsection:nth-child(1) {\\r\\n  background-color: #FFF;\\r\\n}\\r\\nsection:nth-child(2) {\\r\\n  background-color: #FFF;\\r\\n}\\r\\nsection:nth-child(3) {\\r\\n  background-color: #fff;\\r\\n}\\r\\nsection h1 {\\r\\n  color: #000;\\r\\n  position: absolute;\\r\\n  font-size: 60px;  \\r\\n  -webkit-transform: translate(-50%, -50%);  \\r\\n          transform: translate(-50%, -50%);\\r\\n  top: 10%;\\r\\n  left: 50%;\\r\\nposition: absolute;\\r\\n  font-family: 'Montserrat', sans-serif;\\r\\n}\\r\\n\\r\\n.main-p{\\r\\n      top: 18%;\\r\\n    left: 30%;\\r\\n    position: absolute;\\r\\n}\\r\\n\\r\\n#section1{\\r\\n  background: url(/../../app/resources/images/content/cover_main.jpg);\\r\\n  background-repeat: no-repeat;\\r\\n  background-size: cover;\\r\\n  height: 100%;\\r\\n\\r\\n}\\r\\n\\r\\n#main-bt{\\r\\n    top: 25%;\\r\\n    left: 46%;\\r\\n    position: absolute;\\r\\n    width: 130px;\\r\\n    font-family: 'Montserrat', sans-serif;\\r\\n    padding: 10px 10px 10px 10px;\\r\\n    font-size: 15px;\\r\\n    background: #686868;\\r\\n}\\r\\n\\r\\n@media screen and (min-width: 480px) {\\r\\n    section h1 {\\r\\n        font-size: 21px;\\r\\n    }\\r\\n      .main-p{\\r\\n        left: 14%;\\r\\n        padding-right: 20px;\\r\\n      }\\r\\n}\\r\\n\\r\\n@media screen and (min-width: 760px) {\\r\\n    section h1 {\\r\\n        font-size: 39px;\\r\\n    }\\r\\n      .main-p{\\r\\n        left: 12%;\\r\\n      }\\r\\n\\r\\n      #main-bt{\\r\\n        left: 39%;\\r\\n      }\\r\\n}\\r\\n\\r\\n@media screen and (min-width: 970px) {\\r\\n    section h1 {\\r\\n        font-size: 50px;\\r\\n    }\\r\\n      .main-p{\\r\\n        left: 17%;\\r\\n      }\\r\\n\\r\\n}\\r\\n\\r\\n@media screen and (min-width: 1170px) {\\r\\n    section h1 {\\r\\n        font-size: 60px;\\r\\n    }\\r\\n      .main-p{\\r\\n        left: 29%;\\r\\n      }\\r\\n\\r\\n      #main-bt{\\r\\n        left: 45%;\\r\\n      }\\r\\n\\r\\n}\\r\\n\\r\\n@media screen and (min-width: 1920px) {\\r\\n    section h1 {\\r\\n        font-size: 60px;\\r\\n    }\\r\\n      .main-p{\\r\\n        left: 33%;\\r\\n      }\\r\\n\\r\\n      #main-bt{\\r\\n        left: 45%;\\r\\n      }\\r\\n\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.services-section {\\r\\n  text-align: center;\\r\\n  background: #101010;\\r\\n}\\r\\n\\r\\n.service-holder {\\r\\n  border: 1px solid transparent;\\r\\n  margin-bottom: 30px;\\r\\n  margin-top: 20px;\\r\\n  padding-bottom: 30px;\\r\\n  padding-top: 30px;\\r\\n  transition: all 0.3s ease;\\r\\n}\\r\\n\\r\\n.service-holder > div {\\r\\n  height: 140px;\\r\\n  width: 140px;\\r\\n  background-color: transparent;\\r\\n  border-bottom-left-radius: 50%;\\r\\n  border-bottom-left-radius: 50%;\\r\\n  border-bottom-right-radius: 50%;\\r\\n  border-bottom-right-radius: 50%;\\r\\n  border-top-left-radius: 50%;\\r\\n  border-top-left-radius: 50%;\\r\\n  border-top-right-radius: 50%;\\r\\n  border-top-right-radius: 50%;\\r\\n  color: #4c505e;\\r\\n  font-size: 30px;\\r\\n  line-height: 140px;\\r\\n  margin: 0 auto;\\r\\n  margin-bottom: 25px;\\r\\n}\\r\\n\\r\\n.service-holder > div > i {\\r\\n  font-size: 70px;\\r\\n  line-height: 140px; \\r\\n  transition: all 0.27s cubic-bezier(0.000, 0.000, 0.580, 1.000);\\r\\n}\\r\\n\\r\\n.service-holder > div > i:hover {\\r\\n  color: #898989;\\r\\n  font-size: 70px;\\r\\n  line-height: 140px;\\r\\n}\\r\\n\\r\\n.service-holder h4 {\\r\\n  color: #898989;\\r\\n  font-family: 'Raleway', sans-serif;\\r\\n  font-weight: 600;\\r\\n  letter-spacing: 4px;\\r\\n  text-transform: uppercase;\\r\\n}\\r\\n\\r\\n.service-holder p {\\r\\n  font-family: 'Montserrat', sans-serif;\\r\\n  color: #000;\\r\\n  letter-spacing: 1px;\\r\\n}\\r\\n\\r\\n.service-holder a {\\r\\n  color: #898989; \\r\\n  transition: all 0.27s cubic-bezier(0.000, 0.000, 0.580, 1.000);\\r\\n}\\r\\n\\r\\n.service-holder a:hover {\\r\\n  color: #898989;\\r\\n  text-decoration: none;\\r\\n}\\r\\n\\r\\n.col-centered {\\r\\n  display: inline-block;\\r\\n  float: none;\\r\\n  margin-left: -4px;\\r\\n  vertical-align: bottom;\\r\\n}\\r\\n\\r\\n.footer{\\r\\n  display: table;\\r\\n    background-color: #1b3049;\\r\\n    height: 75px;\\r\\n    position: fixed;\\r\\n    bottom: 0;\\r\\n    left: 0;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.footer p{\\r\\n      color: #fff;\\r\\n    padding-top: 25px;\\r\\n    float: right;\\r\\n    padding-right: 60px;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/default/default.component.css\n// module id = ../../../../../src/app/default/default.component.css\n// module chunks = 0","module.exports = \"<section>\\r\\n  <div class=\\\"col-md-12\\\" id=\\\"section1\\\">\\r\\n    <h1>Grow Your Business</h1>\\r\\n    <p class=\\\"main-p\\\">Streamline your business, help grow it. We offer you with the power of advertising to build your dreams. </p>\\r\\n    <a class=\\\"btn btn-primary\\\" id=\\\"main-bt\\\" href=\\\"#\\\" role=\\\"button\\\">Get Started</a>\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n\\r\\n<section id=\\\"services\\\" class=\\\"services-section\\\" style=\\\"height:auto;\\\">\\r\\n  <div class=\\\"container pt-50 pb-50\\\" style=\\\"padding-top:30px;\\\">\\r\\n    <div class=\\\"row\\\" style=\\\"margin-top:30px;\\\">\\r\\n      <div class=\\\"col-xs-12 col-sm-12 col-md-12 col-lg-12 title\\\">\\r\\n    <h1 style=\\\"font-size:40px; color:#000; margin-bottom:60px;\\\">We get things done faster</h1>\\r\\n        <div class=\\\"horizontal-gold\\\"></div>\\r\\n      </div>\\r\\n      </div>\\r\\n        <div class=\\\"row\\\" style=\\\"margin-top:60px; margin-bottom:60px;\\\">\\r\\n      <div class=\\\"col-xs-12 col-sm-6 col-md-3 col-lg-3 service-holder text-center col-centered\\\">\\r\\n        <div><i class=\\\"fa fa-mobile\\\" aria-hidden=\\\"true\\\" style='line-height: 130px;'></i></div>\\r\\n        <h4>Mobile Friendly</h4>\\r\\n        <p>Work with campaign even on the go with responsive interfaces, and mobile responsive templates look professional</p>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-xs-12 col-sm-6 col-md-3 col-lg-3 service-holder text-center col-centered\\\">\\r\\n        <div><i class=\\\"fa fa-bar-chart\\\" aria-hidden=\\\"true\\\"></i></div>\\r\\n        <h4>Easy Reporting</h4>\\r\\n        <p>Better reporting with real time data, get reporting for the campaign and imporve your business</p>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-xs-12 col-sm-6 col-md-3 col-lg-3 service-holder text-center col-centered\\\">\\r\\n        <div><i class=\\\"fa fa-envelope\\\" aria-hidden=\\\"true\\\"></i></div>\\r\\n        <h4>Emails Reach</h4>\\r\\n        <p>Maximum success rate of email reach, never miss a customer and build your reputation develop your business.</p>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-xs-12 col-sm-6 col-md-3 col-lg-3 service-holder text-center col-centered\\\">\\r\\n        <div><i class=\\\"fa fa-database\\\" aria-hidden=\\\"true\\\"></i></div>\\r\\n        <h4>Data</h4>\\r\\n        <p>Imporve the way you run the business with the data provided, help shaping your business better.</p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\\r\\n\\r\\n<div class=\\\"col-md-12\\\">\\r\\n  <div class=\\\"footer\\\">\\r\\n    <p>&copy; 2017 Contact Swing</p>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<script type=\\\"text/javascript\\\">\\r\\n  (function () {\\r\\n\\r\\n    //t = current time\\r\\n    //b = start value\\r\\n    //c = change in value\\r\\n    //d = duration\\r\\n    Math.easeInOutQuad = function (t, b, c, d) {\\r\\n      t /= d / 2;\\r\\n      if (t < 1) return c / 2 * t * t + b;\\r\\n      t--;\\r\\n      return -c / 2 * (t * (t - 2) - 1) + b;\\r\\n    };\\r\\n\\r\\n    var app = {\\r\\n      cache: function () {\\r\\n        this.$body = document.documentEelement || document.body;\\r\\n      },\\r\\n      events: function () {\\r\\n        // If you comment the line below, the automatic scroll to next page will be deactivated;\\r\\n        window.onscroll = this.scrolling.bind(this);\\r\\n      },\\r\\n      init: function () {\\r\\n        this.scrollTop = 0;\\r\\n        this.isScrolling = false;\\r\\n        this.duration = 500;\\r\\n        this.vHeight = window.innerHeight;\\r\\n\\r\\n        this.cache();\\r\\n        this.events();\\r\\n      },\\r\\n      scrolling: function (e) {\\r\\n        var scrollTop;\\r\\n\\r\\n        if (this.isScrolling) return;\\r\\n\\r\\n        this.vHeight = window.innerHeight;\\r\\n        scrollTop = this.$body.scrollTop;\\r\\n\\r\\n        if (scrollTop > this.scrollTop)\\r\\n          this.scrollTo(this.$body, (this.scrollTop + this.vHeight), this.duration);\\r\\n        else\\r\\n          this.scrollTo(this.$body, (this.scrollTop - this.vHeight), this.duration);\\r\\n      },\\r\\n      scrollTo: function (element, to, duration) {\\r\\n        var start = element.scrollTop,\\r\\n          change = to - start,\\r\\n          currentTime = 0,\\r\\n          increment = 20,\\r\\n          self = this;\\r\\n\\r\\n        var animateScroll = function () {\\r\\n          currentTime += increment;\\r\\n          var val = Math.easeInOutQuad(currentTime, start, change, duration);\\r\\n          element.scrollTop = val;\\r\\n          if (currentTime <= duration) {\\r\\n            setTimeout(animateScroll, increment);\\r\\n          } else {\\r\\n            self.scrollTop = element.scrollTop;\\r\\n            setTimeout(function () { self.isScrolling = false }, increment);\\r\\n          }\\r\\n        };\\r\\n\\r\\n        this.isScrolling = true;\\r\\n        animateScroll();\\r\\n      }\\r\\n    };\\r\\n\\r\\n    app.init();\\r\\n\\r\\n  })();\\r\\n\\r\\n</script>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/default/default.component.html\n// module id = ../../../../../src/app/default/default.component.html\n// module chunks = 0","import { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from '../security/login/login.service';\r\n//import {CarouselModule} from 'angular2-carousel-ztw/carousel.module';\r\n\r\n@Component({\r\n  selector: 'app-default',\r\n  templateUrl: './default.component.html',\r\n  styleUrls: ['./default.component.css']\r\n})\r\nexport class DefaultComponent implements OnInit {\r\n  backgroundImg:any;\r\n\r\n  constructor(private loginService: LoginService) {\r\n    let userLoggedIn = sessionStorage.getItem('userLoggedIn');\r\n    if (!userLoggedIn) {\r\n      this.logout();\r\n    }\r\n  }\r\n\r\n\r\n  logout() {\r\n    sessionStorage.clear();\r\n    this.loginService.logout().subscribe(() => {\r\n      //window.location.reload();\r\n    },\r\n      error => {\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/default/default.component.ts","export * from './default.component';\r\n\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/default/index.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".myTable td:nth-child(1) {\\r\\n    width: 20px;\\r\\n}\\r\\n\\r\\n.email-compose{\\r\\n    min-height: 110vh;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/contact/contact.component.css\n// module id = ../../../../../src/app/email/contact/contact.component.css\n// module chunks = 0","module.exports = \"<p-growl [value]=\\\"msgs\\\" sticky=\\\"sticky\\\"></p-growl>\\r\\n\\r\\n<div class=\\\"email-compose\\\">\\r\\n<form #contactForm=\\\"ngForm\\\" *ngIf=\\\"active\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-default\\\" *ngIf=\\\"!displayViewDialog && !displayCreateDialog\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n            <h3 class=\\\"panel-title\\\">Search Contacts</h3>\\r\\n        </div>\\r\\n        <div class=\\\"panel-body\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <input type=\\\"text\\\" placeholder=\\\"First Name\\\" class=\\\"form-control\\\" id=\\\"firstName\\\" [(ngModel)]=\\\"commonService.contactSearchCriteria.firstName\\\"\\r\\n                        name=\\\"firstNameSearchCriteria\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <input type=\\\"text\\\" placeholder=\\\"Last Name\\\" class=\\\"form-control\\\" id=\\\"lastName\\\" [(ngModel)]=\\\"commonService.contactSearchCriteria.lastName\\\"\\r\\n                        name=\\\"lastNameSearchCriteria\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <input type=\\\"email\\\" placeholder=\\\"Email\\\" class=\\\"form-control\\\" id=\\\"email\\\" [(ngModel)]=\\\"commonService.contactSearchCriteria.email\\\"\\r\\n                        name=\\\"emailSearchCriteria\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <p-multiSelect id=\\\"groupsSearchCriteria\\\" defaultLabel=\\\" Choose Groups - Required\\\" name=\\\"groupsSearchCriteria\\\" [options]=\\\"commonService.groupNamesForSearch\\\"\\r\\n                        (onChange)=\\\"onSelectItemChange()\\\" [(ngModel)]=\\\"commonService.contactSearchCriteria.groupIds\\\" [style]=\\\"{'width':'100%'}\\\"\\r\\n                        required #groupsSearchCriteria=\\\"ngModel\\\"></p-multiSelect>\\r\\n                    <div [hidden]=\\\"groupsSearchCriteria.valid || groupsSearchCriteria.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                        Choose atleast one Group\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"col-md-5\\\"></div>\\r\\n                <button type=\\\"submit\\\" *ngIf=\\\"authorizationService.isUserHasRole('UI_ACCESS_CONTACTS')\\\" [disabled]=\\\"!contactForm.form.valid\\\"\\r\\n                    pButton icon=\\\"fa fa-search\\\" pButton label=\\\"Search\\\" (click)=\\\"commonService.getAllContactsBySearchCriteria(username)\\\"></button>\\r\\n                <button type=\\\"button\\\" pButton icon=\\\"fa fa-refresh\\\" pButton label=\\\"Reset\\\" (click)=\\\"commonService.resetContactsBySearchCriteria()\\\"></button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <p-dataTable *ngIf=\\\"!displayViewDialog && !displayCreateDialog\\\" [value]=\\\"commonService.contacts\\\" [rows]=\\\"50\\\" [paginator]=\\\"true\\\"\\r\\n        [pageLinks]=\\\"3\\\" [rowsPerPageOptions]=\\\"[10,20,50]\\\" selectionMode=\\\"single\\\" [responsive]=\\\"true\\\" (onRowSelect)=\\\"onRowSelect($event)\\\">\\r\\n        <header>Contacts</header>\\r\\n        <p-column field=\\\"firstName\\\" header=\\\"First Name\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\"></p-column>\\r\\n        <p-column field=\\\"lastName\\\" header=\\\"Last Name\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\"></p-column>\\r\\n        <p-column field=\\\"email\\\" header=\\\"Email Id\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\"></p-column>\\r\\n        <p-column field=\\\"groupDetails\\\" header=\\\"Groups\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" [colspan]=\\\"2\\\"></p-column>\\r\\n        <p-footer>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <button type=\\\"button\\\" icon=\\\"fa fa-plus\\\" *ngIf=\\\"authorizationService.isUserHasRole('UI_CREATE_CONTACTS')\\\" pButton label=\\\"Create\\\"\\r\\n                        (click)=\\\"createContactClick()\\\"></button>\\r\\n                    <!--button type=\\\"button\\\" pButton icon=\\\"fa fa-download\\\" label=\\\"Import\\\">\\r\\n\\t\\t\\t\\t\\t    \\r\\n\\t\\t\\t\\t\\t</button-->\\r\\n                </div>\\r\\n            </div>\\r\\n        </p-footer>\\r\\n    </p-dataTable>\\r\\n\\r\\n    <div class=\\\"panel panel-default\\\" *ngIf=\\\"displayViewDialog && contactSelected\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n            <h3 class=\\\"panel-title\\\">Contact Details</h3>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"panel-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"!updateContact\\\">\\r\\n                        <label for=\\\"firstName\\\">First Name*</label>\\r\\n                        <input disabled type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firstName\\\" required [(ngModel)]=\\\"contactSelected.firstName\\\" name=\\\"firstNameView\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"updateContact\\\">\\r\\n                        <label for=\\\"firstName\\\">First Name*</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Required\\\" id=\\\"firstName\\\" required [(ngModel)]=\\\"contactSelected.firstName\\\"\\r\\n                            name=\\\"firstNameView\\\" #firstNameView=\\\"ngModel\\\">\\r\\n                        <div [hidden]=\\\"firstNameView.valid || firstNameView.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                            First name is required\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"!updateContact\\\">\\r\\n                        <label for=\\\"firstName\\\">Last Name*</label>\\r\\n                        <input disabled type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lastName\\\" required [(ngModel)]=\\\"contactSelected.lastName\\\" name=\\\"lastNameView\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"updateContact\\\">\\r\\n                        <label for=\\\"firstName\\\">Last Name*</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Required\\\" id=\\\"lastName\\\" required [(ngModel)]=\\\"contactSelected.lastName\\\"\\r\\n                            name=\\\"lastNameView\\\" #lastNameView=\\\"ngModel\\\">\\r\\n                        <div [hidden]=\\\"lastNameView.valid || lastNameView.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                            Last name is required\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"!updateContact\\\">\\r\\n                        <label for=\\\"email\\\">Email*</label>\\r\\n                        <input disabled type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email\\\" required [(ngModel)]=\\\"contactSelected.email\\\" name=\\\"emailView\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"updateContact\\\">\\r\\n                        <label for=\\\"email\\\">Email*</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Required\\\" id=\\\"email\\\" required [(ngModel)]=\\\"contactSelected.email\\\" name=\\\"emailView\\\"\\r\\n                            #emailView=\\\"ngModel\\\">\\r\\n                        <div [hidden]=\\\"emailView.valid || emailView.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                            Email is required\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\" *ngIf=\\\"updateContact && moreGroupItems.length > 0\\\">\\r\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"!updateContact\\\">\\r\\n                        <label for=\\\"groups\\\">Groups</label>\\r\\n                        <p-multiSelect id=\\\"groups\\\" name=\\\"groups\\\" [options]=\\\"moreGroupItems\\\" [(ngModel)]=\\\"contactSelected.moreGroups\\\" [style]=\\\"{'width':'100%'}\\\"></p-multiSelect>\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"updateContact\\\">\\r\\n                        <label for=\\\"groups\\\">Groups*</label>\\r\\n                        <p-multiSelect id=\\\"groups\\\" required name=\\\"groupsView\\\" #groupsView=\\\"ngModel\\\" [options]=\\\"moreGroupItems\\\" [(ngModel)]=\\\"contactSelected.moreGroups\\\"\\r\\n                            [style]=\\\"{'width':'100%'}\\\"></p-multiSelect>\\r\\n                        <div [hidden]=\\\"groupsView.valid || groupsView.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                            Group is invalid\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <p-dataTable [value]=\\\"contactSelected.contactGroups\\\" *ngIf=\\\"!updateContact && contactSelected.contactGroups.length > 0\\\">\\r\\n                <p-column field=\\\"group.name\\\" header=\\\"Group Name\\\"></p-column>\\r\\n                <p-column field=\\\"active\\\" header=\\\"Active\\\"></p-column>\\r\\n                <p-column field=\\\"unSubscribed\\\" header=\\\"UnSubscribed\\\"></p-column>\\r\\n            </p-dataTable>\\r\\n            <br/>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"col-md-5\\\"></div>\\r\\n                    <button *ngIf=\\\"!updateContact && authorizationService.isUserHasRole('UI_UPDATE_CONTACTS')\\\" type=\\\"button\\\" pButton icon=\\\"fa-pencil\\\" (click)=\\\"updateContactClick()\\\"\\r\\n                        label=\\\"Edit\\\"></button>\\r\\n                    <button *ngIf=\\\"!updateContact && authorizationService.isUserHasRole('UI_DELETE_CONTACTS')\\\" type=\\\"submit\\\" pButton icon=\\\"fa-trash\\\" (click)=\\\"deleteSelectedContact()\\\"\\r\\n                        label=\\\"Delete\\\"></button>\\r\\n                    <button *ngIf=\\\"!updateContact\\\" type=\\\"button\\\" pButton icon=\\\"fa-close\\\" (click)=\\\"viewDialogCancelClick()\\\" label=\\\"Cancel\\\"></button>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"panel panel-default\\\" *ngIf=\\\"updateContact && contactSelected.contactGroups.length > 0\\\">\\r\\n                <div class=\\\"panel-body\\\">\\r\\n                    <table class=\\\"table\\\" *ngIf=\\\"updateContact && contactSelected.contactGroups.length > 0\\\">\\r\\n                        <thead>\\r\\n                            <tr>\\r\\n                                <th>Group Name</th>\\r\\n                                <th>First Name</th>\\r\\n                                <th>Last Name</th>\\r\\n                                <th>Email</th>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <tbody>\\r\\n                            <tr *ngFor=\\\"let contactGroup of contactSelected.contactGroups\\\">\\r\\n                                <td>{{contactGroup.group.name}}</td>\\r\\n                                <td><input id=\\\"active\\\" name=\\\"active\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"contactGroup.active\\\">Active</td>\\r\\n                                <td><input id=\\\"unSubscribed\\\" name=\\\"unSubscribed\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"contactGroup.unSubscribed\\\">UnSubscribe</td>\\r\\n                                <td><input id=\\\"delete\\\" name=\\\"delete\\\" type=\\\"checkbox\\\" disabled=\\\"true\\\" [(ngModel)]=\\\"contactGroup.delete\\\">Delete</td>\\r\\n                            </tr>\\r\\n                        </tbody>\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n            <br/>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"col-md-5\\\"></div>\\r\\n                    <button *ngIf=\\\"updateContact && authorizationService.isUserHasRole('UI_CREATE_CONTACTS')\\\" type=\\\"submit\\\" pButton icon=\\\"fa-check\\\" (click)=\\\"updateContactSubmit()\\\" label=\\\"Submit\\\"\\r\\n                        [disabled]=\\\"!contactForm.form.valid\\\"></button>\\r\\n                    <button *ngIf=\\\"updateContact\\\" type=\\\"button\\\" pButton icon=\\\"fa-close\\\" (click)=\\\"dialogUpdateCancelClick()\\\" label=\\\"Cancel\\\"></button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"panel panel-default\\\" *ngIf=\\\"displayCreateDialog && contactNew\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n            <h3 class=\\\"panel-title\\\">Create Contact</h3>\\r\\n        </div>\\r\\n        <div class=\\\"panel-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"firstName\\\">First Name*</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firstName\\\" required [(ngModel)]=\\\"contactNew.firstName\\\" name=\\\"firstNameCreate\\\"\\r\\n                            #firstNameCreate=\\\"ngModel\\\" placeholder=\\\"Required\\\">\\r\\n                        <div [hidden]=\\\"firstNameCreate.valid || firstNameCreate.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                            First name is required\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"lastName\\\">Last Name*</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Required\\\" id=\\\"lastName\\\" required [(ngModel)]=\\\"contactNew.lastName\\\" name=\\\"lastNameCreate\\\"\\r\\n                            #lastNameCreate=\\\"ngModel\\\">\\r\\n                        <div [hidden]=\\\"lastNameCreate.valid || lastNameCreate.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                            Last name is required\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"email\\\" class=\\\"control-label\\\">Email*</label>\\r\\n                        <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"Required\\\" id=\\\"email\\\" required [(ngModel)]=\\\"contactNew.email\\\" name=\\\"emailCreate\\\"\\r\\n                            #emailCreate=\\\"ngModel\\\">\\r\\n                        <div [hidden]=\\\"emailCreate.valid || emailCreate.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                            Email is invalid\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"groups\\\">Groups*</label>\\r\\n                        <p-multiSelect id=\\\"groups\\\" required name=\\\"groupsCreate\\\" #groupsCreate=\\\"ngModel\\\" [options]=\\\"commonService.groupItems\\\" [(ngModel)]=\\\"contactNew.groups\\\"\\r\\n                            [style]=\\\"{'width':'100%'}\\\"></p-multiSelect>\\r\\n                        <div [hidden]=\\\"groupsCreate.valid || groupsCreate.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                            Group is invalid\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n                <div class=\\\"col-md-5\\\"></div>\\r\\n                <button type=\\\"submit\\\" pButton icon=\\\"fa-check\\\" *ngIf=\\\"authorizationService.isUserHasRole('UI_CREATE_CONTACTS')\\\" (click)=\\\"createContactSubmit()\\\" label=\\\"Create\\\" [disabled]=\\\"!contactForm.form.valid\\\"></button>\\r\\n                <button type=\\\"button\\\" pButton icon=\\\"fa-close\\\" (click)=\\\"createDialogCancelClick()\\\" label=\\\"Cancel\\\"></button>\\r\\n            </div>\\r\\n        </div>\\r\\n        <br/>\\r\\n    </div>\\r\\n\\r\\n</form>\\r\\n\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/contact/contact.component.html\n// module id = ../../../../../src/app/email/contact/contact.component.html\n// module chunks = 0","import { Component, OnInit } from \"@angular/core\";\r\nimport { ContactService } from \"./contact.service\";\r\nimport { Contact } from \"./contact\";\r\nimport { SelectItem } from \"primeng/primeng\";\r\nimport { Message } from \"../../message\";\r\nimport { ContactGroupService } from \"../contactgroup/contactgroup.service\";\r\nimport { ContactGroup } from \"../contactgroup/contactgroup\";\r\nimport { Group } from \"../group/group\";\r\nimport { GroupService } from \"../group/group.service\";\r\nimport { CommonService } from \"../shared/common.service\";\r\nimport { ContactSearchCriteria } from \"../contact/contact_search_criteria\";\r\nimport { AuthorizationService } from '../../core/authorization.service';\r\nimport { GlobalService } from '../../core/global.service';\r\nimport { FileUploadComponent } from '../contact/fileupload.component';\r\n\r\n@Component({\r\n    templateUrl: \"./contact.component.html\",\r\n    styleUrls: [\"./contact.component.css\"]\r\n})\r\nexport class ContactComponent implements OnInit {\r\n\r\n    msgs: Message[] = [];\r\n    contactSelected: Contact;\r\n    contactNew: Contact;\r\n    contactUpdate: Contact;\r\n    moreGroupItems: SelectItem[];\r\n\r\n    displayViewDialog: boolean;\r\n    displayCreateDialog: boolean;\r\n    updateContact: boolean;\r\n    active: boolean = true;\r\n    username:string;\r\n\r\n    constructor(private contactService: ContactService, private groupService: GroupService,\r\n        private commonService: CommonService,private authorizationService : AuthorizationService,private globalService:GlobalService) { \r\n            this.username = globalService.loggedInUser.loggedInUserName;\r\n        }\r\n\r\n    ngOnInit() {\r\n        this.commonService.getAllGroups(this.globalService.loggedInUser.loggedInUserName);\r\n    }\r\n\r\n    onSelectItemChange() {\r\n        this.active = false;\r\n        setTimeout(() => this.active = true, 0);\r\n        if (this.commonService.contactSearchCriteria.groupIds !== undefined && this.commonService.contactSearchCriteria.groupIds.length <= 0) {\r\n            this.commonService.contactSearchCriteria.groupIds = undefined;\r\n        }\r\n    }\r\n\r\n    onRowSelect(event: any) {\r\n        this.contactSelected = event.data;\r\n        this.contactService.getContactById(this.contactSelected.id)\r\n            .subscribe(contactFromDB => {\r\n                this.contactSelected = contactFromDB;\r\n                this.displayViewDialog = true;\r\n                this.updateContact = false;\r\n            });\r\n    }\r\n\r\n    viewDialogCancelClick() {\r\n        this.displayViewDialog = false;\r\n    }\r\n\r\n    createContactClick() {\r\n        this.contactNew = new Contact;\r\n        this.displayCreateDialog = true;\r\n        this.active = false;\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n\r\n    createDialogCancelClick() {\r\n        this.displayCreateDialog = false;\r\n    }\r\n\r\n    createContactSubmit() {\r\n        this.msgs = [];\r\n        let contactGroups: ContactGroup[] = [];\r\n        if (this.contactNew.groups !== undefined) {\r\n            for (let group of this.contactNew.groups) {\r\n                let contactGroup = new ContactGroup();\r\n                contactGroup.group = group;\r\n                contactGroup.active = true;\r\n                contactGroup.unSubscribed = false;\r\n                contactGroups.push(contactGroup);\r\n            }\r\n            this.contactNew.contactGroups = contactGroups;\r\n        }\r\n        this.contactService.createContact(this.contactNew)\r\n            .subscribe(() => {\r\n                //this.commonService.getAllContactsBySearchCriteria();\r\n                this.commonService.resetContactsBySearchCriteria();\r\n                this.commonService.groups = [];\r\n                this.displayCreateDialog = false;\r\n                this.msgs.push({ severity: \"info\", summary: \"Contact created successfully.\", detail: \"\" });\r\n            },\r\n            error => {\r\n                this.msgs.push({ severity: \"error\", summary: \"Contact creation failed.\", detail: error })\r\n            });\r\n    }\r\n\r\n    updateContactClick() {\r\n        this.updateContact = true;\r\n        this.contactUpdate = this.contactSelected;\r\n        this.contactSelected = this.cloneContact(this.contactUpdate);\r\n        this.moreGroupItems = [];\r\n        this.contactSelected.moreGroups = [];\r\n        for (let contactGroup of this.contactSelected.contactGroups) {\r\n            contactGroup = this.cloneContactGroup(contactGroup);\r\n            contactGroup.group = this.cloneGroup(contactGroup.group);\r\n        }\r\n        for (let groupItem of this.commonService.groupItems) {\r\n            let groupFound: boolean = false;\r\n            for (let contactGroup of this.contactSelected.contactGroups) {\r\n                if (contactGroup.group.name === groupItem.label) {\r\n                    groupFound = true;\r\n                }\r\n            }\r\n            if (!groupFound) {\r\n                this.moreGroupItems.push(groupItem);\r\n            }\r\n        }\r\n    }\r\n\r\n    updateContactSubmit() {\r\n        this.msgs = [];\r\n        let deleteContactGroups: ContactGroup[] = [];\r\n        for (let contactGroup of this.contactSelected.contactGroups) {\r\n            if (!contactGroup.delete) {\r\n                deleteContactGroups.push(contactGroup);\r\n            }\r\n        }\r\n        this.contactSelected.contactGroups = deleteContactGroups;\r\n        for (let group of this.contactSelected.moreGroups) {\r\n            let contactGroup = new ContactGroup();\r\n            contactGroup.group = group;\r\n            contactGroup.active = true;\r\n            contactGroup.unSubscribed = false;\r\n            this.contactSelected.contactGroups.push(contactGroup);\r\n        }\r\n        this.contactService.updateContact(this.contactSelected)\r\n            .subscribe(contactUpdated => {\r\n                this.contactSelected = contactUpdated;\r\n                //this.commonService.getAllContactsBySearchCriteria();\r\n                this.commonService.resetContactsBySearchCriteria();\r\n                this.commonService.groups = [];\r\n                this.displayViewDialog = true;\r\n                this.updateContact = false;\r\n                this.msgs.push({ severity: \"info\", summary: \"Contact updated successfully.\", detail: \"\" });\r\n            },\r\n            error => {\r\n                this.msgs.push({ severity: \"error\", summary: \"Contact updation failed.\", detail: error })\r\n            });\r\n    }\r\n\r\n    dialogUpdateCancelClick() {\r\n        this.updateContact = false;\r\n        this.contactSelected = this.contactUpdate;\r\n    }\r\n\r\n    deleteSelectedContact() {\r\n        this.msgs = [];\r\n        this.contactService.deleteContact(this.contactSelected.id)\r\n            .subscribe(() => {\r\n                //this.commonService.getAllContactsBySearchCriteria();\r\n                this.commonService.resetContactsBySearchCriteria();\r\n                this.commonService.groups = [];\r\n                this.msgs.push({ severity: \"info\", summary: \"Contact deleted successfully.\", detail: \"\" });\r\n                this.displayViewDialog = false;\r\n            },\r\n            error => {\r\n                this.msgs.push({ severity: \"error\", summary: \"Contact deletion failed.\", detail: error });\r\n            });\r\n    }\r\n\r\n    cloneContact(cont: Contact): Contact {\r\n        let contact = new Contact();\r\n        for (let prop in cont) {\r\n            contact[prop] = cont[prop];\r\n        }\r\n        return contact;\r\n    }\r\n\r\n    cloneGroup(gro: Group): Group {\r\n        let group = new Group();\r\n        for (let prop in gro) {\r\n            group[prop] = gro[prop];\r\n        }\r\n        return group;\r\n    }\r\n\r\n    cloneContactGroup(contGrou: ContactGroup): ContactGroup {\r\n        let contactGroup = new ContactGroup();\r\n        for (let prop in contGrou) {\r\n            contactGroup[prop] = contGrou[prop];\r\n        }\r\n        return contactGroup;\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/contact/contact.component.ts","import { Injectable } from \"@angular/core\";\r\nimport { Http, Response, Headers, RequestOptions, URLSearchParams } from \"@angular/http\";\r\nimport { Observable }     from \"rxjs/Observable\";\r\nimport { Contact } from \"./contact\";\r\nimport { ContactSearchCriteria } from \"./contact_search_criteria\";\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Injectable()\r\nexport class ContactService {\r\n\r\n    private contactUrl = \"contacts\";\r\n\r\n    constructor(private http: Http) { }\r\n\r\n    createContact(contact: Contact): Observable<Contact> {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.post(this.contactUrl, JSON.stringify(contact), { headers: headers })\r\n            .map((res: Response) => { return; })\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    getContactById(id: number): Observable<Contact> {\r\n        return this.http.get(this.contactUrl + \"/\" + id)\r\n            .map((res: Response) => res.json())\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    getAllContactsByCriteria(contactSearchCriteria: ContactSearchCriteria,username:string): Observable<Contact[]> {\r\n        let headers = new Headers();  \r\n        headers.append('Content-Type', 'application/json');\r\n        contactSearchCriteria.username = username;\r\n        return this.http.post(this.contactUrl + \"/searchCriteria\", JSON.stringify(contactSearchCriteria), { headers: headers })\r\n            .map((res: Response) => res.json())\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    getAllContacts(username:string): Observable<Contact[]> {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n        let options = new RequestOptions({ headers: headers });\r\n        let urlSearchParams = new URLSearchParams();\r\n        urlSearchParams.append('username', username);\r\n        let body = urlSearchParams.toString(); \r\n        return this.http.post(this.contactUrl+'/getAllByCreatedUser', body, options )\r\n            .map(res => res.json())\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    updateContact(contact: Contact) {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.put(this.contactUrl + \"/\" + contact.id, JSON.stringify(contact), { headers: headers })\r\n            .map((res: Response) => res.json())\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    deleteContact(objectId: number): Observable<void> {\r\n        return this.http.delete(this.contactUrl + \"/\" + objectId)\r\n            .map((res: Response) => { return; })\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    private extractData(res: Response) {\r\n        let body = res.json();\r\n        return body || {};\r\n    }\r\n\r\n    /*private handleError(error: any) {\r\n        let errMsg = (error.message) ? error.message :\r\n            error.status ? `${error.status} - ${error.statusText}` : 'Server error';\r\n        console.error(errMsg);\r\n        return Observable.throw(errMsg);\r\n    }*/\r\n\r\n    private handleError (error: Response | any) {\r\n    // In a real world app, we might use a remote logging infrastructure\r\n    //console.log(error);\r\n    let errMsg: string;\r\n    if (error instanceof Response) {\r\n      const body = error.json() || '';\r\n      console.log(\"Raw error : \"+error.toString);\r\n      console.log(\"Body : \"+body);\r\n      const err = body.error || JSON.stringify(body);\r\n      errMsg = `${error.status} - ${err}`;\r\n    } else {\r\n      errMsg = error.message ? error.message : error.toString();\r\n      console.log(\"Error not a response : \"+errMsg);\r\n    }\r\n    //console.error(errMsg);\r\n    return Observable.throw(errMsg);\r\n  }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/contact/contact.service.ts","import { ContactGroup } from \"../contactgroup/contactgroup\";\r\nimport { Group } from \"../group/group\";\r\nimport {BaseEntity} from '../../core/model/base.entity'\r\n\r\nexport class Contact  extends BaseEntity{\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    contactGroups: ContactGroup[];\r\n    groupDetails: string;\r\n    groups: Group[];\r\n    moreGroups: Group[];\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/contact/contact.ts","export class ContactSearchCriteria {\r\n    firstName: string;\r\n    lastName: string;\r\n    email: string;\r\n    groupIds: number[];\r\n    username:string;\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/contact/contact_search_criteria.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#mainContainer\\r\\n{\\r\\n\\tbackground:white;\\r\\n\\tpadding:30px;\\r\\n\\tmin-height:50vh;\\r\\nbox-shadow: -7px 28px 66px -25px rgba(0,0,0,0.75);\\r\\nborder-radius: 12px 12px 12px 12px;\\r\\n-moz-border-radius: 12px 12px 12px 12px;\\r\\n-webkit-border-radius: 12px 12px 12px 12px;\\r\\nborder: 0px solid #000000;\\r\\n}\\r\\n\\r\\n#rowcontainer {\\r\\n\\tmin-width:90vw;\\r\\n\\tmargin-top:10px;\\r\\n}\\r\\n\\r\\n#description {\\r\\n\\tmargin-left:1%;\\r\\n}\\r\\n#upper-container {\\r\\n\\t\\r\\n\\theight:380px;\\r\\n}\\r\\n\\r\\n#description h1 {\\r\\n\\tfont-family: \\\"Josefin Sans\\\";\\r\\n\\tfont-size: 24px;\\r\\n\\tfont-style: normal;\\r\\n\\tfont-variant: normal;\\r\\n\\tfont-weight: 500;\\r\\n\\tline-height: 26.4px;\\r\\n}\\r\\n#description h3 {\\r\\n\\tfont-family: \\\"Josefin Sans\\\";\\r\\n\\tfont-size: 14px;\\r\\n\\tfont-style: normal;\\r\\n\\tfont-variant: normal;\\r\\n\\tfont-weight: 500;\\r\\n\\tline-height: 15.4px;\\r\\n}\\r\\n\\r\\n#description h4, .title-head {\\r\\n\\tfont-family: \\\"Josefin Sans\\\";\\r\\n\\tfont-size: 16px;\\r\\n\\tfont-style: normal;\\r\\n\\tfont-variant: normal;\\r\\n\\tfont-weight: bold;\\r\\n\\tline-height: 15.4px;\\r\\n\\tmargin-top:20px;\\r\\n}\\r\\n\\r\\n#description p {\\r\\n\\tfont-family: \\\"Josefin Sans\\\";\\r\\n\\tfont-size: 14px;\\r\\n\\tfont-style: normal;\\r\\n\\tfont-variant: normal;\\r\\n\\tfont-weight: 400;\\r\\n\\tline-height: 20px;\\r\\n\\tmargin-top:15px;\\r\\n}\\r\\n#description blockquote {\\r\\n\\tfont-family: \\\"Josefin Sans\\\";\\r\\n\\tfont-size: 21px;\\r\\n\\tfont-style: normal;\\r\\n\\tfont-variant: normal;\\r\\n\\tfont-weight: 400;\\r\\n\\tline-height: 30px;\\r\\n}\\r\\n#description pre {\\r\\n\\tfont-family: \\\"Josefin Sans\\\";\\r\\n\\tfont-size: 13px;\\r\\n\\tfont-style: normal;\\r\\n\\tfont-variant: normal;\\r\\n\\tfont-weight: 400;\\r\\n\\tline-height: 18.5714px;\\r\\n}\\r\\n\\r\\n.datagrid table { border-collapse: collapse; text-align: left; width: 100%; } .datagrid {width:60%;font: normal 12px/150% Arial, Helvetica, sans-serif; background: #fff; overflow: hidden; border: 1px solid #006699; border-radius: 3px; }.datagrid table td, .datagrid table th { padding: 3px 10px; }.datagrid table thead th {background:-moz-linear-gradient( center top, #0070A8 5%, #00527A 100% );filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#0070A8', endColorstr='#00527A');background-color:#0070A8; color:#FFFFFF; font-size: 15px; font-weight: bold; border-left: 1px solid #0070A8; } .datagrid table thead th:first-child { border: none; }.datagrid table tbody td { color: #00557F; border-left: 1px solid #E1EEF4;font-size: 12px;font-weight: normal; }.datagrid table tbody .alt td { background: #E1EEf4; color: #00557F; }.datagrid table tbody td:first-child { border-left: none; }.datagrid table tbody tr:last-child td { border-bottom: none; }.datagrid table tfoot td div { border-top: 1px solid #006699;background: #E1EEf4;} .datagrid table tfoot td { padding: 0; font-size: 12px } .datagrid table tfoot td div{ padding: 2px; }.datagrid table tfoot td ul { margin: 0; padding:0; list-style: none; text-align: right; }.datagrid table tfoot  li { display: inline; }.datagrid table tfoot li a { text-decoration: none; display: inline-block;  padding: 2px 8px; margin: 1px;color: #FFFFFF;border: 1px solid #006699; border-radius: 3px;background:-moz-linear-gradient( center top, #006699 5%, #00557F 100% );filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#006699', endColorstr='#00557F');background-color:#006699; }.datagrid table tfoot ul.active, .datagrid table tfoot ul a:hover { text-decoration: none;border-color: #00557F; color: #FFFFFF; background: none; background-color:#006699;}div.dhtmlx_window_active, div.dhx_modal_cover_dv { position: fixed !important; }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/contact/fileupload.component.css\n// module id = ../../../../../src/app/email/contact/fileupload.component.css\n// module chunks = 0","module.exports = \"<p-growl [value]=\\\"msgs\\\" sticky=\\\"sticky\\\"></p-growl>\\r\\n<div id=\\\"mainContainer\\\" style=\\\"height:110vh;\\\">\\r\\n<nav id=\\\"upper-container\\\" class=\\\"navbar navbar-default\\\">\\r\\n                    <div class=\\\"container-fluid\\\">\\r\\n                        <div class=\\\"navbar-header\\\">\\r\\n                        <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\r\\n                            <ul class=\\\"nav navbar-nav\\\">\\r\\n                            <li><p class=\\\"title-head\\\">Bulk Contact Upload</p></li>\\r\\n                            </ul>\\t\\t\\t\\t\\t\\t\\t\\r\\n                        </div>\\r\\n\\t\\t\\t\\t\\t\\t<div id=\\\"description\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<p>This module allows you to upload your contact list in bulk using a CSV file. Please note that only CSV files are allowed to be used as the source of upload. Files in any other\\r\\n\\t\\t\\t\\t\\t\\t\\tformat will not be accepted. The data in the file should map the following format:\\r\\n\\t\\t\\t\\t\\t\\t\\tfirstName,lastName,email,groupName\\r\\n\\t\\t\\t\\t\\t\\t\\tYou can also set in a new group name in the file if you wish your contact to map to the new group. The application will then insert a new record for the group and map your contact to that group.\\r\\n\\t\\t\\t\\t\\t\\t\\tYou can also map your contact to multiple groups. To map a contact to multiple groups, enter the group names separated by a semi-colon (;). The application uses the semi-colon delimiter to identify \\r\\n\\t\\t\\t\\t\\t\\t\\tmultiple groups for a contact. Pleae check the examples below for usage.\\r\\n\\t\\t\\t\\t\\t\\t\\t</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t<h4>Usage (Expected File data)</h4>\\r\\n\\t\\t\\t\\t\\t\\t\\t<p>To map a contact with first name \\\"A\\\", last name \\\"B\\\", email as \\\"C@emailsample.com\\\" and group \\\"D\\\", the file should have the following entry:</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"datagrid\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<table>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>First Name</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Last Name</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Email</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Group</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tbody>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"alt\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>A</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>B</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>C@emailsample.com</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>D</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<p>To map a contact with first name \\\"A\\\", last name \\\"B\\\", email as \\\"C@emailsample.com\\\" and multiple groups \\\"D,E,F\\\", the file should have the following entry:</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"datagrid\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<table>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<thead>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>First Name</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Last Name</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Email</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Group</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tbody>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"alt\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>A</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>B</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>C@emailsample.com</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>D;E;F</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </nav>\\r\\n                <div id=\\\"rowcontainer\\\" class=\\\"container\\\">\\r\\n                    <div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-md-2\\\" style=\\\"padding-top:7vh;padding-left:2vh;\\\">\\r\\n\\t\\t\\t\\t\\t\\t<img src=\\\"../../../app/resources/images/bulkuploadmainpage.png\\\" style=\\\"width:150px;height:150px;\\\"/>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n                        <div class=\\\"col-md-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<form>\\r\\n                                <div class=\\\"form-group\\\">\\r\\n                                    <label for=\\\"single\\\">Select a CSV file to upload</label>\\r\\n                                    <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" name=\\\"payload\\\" />\\r\\n                                </div>          \\r\\n                            </form>\\r\\n\\t\\t\\t\\t\\t\\t\\t \\r\\n                        </div>\\r\\n                        <div class=\\\"col-md-8\\\">\\r\\n                            <h3>Bulk Upload your contact list from a csv file</h3>\\r\\n                            Queue length: {{ uploader?.queue?.length }}\\r\\n\\r\\n                            <table class=\\\"table\\\">\\r\\n                                <thead>\\r\\n                                <tr>\\r\\n                                    <th width=\\\"50%\\\">Name</th>\\r\\n                                    <th>Size</th>\\r\\n                                    <th>Progress</th>\\r\\n                                    <th>Status</th>\\r\\n                                    <th>Actions</th>\\r\\n                                </tr>\\r\\n                                </thead>\\r\\n                                <tbody>\\r\\n                                <tr *ngFor=\\\"let item of uploader.queue\\\">\\r\\n                                    <td><strong>{{ item.file.name }}</strong></td>\\r\\n                                    <td nowrap>{{ item.file.size/1024/1024 | number:'.2' }} MB</td>\\r\\n                                    <td>\\r\\n                                        <div class=\\\"progress\\\" style=\\\"margin-bottom: 0;\\\">\\r\\n                                            <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': item.progress + '%' }\\\"></div>\\r\\n                                        </div>\\r\\n                                    </td>\\r\\n                                    <td class=\\\"text-center\\\">\\r\\n                                        <span *ngIf=\\\"item.isSuccess\\\"><i class=\\\"glyphicon glyphicon-ok\\\"></i></span>\\r\\n                                        <span *ngIf=\\\"item.isCancel\\\"><i class=\\\"glyphicon glyphicon-ban-circle\\\"></i></span>\\r\\n                                        <span *ngIf=\\\"item.isError\\\"><i class=\\\"glyphicon glyphicon-remove\\\"></i></span>\\r\\n                                    </td>\\r\\n                                    <td nowrap>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-success btn-s\\\"\\r\\n                                                (click)=\\\"item.upload()\\\" [disabled]=\\\"item.isReady || item.isUploading || item.isSuccess\\\">\\r\\n                                            <span class=\\\"glyphicon glyphicon-upload\\\"></span> Upload\\r\\n                                        </button>\\r\\n                                        <button type=\\\"button\\\" class=\\\"btn btn-warning btn-s\\\"\\r\\n                                                (click)=\\\"item.cancel()\\\" [disabled]=\\\"!item.isUploading\\\">\\r\\n                                            <span class=\\\"glyphicon glyphicon-ban-circle\\\"></span> Cancel\\r\\n                                        </button>\\r\\n                                        <!--button type=\\\"button\\\" class=\\\"btn btn-danger btn-xs\\\"\\r\\n                                                (click)=\\\"item.remove()\\\">\\r\\n                                            <span class=\\\"glyphicon glyphicon-trash\\\"></span> Remove\\r\\n                                        </button-->\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"btn btn-danger btn-s\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(click)=\\\"uploader.clearQueue()\\\" [disabled]=\\\"!uploader.queue.length\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"glyphicon glyphicon-trash\\\"></span> Remove\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                                </tbody>\\r\\n                            </table>\\r\\n\\r\\n                            <div>\\r\\n                                <div>\\r\\n                                    Upload progress:\\r\\n                                    <div class=\\\"progress\\\" style=\\\"\\\">\\r\\n                                        <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': uploader.progress + '%' }\\\"></div>\\r\\n                                    </div>\\r\\n                                </div>\\r\\n                                <!--button type=\\\"button\\\" class=\\\"btn btn-success btn-s\\\"\\r\\n                                        (click)=\\\"uploader.uploadAll()\\\" [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">\\r\\n                                    <span class=\\\"glyphicon glyphicon-upload\\\"></span> Upload all\\r\\n                                </button>\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-warning btn-s\\\"\\r\\n                                        (click)=\\\"uploader.cancelAll()\\\" [disabled]=\\\"!uploader.isUploading\\\">\\r\\n                                    <span class=\\\"glyphicon glyphicon-ban-circle\\\"></span> Cancel all\\r\\n                                </button>\\r\\n                                <button type=\\\"button\\\" class=\\\"btn btn-danger btn-s\\\"\\r\\n                                        (click)=\\\"uploader.clearQueue()\\\" [disabled]=\\\"!uploader.queue.length\\\">\\r\\n                                    <span class=\\\"glyphicon glyphicon-trash\\\"></span> Remove all\\r\\n                                </button-->\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t    <p-dialog header=\\\"Status...\\\" [(visible)]=\\\"uploaded\\\"  modal=\\\"modal\\\" (onAfterShow)=\\\"uploadContact()\\\" minWidth=\\\"200px\\\">\\r\\n\\t\\t\\t\\t\\t</p-dialog>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/contact/fileupload.component.html\n// module id = ../../../../../src/app/email/contact/fileupload.component.html\n// module chunks = 0","import { Component } from '@angular/core';\r\nimport { FileUploader } from 'ng2-file-upload';\r\nimport { Message } from \"../../message\";\r\n\r\n@Component({\r\n    selector: 'upload',\r\n    templateUrl: './fileupload.component.html',\r\n\tstyleUrls: ['./fileupload.component.css']\r\n              \r\n})\r\nexport class FileUploadComponent {\r\n    public uploader:FileUploader;\r\n\tmsgs: Message[] = [];\r\n\tuploaded: boolean = false;\r\n\t\r\n\tconstructor()\r\n\t{\r\n\t\t\tthis.uploadContact();\r\n\t\t\tthis.uploader.onCompleteItem = (item, response, status, header) => {\r\n\t\t\t  if (status === 200) {\r\n\t\t\t\tthis.msgs.push({ severity: \"info\", summary: \"Contacts uploaded successfully\", detail: response });\r\n                this.uploaded = false;\r\n\t\t\t  }\r\n\t\t\t  else\r\n\t\t\t  {\r\n\t\t\t\tthis.msgs.push({ severity: \"error\", summary: \"Upload failed\", detail: response });\r\n                this.uploaded = false; \r\n\t\t\t  }\t\t\t\t  \r\n\t\t\t}\r\n\t}\r\n\t\r\n\tuploadContact()\r\n\t{\r\n\t\tthis.uploader = new FileUploader({url:'contacts/bulkupload'});\r\n\t}\r\n\r\n\tshowDialog() \r\n\t{\r\n        this.uploaded = true;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/contact/fileupload.component.ts","import { Injectable } from \"@angular/core\";\r\nimport { Http, Response, Headers } from \"@angular/http\";\r\nimport { ContactGroup } from \"./contactgroup\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Injectable()\r\nexport class ContactGroupService {\r\n\r\n    private contactgroupUrl = \"contactgroups\";\r\n\r\n    constructor(private http: Http) { }\r\n\r\n    getAllContactGroups(): Observable<ContactGroup[]> {\r\n        return this.http.get(this.contactgroupUrl)\r\n            .map(res => res.json())\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    updateContactGroup(contactGroup: ContactGroup) {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.put(this.contactgroupUrl, JSON.stringify(contactGroup), { headers: headers })\r\n            .map((res: Response) => { return; })\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    deleteContactGroup(contactGroup: ContactGroup): Observable<void> {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.delete(this.contactgroupUrl + \"/\" + contactGroup.contact.id + \"/\" + contactGroup.group.id, { headers: headers })\r\n            .map((res: Response) => { return; })\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    private extractData(res: Response) {\r\n        let body = res.json();\r\n        return body || {};\r\n    }\r\n\r\n    private handleError(error: any) {\r\n        let errMsg = (error.message) ? error.message :\r\n            error.status ? `${error.status} - ${error.statusText}` : 'Server error';\r\n        console.error(errMsg);\r\n        return Observable.throw(errMsg);\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/contactgroup/contactgroup.service.ts","import { Contact } from \"../contact/contact\";\r\nimport { Group } from \"../group/group\";\r\n\r\nexport class ContactGroup {\r\n    contact: Contact;\r\n    group: Group;\r\n    active: boolean;\r\n    unSubscribed: boolean;\r\n    delete: boolean;\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/contactgroup/contactgroup.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule, JsonpModule } from '@angular/http';\r\nimport { MaterialModule } from '@angular/material';\r\nimport { GroupComponent } from './group/group.component';\r\nimport { ContactComponent } from './contact/contact.component';\r\nimport { FileUploadComponent } from './contact/fileupload.component';\r\nimport { EmailComponent } from './email/email.component';\r\nimport { EmailServerComponent } from './server/emailserver.component';\r\nimport { GroupService } from './group/group.service';\r\nimport { CommonService } from './shared/common.service';\r\nimport { ContactService } from './contact/contact.service';\r\nimport { ContactGroupService } from './contactgroup/contactgroup.service';\r\nimport { EmailServerService } from \"./server/emailserver.service\";\r\nimport { EmailService } from \"./email/email.service\";\r\nimport { EmailServerPropertiesService } from \"./server/emailserverproperties.service\";\r\nimport { FileSelectDirective, FileDropDirective } from 'ng2-file-upload';\r\n// Import Angular2 plugin.\r\nimport { FroalaEditorModule, FroalaViewModule } from 'angular-froala-wysiwyg';\r\n\r\nimport { DataTableModule,EditorModule, SharedModule, GrowlModule, Message, \r\n         ButtonModule, Header, Footer, DialogModule, SelectItem,\r\n         PanelModule, MultiSelectModule, ListboxModule, TabViewModule, DropdownModule} from 'primeng/primeng';\r\n\r\n@NgModule({\r\n    imports: [CommonModule, FormsModule, EditorModule,HttpModule, JsonpModule, MaterialModule.forRoot(), DataTableModule, ButtonModule, \r\n    DialogModule, PanelModule, SharedModule, GrowlModule, MultiSelectModule, ListboxModule, TabViewModule, DropdownModule,FroalaEditorModule.forRoot(), FroalaViewModule.forRoot()],\r\n    declarations: [GroupComponent, ContactComponent, EmailServerComponent, EmailComponent, FileUploadComponent,\tFileSelectDirective, FileDropDirective],\r\n    providers: [ContactService, GroupService, CommonService, ContactGroupService, EmailServerService, EmailService,EmailServerPropertiesService]\r\n})\r\nexport class EmailModule { }\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/email.module.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \" .class1 tbody tr:nth-child(2n) {\\r\\n    background: #f9f9f9;\\r\\n  }\\r\\n \\r\\n .class2 thead tr th, .class2 tbody tr td  {\\r\\n    border-style: dashed;\\r\\n }\\r\\n \\r\\n .defaultBorderBackground thead th td, .defaultBorderBackground tbody tr td {\\r\\n\\tborder:1px solid #E4E6E9;\\r\\n }\\r\\n \\r\\n .defaultBorderBackground thead th {\\r\\n\\t background:#E6E6E6;\\r\\n }\\r\\n \\r\\n .defaultBorderBackground thead th, .defaultBorderBackground tbody tr {\\r\\n\\t min-height:70px;\\r\\n }\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/email/email.component.css\n// module id = ../../../../../src/app/email/email/email.component.css\n// module chunks = 0","module.exports = \"<p-growl [value]=\\\"msgs\\\" sticky=\\\"true\\\"></p-growl>\\r\\n\\r\\n<div class=\\\"main-panel\\\" style=\\\"min-height:110vh;\\\">\\r\\n<form #emailForm=\\\"ngForm\\\" *ngIf=\\\"active\\\" >\\r\\n\\r\\n    <div class=\\\"panel panel-default\\\">\\r\\n        <div class=\\\"col-md-5\\\"></div>\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n            <h3 class=\\\"panel-title\\\">Email Campaign</h3>\\r\\n        </div>\\r\\n        <div class=\\\"panel-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"groups\\\">Groups*</label> \\r\\n                        <p-multiSelect required id=\\\"groups\\\" name=\\\"emailGroups\\\" [options]=\\\"commonService.groupItems\\\" [(ngModel)]=\\\"selectedGroups\\\" [style]=\\\"{'width':'100%'}\\\"\\r\\n                            #emailGroups=\\\"ngModel\\\"></p-multiSelect>\\r\\n                        <div [hidden]=\\\"emailGroups.valid || emailGroups.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                            Group is required\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>            \\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"subject\\\">Subject*</label>\\r\\n                        <input type=\\\"text\\\" placeholder=\\\"Required\\\" class=\\\"form-control\\\" id=\\\"subject\\\" required [(ngModel)]=\\\"emailVO.subject\\\" name=\\\"subject\\\"\\r\\n                            #subject=\\\"ngModel\\\">\\r\\n                        <div [hidden]=\\\"subject.valid || subject.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                            Subject is required\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12\\\" style=\\\"min-height:400px;\\\">\\r\\n                    <label for=\\\"message\\\">Message*</label>\\r\\n                    <!--textarea class=\\\"form-control\\\" placeholder=\\\"Required\\\" rows=\\\"10\\\" id=\\\"message\\\" required name=\\\"message\\\" [(ngModel)]=\\\"emailVO.message\\\"\\r\\n                        #message=\\\"ngModel\\\"></textarea-->\\r\\n                    <!--p-editor [(ngModel)]=\\\"emailVO.message\\\" [style]=\\\"{'height':'320px'}\\\" placeholder=\\\"Required\\\" #message=\\\"ngModel\\\" name=\\\"message\\\" required #message=\\\"ngModel\\\">\\r\\n                    </p-editor-->\\r\\n                    <textarea style=\\\"min-height:50vh;\\\" [froalaEditor]=\\\"options\\\" [(froalaModel)]=\\\"emailVO.message\\\" name=\\\"message\\\"></textarea>   \\r\\n                    <!--div [hidden]=\\\"message.valid || message.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                        Message is required\\r\\n                    </div-->\\r\\n                </div>\\r\\n            </div>\\r\\n            <br/>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <button type=\\\"submit\\\" pButton icon=\\\"fa-check\\\" (click)=\\\"showDialog()\\\" label=\\\"Send\\\" [disabled]=\\\"!emailForm.form.valid\\\"></button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <p-dialog header=\\\"Sending Mail...\\\" [(visible)]=\\\"emailSending\\\" modal=\\\"modal\\\" (onAfterShow)=\\\"sendEmail()\\\" minWidth=\\\"200px\\\">\\r\\n    </p-dialog>\\r\\n\\r\\n</form>\\r\\n\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/email/email.component.html\n// module id = ../../../../../src/app/email/email/email.component.html\n// module chunks = 0","import { Component, OnInit } from \"@angular/core\";\r\nimport { Email } from \"./email\";\r\nimport { Group } from \"../group/group\";\r\nimport { CommonService } from \"../shared/common.service\";\r\nimport { GlobalService } from '../../core/global.service';\r\nimport { EmailService } from \"./email.service\";\r\nimport { Message } from \"../../message\";\r\nimport { EditorModule,SharedModule } from 'primeng/primeng';\r\nimport {Error} from './error';\r\n\r\n@Component({\r\n    templateUrl: \"./email.component.html\",\r\n    styleUrls:[\"./table.min.css\",\"./email.component.css\"]\r\n})\r\nexport class EmailComponent {\r\n    emailVO = new Email();\r\n    active: boolean = true;\r\n    selectedGroups: Group[];\r\n    msgs: Message[] = [];\r\n    emailSending: boolean = false;\r\n\r\n    constructor(private emailService: EmailService, private commonService: CommonService, private globalService:GlobalService) { }\r\n\r\n    ngOnInit() {\r\n        this.commonService.getAllGroups(this.globalService.loggedInUser.loggedInUserName);\r\n    }\r\n\r\n    test() {\r\n        alert(this.selectedGroups.length);\r\n    }\r\n\r\n    sendEmail() {\r\n        this.emailVO.groupIdList = [];\r\n        for (let group of this.selectedGroups) {\r\n            this.emailVO.groupIdList.push(group.id);\r\n        }\r\n        this.emailService.sendEmail(this.emailVO)\r\n            .subscribe(() => {\r\n                this.emailVO = new Email();\r\n                this.selectedGroups;\r\n                this.active = false;\r\n                setTimeout(() => this.active = true, 0);\r\n                this.msgs.push({ severity: \"info\", summary: \"Email campaign triggered successully.\", \r\n                    detail: \"Based on the number of contacts targeted, the campaign might take longer to complete. Visit your dashboard to see the progress of the Jobs.\" });\r\n                this.emailSending = false;\r\n            },\r\n            error => {\r\n                this.msgs.push({ severity: \"error\", summary: \"Email sending failed.\", detail: error });\r\n                this.emailSending = false;\r\n            });\r\n    }\r\n\r\n    showDialog() {\r\n        this.emailSending = true;\r\n    }\r\n\r\n    cancelClick() {\r\n        this.emailVO = new Email();\r\n    }\r\n\r\n    public options: Object = \r\n    {\r\n        placeholderText: 'Compose your email here!',\r\n        charCounterCount: false,\r\n        toolbarButtons:\r\n        [\r\n            'fullscreen', 'bold', 'italic', 'underline', 'strikeThrough', 'subscript', 'superscript', '|', 'fontFamily', 'fontSize', 'color', 'inlineStyle', 'paragraphStyle', '|', \r\n            'paragraphFormat', 'align', 'formatOL', 'formatUL', 'outdent', 'indent', 'quote', '-', 'insertLink', 'insertImage', 'insertTable','insertFile', '|', 'specialCharacters', 'insertHR', \r\n            'selectAll', 'clearFormatting', '|', 'spellChecker', 'help', 'html', '|', 'undo', 'redo'\r\n        ],\r\n        fileUploadURL:'/emails/attachFile',\r\n        fileUploadParams:\r\n        {\r\n            id:this.globalService.loggedInUser.loggedInUserName\r\n        },\r\n        imageUploadURL:'/emails/attachFile',\r\n        imageUploadParams:\r\n        {\r\n            id:this.globalService.loggedInUser.loggedInUserName\r\n        },\r\n        imageUploadMethod:'PUT',\r\n        fileUploadMethod: 'PUT',\r\n        // Set max file size to 20MB.\r\n        fileMaxSize: 20 * 1024 * 1024,\r\n        // Allow to upload any file.\r\n        fileAllowedTypes: ['*'],\r\n        tableStyles: \r\n        {\r\n            defaultBorderBackground:'Default'\r\n        },\r\n        events : \r\n        {\r\n            'froalaEditor.file.error': function (e, editor, error, response)\r\n            {\r\n                let errorMsg = new Error();\r\n                //console.log(\"Error during file upload : \"+error.code+\" | \"+error.message);\r\n                if(error.code === 5)\r\n                {\r\n                    error.message = \"File exceeds max size limit of 20MB\";\r\n                    alert(\"File exceeds max size limit of 20MB\");\r\n                }\r\n                else if(error.code === 3)\r\n                {\r\n                    error.message = response;\r\n                    this.error = response;\r\n                    \r\n                    errorMsg = JSON.parse(response);\r\n                    alert(errorMsg.error);\r\n                }               \r\n                \r\n                return error;                \r\n            }\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/email/email.component.ts","import { Injectable } from \"@angular/core\";\r\nimport { Http, Headers, Response } from \"@angular/http\";\r\nimport { Email } from \"./email\";\r\nimport { Observable } from \"rxjs/Observable\";\r\n\r\n@Injectable()\r\nexport class EmailService {\r\n\r\n    private emailUrl = \"emails\";\r\n\r\n    constructor(private http: Http) { }\r\n\r\n    sendEmail(emailVo: Email) {       \r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.post(this.emailUrl, JSON.stringify(emailVo), { headers: headers })\r\n            .map((res: Response) => { return; })\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    private handleError(error: any) {\r\n        let errMsg: string;\r\n        if (error instanceof Response) \r\n        {\r\n            const body = error.json() || '';\r\n            const err = body.error || JSON.stringify(body);\r\n            errMsg = `${error.status} - ${err}`;\r\n        } \r\n        else \r\n        {\r\n            errMsg = error.message ? error.message : error.toString();\r\n        }\r\n        //console.error(errMsg);\r\n        return Observable.throw(errMsg);\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/email/email.service.ts","export class Email {\r\n    fromAddress: string;\r\n    message: string;\r\n    subject: string;\r\n    groupIdList: number[];\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/email/email.ts","export class Error\r\n{\r\n    error:string;\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/email/error.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/*!\\n * froala_editor v2.6.4 (https://www.froala.com/wysiwyg-editor)\\n * License https://froala.com/wysiwyg-editor/terms/\\n * Copyright 2014-2017 Froala Labs\\n */\\n\\n.clearfix::after{clear:both;display:block;content:\\\"\\\";height:0}.hide-by-clipping{position:absolute;width:1px;height:1px;padding:0;margin:-1px;overflow:hidden;clip:rect(0,0,0,0);border:0}.fr-element table td.fr-selected-cell,.fr-element table th.fr-selected-cell{border:1px double #1e88e5}.fr-element table tr{user-select:none;-o-user-select:none;-moz-user-select:none;-khtml-user-select:none;-webkit-user-select:none;-ms-user-select:none}.fr-element table td,.fr-element table th{user-select:text;-o-user-select:text;-moz-user-select:text;-khtml-user-select:text;-webkit-user-select:text;-ms-user-select:text}.fr-element .fr-no-selection table td,.fr-element .fr-no-selection table th{user-select:none;-o-user-select:none;-moz-user-select:none;-khtml-user-select:none;-webkit-user-select:none;-ms-user-select:none}.fr-table-resizer{cursor:col-resize;position:fixed;z-index:3;display:none}.fr-table-resizer.fr-moving{z-index:2}.fr-table-resizer div{-webkit-opacity:0;-moz-opacity:0;opacity:0;-ms-filter:\\\"alpha(Opacity=0)\\\";border-right:1px solid #1e88e5}.fr-no-selection{user-select:none;-o-user-select:none;-moz-user-select:none;-khtml-user-select:none;-webkit-user-select:none;-ms-user-select:none}.fr-popup .fr-table-size .fr-table-size-info{text-align:center;font-size:14px;padding:8px}.fr-popup .fr-table-size .fr-select-table-size{line-height:0;padding:0 5px 5px;white-space:nowrap}.fr-popup .fr-table-size .fr-select-table-size>span{display:inline-block;padding:0 4px 4px 0;background:0 0}.fr-popup .fr-table-size .fr-select-table-size>span>span{display:inline-block;width:18px;height:18px;border:1px solid #ddd}.fr-popup .fr-table-size .fr-select-table-size>span.hover{background:0 0}.fr-popup .fr-table-size .fr-select-table-size>span.hover>span{background:rgba(30,136,229,.3);border:solid 1px #1e88e5}.fr-popup .fr-table-size .fr-select-table-size .new-line::after{clear:both;display:block;content:\\\"\\\";height:0}.fr-popup.fr-above .fr-table-size .fr-select-table-size>span{display:inline-block!important}.fr-popup .fr-table-colors-buttons{margin-bottom:5px}.fr-popup .fr-table-colors{line-height:0;display:block}.fr-popup .fr-table-colors>span{display:inline-block;width:32px;height:32px;position:relative;z-index:1}.fr-popup .fr-table-colors>span>i{text-align:center;line-height:32px;height:32px;width:32px;font-size:13px;position:absolute;bottom:0;cursor:default;left:0}.fr-popup .fr-table-colors>span:focus{outline:1px solid #222;z-index:2}.fr-popup.fr-desktop .fr-table-size .fr-select-table-size>span>span{width:12px;height:12px}.fr-insert-helper{position:fixed;z-index:9999;white-space:nowrap}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/email/table.min.css\n// module id = ../../../../../src/app/email/email/table.min.css\n// module chunks = 0","module.exports = \"<p-growl [value]=\\\"msgs\\\"></p-growl>\\r\\n\\r\\n<div class=\\\"main-panel\\\" style=\\\"min-height:110vh;\\\">\\r\\n<form *ngIf=\\\"active\\\" #groupForm=\\\"ngForm\\\">\\r\\n\\r\\n    <div class=\\\"panel panel-default\\\" *ngIf=\\\"!displayViewDialog && !displayCreateDialog\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n            <h3 style=\\\"margin:0px auto;display:block\\\" class=\\\"panel-title\\\">Search Groups</h3>\\r\\n        </div>\\r\\n        <div class=\\\"panel-body\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n                <div class=\\\"form-group\\\">\\r\\n                    <input type=\\\"text\\\" placeholder=\\\"Group Name\\\" class=\\\"form-control\\\" id=\\\"groupName\\\" [(ngModel)]=\\\"commonService.groupSearchCriteria.name\\\"\\r\\n                        name=\\\"groupNameSearchCriteria\\\">\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6\\\">               \\r\\n                <button type=\\\"submit\\\" pButton icon=\\\"fa fa-search\\\" pButton label=\\\"Search\\\" *ngIf=\\\"authorizationService.isUserHasRole('UI_ACCESS_GROUPS')\\\" (click)=\\\"commonService.searchGroupsByCriteria(username)\\\"></button>\\r\\n                <button type=\\\"button\\\" pButton icon=\\\"fa fa-refresh\\\" pButton label=\\\"Reset\\\" (click)=\\\"commonService.resetGroupsBySearchCriteria()\\\"></button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <p-dataTable [value]=\\\"commonService.groups\\\" *ngIf=\\\"!displayViewDialog && !displayCreateDialog\\\" selectionMode=\\\"single\\\" [responsive]=\\\"true\\\"\\r\\n        (onRowSelect)=\\\"onRowSelect($event)\\\">\\r\\n        <header>Groups</header>\\r\\n        <p-column field=\\\"name\\\" header=\\\"Group Name\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\"></p-column>\\r\\n        <p-column field=\\\"comments\\\" header=\\\"Comments\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\"></p-column>\\r\\n        <p-footer>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <button type=\\\"button\\\" icon=\\\"fa fa-plus\\\" pButton label=\\\"Create\\\" *ngIf=\\\"authorizationService.isUserHasRole('UI_CREATE_GROUPS')\\\" (click)=\\\"createGroupClick()\\\"></button>\\r\\n                    <!--button type=\\\"button\\\" icon=\\\"fa fa-download\\\" pButton label=\\\"Import\\\"></button-->\\r\\n                </div>\\r\\n            </div>\\r\\n        </p-footer>\\r\\n    </p-dataTable>\\r\\n\\r\\n    <!-- <p-dialog [(visible)]=\\\"displayViewDialog\\\" [responsive]=\\\"true\\\" showEffect=\\\"fade\\\" [modal]=\\\"true\\\" *ngIf=\\\"groupSelected\\\" [width]=\\\"800\\\"> -->\\r\\n\\r\\n    <div class=\\\"panel panel-default\\\" *ngIf=\\\"displayViewDialog && groupSelected\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n            <h3 class=\\\"panel-title\\\">Group Details</h3>\\r\\n        </div>\\r\\n        <br/>\\r\\n        <div class=\\\"panel-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-3\\\">\\r\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"!updateGroup\\\">\\r\\n                        <label for=\\\"name\\\">Group Name</label>\\r\\n                        <input disabled type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"groupName\\\" required [(ngModel)]=\\\"groupSelected.name\\\" name=\\\"groupNameView\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"updateGroup\\\">\\r\\n                        <label for=\\\"name\\\">Group Name</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"groupName\\\" required [(ngModel)]=\\\"groupSelected.name\\\" name=\\\"groupNameView\\\" #groupNameView=\\\"ngModel\\\">\\r\\n                        <div [hidden]=\\\"groupNameView.valid || groupNameView.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                            Group name is required\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-3\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"contactCount\\\">Contact Count</label>\\r\\n                        <input disabled type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"contactCount\\\" required [(ngModel)]=\\\"groupSelected.contactCount\\\" name=\\\"contactCountView\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"!updateGroup\\\">\\r\\n                        <label for=\\\"comments\\\">Comments</label>\\r\\n                        <input disabled type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"comments\\\" [(ngModel)]=\\\"groupSelected.comments\\\" name=\\\"commentsView\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"form-group\\\" *ngIf=\\\"updateGroup\\\">\\r\\n                        <label for=\\\"comments\\\">Comments</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"comments\\\" [(ngModel)]=\\\"groupSelected.comments\\\" name=\\\"commentsView\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"col-md-5\\\"></div>\\r\\n                    <button *ngIf=\\\"!updateGroup && authorizationService.isUserHasRole('UI_UPDATE_GROUPS')\\\" type=\\\"button\\\" pButton icon=\\\"fa-pencil\\\" (click)=\\\"updateGroupClick()\\\" label=\\\"Edit\\\" ></button>\\r\\n                    <button *ngIf=\\\"!updateGroup && authorizationService.isUserHasRole('UI_UPDATE_GROUPS')\\\" [disabled]=\\\"groupSelected.contactCount > 0\\\" type=\\\"submit\\\" pButton icon=\\\"fa-trash\\\" (click)=\\\"deleteSelectedGroup()\\\"\\r\\n                        label=\\\"Delete\\\"></button>\\r\\n                    <button *ngIf=\\\"!updateGroup\\\" type=\\\"button\\\" pButton icon=\\\"fa-close\\\" (click)=\\\"viewDialogCancelClick()\\\" label=\\\"Cancel\\\"></button>\\r\\n                    <button *ngIf=\\\"updateGroup && authorizationService.isUserHasRole('UI_UPDATE_GROUPS')\\\" type=\\\"submit\\\" pButton icon=\\\"fa-check\\\" (click)=\\\"updateGroupSubmit()\\\" label=\\\"Submit\\\" [disabled]=\\\"!groupForm.form.valid\\\" ></button>\\r\\n                    <button *ngIf=\\\"updateGroup\\\" type=\\\"button\\\" pButton icon=\\\"fa-close\\\" (click)=\\\"dialogUpdateCancelClick()\\\" label=\\\"Cancel\\\"></button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <!-- </p-dialog> -->\\r\\n\\r\\n    <!-- <p-dialog [(visible)]=\\\"displayCreateDialog\\\" [responsive]=\\\"true\\\" showEffect=\\\"fade\\\" [modal]=\\\"true\\\" [width]=\\\"800\\\" *ngIf=\\\"groupNew\\\"> -->\\r\\n\\r\\n    <div class=\\\"panel panel-default\\\" *ngIf=\\\"displayCreateDialog && groupNew\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n            <h3 class=\\\"panel-title\\\">Create Group</h3>\\r\\n        </div>\\r\\n        <br/>\\r\\n        <div class=\\\"panel-body\\\">\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"name\\\">Group Name</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"groupName\\\" required [(ngModel)]=\\\"groupNew.name\\\" name=\\\"groupNameCreate\\\" #groupNameCreate=\\\"ngModel\\\">\\r\\n                        <div [hidden]=\\\"groupNameCreate.valid || groupNameCreate.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n                            Group name is required\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-8\\\">\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label for=\\\"comments\\\">Comments</label>\\r\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"comments\\\" [(ngModel)]=\\\"groupNew.comments\\\" name=\\\"commentsCreate\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-12\\\">\\r\\n                    <div class=\\\"col-md-5\\\"></div>\\r\\n                    <button type=\\\"submit\\\" pButton icon=\\\"fa-check\\\" (click)=\\\"createGroupSubmit()\\\" label=\\\"Create\\\" *ngIf=\\\"authorizationService.isUserHasRole('UI_CREATE_GROUPS')\\\" [disabled]=\\\"!groupForm.form.valid\\\"></button>\\r\\n                    <button type=\\\"button\\\" pButton icon=\\\"fa-close\\\" (click)=\\\"createDialogCancelClick()\\\" label=\\\"Cancel\\\"></button>\\r\\n                </div>\\r\\n            </div>\\r\\n            <br/>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <!--  </p-dialog> -->\\r\\n\\r\\n</form>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/group/group.component.html\n// module id = ../../../../../src/app/email/group/group.component.html\n// module chunks = 0","import { Component, ApplicationRef } from \"@angular/core\";\r\nimport { Message } from 'primeng/primeng';\r\nimport { GroupService } from \"./group.service\";\r\nimport { Group } from \"./group\";\r\nimport { CommonService } from \"../shared/common.service\";\r\nimport { AuthorizationService } from '../../core/authorization.service';\r\nimport { GlobalService } from '../../core/global.service';\r\n\r\n@Component({\r\n    templateUrl: \"./group.component.html\"\r\n})\r\nexport class GroupComponent {\r\n\r\n    msgs: Message[] = [];\r\n    groupNew: Group;\r\n    groupSelected: Group;\r\n    groupUpdate: Group;\r\n\r\n    updateGroup: boolean;\r\n    displayCreateDialog: boolean;\r\n    displayViewDialog: boolean;\r\n    active: boolean = true;\r\n    username:string;\r\n\r\n    constructor(private groupService: GroupService, private commonService: CommonService\r\n        , private authorizationService: AuthorizationService,private globalService:GlobalService) { \r\n            this.username = globalService.loggedInUser.loggedInUserName;\r\n        }\r\n\r\n    onRowSelect(event: any) {\r\n        this.groupSelected = event.data;\r\n        this.groupService.getGroupById(this.groupSelected.id)\r\n            .subscribe(groupFromDB => {\r\n                this.groupSelected = groupFromDB;\r\n                this.displayViewDialog = true;\r\n                this.updateGroup = false;\r\n            });\r\n    }\r\n\r\n    viewDialogCancelClick() {\r\n        this.displayViewDialog = false;\r\n    }\r\n\r\n    createGroupClick() {\r\n        this.groupNew = new Group();\r\n        this.displayCreateDialog = true;\r\n        this.active = false;\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n\r\n    createDialogCancelClick() {\r\n        this.displayCreateDialog = false;\r\n    }\r\n\r\n    createGroupSubmit() {\r\n        this.msgs = [];\r\n        this.groupService.createGroup(this.groupNew)\r\n            .subscribe(() => {\r\n                //this.commonService.searchGroupsByCriteria();\r\n                this.commonService.resetGroupsBySearchCriteria();\r\n                this.displayCreateDialog = false;\r\n                this.commonService.getAllGroups(this.globalService.loggedInUser.loggedInUserName);\r\n                this.commonService.contacts = [];\r\n                this.msgs.push({ severity: \"info\", summary: \"Group created successfully.\", detail: \"\" });\r\n            },\r\n            error => {\r\n                this.msgs.push({ severity: \"error\", summary: \"Group creation failed.\", detail: error });\r\n            });\r\n    }\r\n\r\n    updateGroupClick() {\r\n        this.updateGroup = true;\r\n        this.groupUpdate = this.groupSelected;\r\n        this.groupSelected = this.cloneGroup(this.groupUpdate);\r\n    }\r\n\r\n    deleteSelectedGroup() {\r\n        this.msgs = [];\r\n        this.groupService.deleteGroup(this.groupSelected.id)\r\n            .subscribe(() => {\r\n                //this.commonService.searchGroupsByCriteria();\r\n                this.commonService.resetGroupsBySearchCriteria();\r\n                this.msgs.push({ severity: \"info\", summary: \"Group deleted successfully.\", detail: \"\" });\r\n                this.displayViewDialog = false;\r\n                this.commonService.contacts = [];\r\n            },\r\n            error => {\r\n                this.msgs.push({ severity: \"error\", summary: \"Group deletion failed.\", detail: error });\r\n            });\r\n    }\r\n\r\n    updateGroupSubmit() {\r\n        this.msgs = [];\r\n        this.groupService.updateGroup(this.groupSelected)\r\n            .subscribe(groupUpdated => {\r\n                this.groupSelected = groupUpdated;\r\n                //this.commonService.searchGroupsByCriteria();\r\n                this.commonService.resetGroupsBySearchCriteria();\r\n                this.displayViewDialog = true;\r\n                this.updateGroup = false;\r\n                this.commonService.contacts = [];\r\n                this.msgs.push({ severity: \"info\", summary: \"Group updated successfully.\", detail: \"\" });\r\n            },\r\n            error => {\r\n                this.msgs.push({ severity: \"error\", summary: \"Group updation failed.\", detail: error })\r\n            });\r\n    }\r\n\r\n    dialogUpdateCancelClick() {\r\n        this.updateGroup = false;\r\n        this.groupSelected = this.groupUpdate;\r\n    }\r\n\r\n    cloneGroup(gro: Group): Group {\r\n        let group = new Group();\r\n        for (let prop in gro) {\r\n            group[prop] = gro[prop];\r\n        }\r\n        return group;\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/group/group.component.ts","import { Injectable } from \"@angular/core\";\r\nimport { Http, Headers, Response,RequestOptions, URLSearchParams } from \"@angular/http\";\r\nimport { Group } from \"./group\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { GroupSearchCriteria } from \"./group_search_criteria\";\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Injectable()\r\nexport class GroupService {\r\n\r\n    private groupUrl = \"groups\";\r\n\r\n    constructor(private http: Http) { }\r\n\r\n    getAllGroups(username:string): Observable<Group[]> {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n        let options = new RequestOptions({ headers: headers });\r\n        let urlSearchParams = new URLSearchParams();\r\n        urlSearchParams.append('username', username);\r\n        let body = urlSearchParams.toString(); \r\n        return this.http.post(this.groupUrl+'/searchAll', body, options )\r\n            .map(res => res.json())\r\n            .catch(this.handleError);\r\n    }\r\n\r\n     getGroupById(id: number): Observable<Group> {\r\n        return this.http.get(this.groupUrl + \"/\" + id)\r\n            .map((res: Response) => res.json())\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    getAllGroupsBySearchCriteria(groupSearchCriteria: GroupSearchCriteria,username:string): Observable<Group[]> {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        headers.append('Access-Control-Allow-Origin', '*');\r\n        groupSearchCriteria.username = username;    \r\n        return this.http.post(this.groupUrl + \"/searchCriteria\", JSON.stringify(groupSearchCriteria), { headers: headers })\r\n            .map(res => res.json())\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    createGroup(group: Group): Observable<Group> {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.post(this.groupUrl, JSON.stringify(group), { headers: headers })\r\n            .map((res: Response) => { return; })\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    updateGroup(group: Group): Observable<Group> {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.put(this.groupUrl + \"/\" + group.id, JSON.stringify(group), { headers: headers })\r\n            .map((res: Response) => res.json())\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    deleteGroup(objectId: number): Observable<void> {\r\n        return this.http.delete(this.groupUrl + \"/\" + objectId)\r\n            .map((res: Response) => { return; })\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    private handleError(error: any) {\r\n        let errMsg = (error.message) ? error.message :\r\n            error.status ? `${error.status} - ${error.statusText}` : 'Server error';\r\n        console.error(errMsg);\r\n        return Observable.throw(errMsg);\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/group/group.service.ts","import {BaseEntity} from '../../core/model/base.entity'\r\n\r\nexport class Group   extends BaseEntity{\r\n    name: string;\r\n    comments: string;\r\n    contactCount: number;\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/group/group.ts","export class GroupSearchCriteria{\r\n    name: string;\r\n    comments: string;\r\n    username:string;\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/group/group_search_criteria.ts","export enum EmailServerPropertyValueTypeConstant {\r\n    STRING = <any>\"STRING\",\r\n    NUMBER = <any>\"NUMBER\",\r\n    BOOLEAN = <any>\"BOOLEAN\"\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/server/emailServerPropertyValueTypeConstant.ts","module.exports = \"<p-growl [value]=\\\"msgs\\\" sticky=\\\"sticky\\\"></p-growl>\\r\\n\\r\\n<!--div class=\\\"main-panel\\\" style=\\\"min-height:110vh;\\\"-->\\r\\n<form #contactForm=\\\"ngForm\\\" *ngIf=\\\"active\\\">\\r\\n\\r\\n<div class=\\\"panel panel-default\\\" *ngIf=\\\"!createEmailServer && !viewEmailServer\\\">\\r\\n\\t\\t<div class=\\\"panel-heading\\\">\\r\\n\\t\\t\\t<h3 class=\\\"panel-title\\\">Email Server Configurations</h3>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"panel-body\\\">\\r\\n\\t\\t\\t<p-dataTable [value]=\\\"emailServers\\\" *ngIf=\\\"!createEmailServer && !viewEmailServer\\\" [rows]=\\\"50\\\" [paginator]=\\\"true\\\" [pageLinks]=\\\"3\\\"\\r\\n\\t\\t\\t\\t[rowsPerPageOptions]=\\\"[10,20,50]\\\" selectionMode=\\\"single\\\" [responsive]=\\\"true\\\" (onRowSelect)=\\\"onRowSelect($event)\\\">\\r\\n\\t\\t\\t\\t<header>Email Servers</header>\\r\\n\\t\\t\\t\\t<p-column field=\\\"name\\\" header=\\\"Name\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\"></p-column>\\r\\n\\t\\t\\t\\t<p-column field=\\\"protocol\\\" header=\\\"Protocol\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\"></p-column>\\r\\n\\t\\t\\t\\t<p-column field=\\\"host\\\" header=\\\"Host\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\"></p-column>\\r\\n\\t\\t\\t\\t<p-column field=\\\"port\\\" header=\\\"Port\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\" [colspan]=\\\"2\\\"></p-column>\\r\\n\\t\\t\\t\\t<p-footer>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" pButton icon=\\\"fa fa-plus\\\" pButton label=\\\"Create\\\" *ngIf=\\\"authorizationService.isUserHasRole('UI_ACCESS_SERVERS')\\\" (click)=\\\"createEmailServerClick()\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t<!--button type=\\\"button\\\" pButton icon=\\\"fa fa-download\\\" label=\\\"Import\\\"></button-->\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</p-footer>\\r\\n\\t\\t\\t</p-dataTable>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\t\\r\\n\\r\\n\\t<div class=\\\"panel panel-default\\\" *ngIf=\\\"viewEmailServer && emailServerSelected\\\">\\r\\n\\t\\t<div class=\\\"panel-heading\\\">\\r\\n\\t\\t\\t<h3 class=\\\"panel-title\\\">Email Server</h3>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"panel-body\\\">\\r\\n\\t\\t\\t<p-tabView>\\r\\n\\t\\t\\t\\t<p-tabPanel header=\\\"Email Server Details\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\" *ngIf=\\\"!updateEmailServer\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"emailServerName\\\">Email Server Name*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input disabled type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"emailServerName\\\" [(ngModel)]=\\\"emailServerSelected.name\\\" name=\\\"emailServerNameView\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\" *ngIf=\\\"updateEmailServer\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"emailServerName\\\">Email Server Name*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"emailServerName\\\" required [(ngModel)]=\\\"emailServerSelected.name\\\" name=\\\"emailServerNameView\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t#emailServerNameView=\\\"ngModel\\\" placeholder=\\\"Required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"emailServerNameView.valid || emailServerNameView.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tEmail server name is required\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\" *ngIf=\\\"!updateEmailServer\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"protocol\\\">Protocol*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input disabled type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"protocol\\\" [(ngModel)]=\\\"emailServerSelected.protocol\\\" name=\\\"protocolView\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\" *ngIf=\\\"updateEmailServer\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"protocol\\\">Protocol*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"protocol\\\" required [(ngModel)]=\\\"emailServerSelected.protocol\\\" name=\\\"protocolView\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t#protocolView=\\\"ngModel\\\" placeholder=\\\"Required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"protocolView.valid || protocolView.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tProtocol is required\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\" *ngIf=\\\"!updateEmailServer\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"host\\\">Host*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input disabled type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"host\\\" [(ngModel)]=\\\"emailServerSelected.host\\\" name=\\\"hostView\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\" *ngIf=\\\"updateEmailServer\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"host\\\">Host*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"host\\\" required [(ngModel)]=\\\"emailServerSelected.host\\\" name=\\\"hostView\\\" #hostView=\\\"ngModel\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"hostView.valid || hostView.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tHost is required\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\" *ngIf=\\\"!updateEmailServer\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"port\\\">Port*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input disabled type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"port\\\" [(ngModel)]=\\\"emailServerSelected.port\\\" name=\\\"portView\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\" *ngIf=\\\"updateEmailServer\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"port\\\">Port*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"port\\\" required [(ngModel)]=\\\"emailServerSelected.port\\\" name=\\\"portView\\\" #portView=\\\"ngModel\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"portView.valid || portView.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tPort is required\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\" *ngIf=\\\"!updateEmailServer\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"mailsPerSession\\\">Mails Per Session*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input disabled type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"mailsPerSession\\\" [(ngModel)]=\\\"emailServerSelected.mailsPerSession\\\" name=\\\"mailsPerSessionView\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\" *ngIf=\\\"updateEmailServer\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"mailsPerSession\\\">Mails Per Session*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"mailsPerSession\\\" required [(ngModel)]=\\\"emailServerSelected.mailsPerSession\\\" name=\\\"mailsPerSessionView\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t#mailsPerSessionView=\\\"ngModel\\\" placeholder=\\\"Required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"mailsPerSessionView.valid || mailsPerSessionView.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tMails Per Session is required\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\" *ngIf=\\\"!updateEmailServer\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"fromAddress\\\">From Address*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input disabled type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"fromAddress\\\" [(ngModel)]=\\\"emailServerSelected.fromAddress\\\" name=\\\"fromAddressView\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\" *ngIf=\\\"updateEmailServer\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"fromAddress\\\">From Address*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"fromAddress\\\" required [(ngModel)]=\\\"emailServerSelected.fromAddress\\\" name=\\\"fromAddressView\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t#fromAddressView=\\\"ngModel\\\" placeholder=\\\"Required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"fromAddressView.valid || fromAddressView.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tFrom Address is required\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\" *ngIf=\\\"!updateEmailServer\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"emailUsername\\\">Email User name*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input disabled type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"emailUsername\\\" [(ngModel)]=\\\"emailServerSelected.emailUsername\\\" name=\\\"emailUsernameView\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\" *ngIf=\\\"updateEmailServer\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"emailUsername\\\">Email User name*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"emailUsername\\\" required [(ngModel)]=\\\"emailServerSelected.emailUsername\\\" name=\\\"emailUsernameView\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t#emailUsernameView=\\\"ngModel\\\" placeholder=\\\"Required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"emailUsernameView.valid || emailUsernameView.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tEmail Username is required\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\" *ngIf=\\\"!updateEmailServer\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"emailPassword\\\">Email Password*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input disabled type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"emailPassword\\\" [(ngModel)]=\\\"emailServerSelected.emailPassword\\\" name=\\\"emailPasswordView\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\" *ngIf=\\\"updateEmailServer\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"emailPassword\\\">Email Password*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"emailPassword\\\" required [(ngModel)]=\\\"emailServerSelected.emailPassword\\\" name=\\\"emailPasswordView\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t#emailPasswordView=\\\"ngModel\\\" placeholder=\\\"Required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"emailPasswordView.valid || emailPasswordView.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tMails Password is required\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<hr/>\\r\\n\\t\\t\\t\\t\\t\\t\\t<hr/>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-5\\\"></div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button *ngIf=\\\"!updateEmailServer && authorizationService.isUserHasRole('UI_UPDATE_SERVERS')\\\" type=\\\"button\\\" pButton icon=\\\"fa-pencil\\\" (click)=\\\"updateEmailServerClick()\\\" label=\\\"Edit\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button *ngIf=\\\"!updateEmailServer && authorizationService.isUserHasRole('UI_DELETE_SERVERS')\\\" type=\\\"submit\\\" pButton icon=\\\"fa-trash\\\" (click)=\\\"deleteEmailServerCancleClick()\\\" label=\\\"Delete\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button *ngIf=\\\"!updateEmailServer\\\" type=\\\"button\\\" pButton icon=\\\"fa-close\\\" (click)=\\\"viewEmailServerCancleClick()\\\" label=\\\"Cancel\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button *ngIf=\\\"updateEmailServer && authorizationService.isUserHasRole('UI_UPDATE_SERVERS')\\\" type=\\\"submit\\\" pButton icon=\\\"fa-check\\\" (click)=\\\"updateEmailServerSubmit()\\\" label=\\\"Submit\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t[disabled]=\\\"!contactForm.form.valid\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t<button *ngIf=\\\"updateEmailServer\\\" type=\\\"button\\\" pButton icon=\\\"fa-close\\\" (click)=\\\"updateEmailServerCancel()\\\" label=\\\"Cancel\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</p-tabPanel>\\r\\n\\t\\t\\t\\t<p-tabPanel header=\\\"Email Server Details\\\">\\r\\n\\t\\t\\t\\t\\t<form #emailServerPropertiesUpdateForm=\\\"ngForm\\\" *ngIf=\\\"active2\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\" *ngIf=\\\"updateEmailServer\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"emailPassword\\\">Property Name*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"propertyName\\\" required [(ngModel)]=\\\"emailServerPropertyNew.propertyName\\\" name=\\\"propertyNameView\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t#propertyNameView=\\\"ngModel\\\" placeholder=\\\"Required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"propertyNameView.valid || propertyNameView.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tProperty name is required\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"emailPassword\\\">Email Value*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"propertyValue\\\" required [(ngModel)]=\\\"emailServerPropertyNew.value\\\" name=\\\"propertyValueView\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t#propertyValueView=\\\"ngModel\\\" placeholder=\\\"Required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"propertyValueView.valid || propertyValueView.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tProperty value is required\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"emailPassword\\\">Property Type*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<p-dropdown [style]=\\\"{'width':'300px'}\\\" id=\\\"propertyType\\\" placeholder=\\\"Select\\\" required [options]=\\\"emailServerPropertyTypes\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[(ngModel)]=\\\"emailServerPropertyNew.emailServerPropertyValueTypeConstant\\\" #propertyTypeView=\\\"ngModel\\\" name=\\\"propertyTypeView\\\"></p-dropdown>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"propertyTypeView.valid || propertyTypeView.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tProperty type is required\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" pButton icon=\\\"fa-check\\\" (click)=\\\"createEmailServerProperty(emailServerPropertyNew)\\\" label=\\\"Add\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t[disabled]=\\\"!emailServerPropertiesUpdateForm.form.valid\\\" *ngIf=\\\"authorizationService.isUserHasRole('UI_CREATE_SERVERS')\\\"></button>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<br/>\\r\\n\\t\\t\\t\\t\\t\\t<p-dataTable [value]=\\\"emailServerPropertiesForServer\\\" *ngIf=\\\"emailServerSelected && emailServerPropertiesForServer && emailServerPropertiesForServer.length > 0\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t[rows]=\\\"50\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<header>Email Servers</header>\\r\\n\\t\\t\\t\\t\\t\\t\\t<p-column field=\\\"propertyName\\\" header=\\\"Name\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\"></p-column>\\r\\n\\t\\t\\t\\t\\t\\t\\t<p-column field=\\\"value\\\" header=\\\"Value\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\"></p-column>\\r\\n\\t\\t\\t\\t\\t\\t\\t<p-column field=\\\"emailServerPropertyValueTypeConstant\\\" header=\\\"Type\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\"></p-column>\\r\\n\\t\\t\\t\\t\\t\\t\\t<p-column styleClass=\\\"col-button\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<template let-emailServerProperties=\\\"rowData\\\" pTemplate type=\\\"body\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" [disabled]=\\\"!updateEmailServer\\\" pButton icon=\\\"fa-trash\\\" (click)=\\\"deleteEmailServerProperty(emailServerProperties)\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tlabel=\\\"Delete\\\" *ngIf=\\\"authorizationService.isUserHasRole('UI_DELETE_SERVERS')\\\"></button></template>\\r\\n\\t\\t\\t\\t\\t\\t\\t</p-column>\\r\\n\\t\\t\\t\\t\\t\\t</p-dataTable>\\r\\n\\t\\t\\t\\t\\t</form>\\r\\n\\t\\t\\t\\t</p-tabPanel>\\r\\n\\t\\t\\t</p-tabView>\\r\\n\\t\\t</div>\\r\\n\\t\\t<br/>\\r\\n\\t</div>\\r\\n\\r\\n\\t<div class=\\\"panel panel-default\\\" *ngIf=\\\"createEmailServer\\\">\\r\\n\\t\\t<div class=\\\"panel-heading\\\">\\r\\n\\t\\t\\t<h3 class=\\\"panel-title\\\">Create Email Server</h3>\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\\\"panel-body\\\">\\r\\n\\t\\t\\t<p-tabView>\\r\\n\\t\\t\\t\\t<p-tabPanel header=\\\"Email Server Details\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"emailServerName\\\">Email Server Name*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"emailServerName\\\" required [(ngModel)]=\\\"emailServerNew.name\\\" name=\\\"emailServerNameCreate\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t#emailServerNameCreate=\\\"ngModel\\\" placeholder=\\\"Required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"emailServerNameCreate.valid || emailServerNameCreate.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tEmail server name is required\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"protocol\\\">Protocol*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"protocol\\\" required [(ngModel)]=\\\"emailServerNew.protocol\\\" name=\\\"protocolCreate\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t#protocolCreate=\\\"ngModel\\\" placeholder=\\\"Required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"protocolCreate.valid || protocolCreate.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tProtocol is required\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"host\\\">Host*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"host\\\" required [(ngModel)]=\\\"emailServerNew.host\\\" name=\\\"hostCreate\\\" #hostCreate=\\\"ngModel\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"hostCreate.valid || hostCreate.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tHost is required\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"port\\\">Port*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"port\\\" required [(ngModel)]=\\\"emailServerNew.port\\\" name=\\\"portCreate\\\" #portCreate=\\\"ngModel\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tplaceholder=\\\"Required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"portCreate.valid || portCreate.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tPort is required\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"mailsPerSession\\\">Mails Per Session*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"mailsPerSession\\\" required [(ngModel)]=\\\"emailServerNew.mailsPerSession\\\" name=\\\"mailsPerSessionCreate\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t#mailsPerSessionCreate=\\\"ngModel\\\" placeholder=\\\"Required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"mailsPerSessionCreate.valid || mailsPerSessionCreate.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tMails Per Session is required\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"fromAddress\\\">From Address*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"fromAddress\\\" required [(ngModel)]=\\\"emailServerNew.fromAddress\\\" name=\\\"fromAddressCreate\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t#fromAddressCreate=\\\"ngModel\\\" placeholder=\\\"Required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"fromAddressCreate.valid || fromAddressCreate.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tFrom Address is required\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"emailUsername\\\">Email User name*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"emailUsername\\\" required [(ngModel)]=\\\"emailServerNew.emailUsername\\\" name=\\\"emailUsernameCreate\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t#emailUsernameCreate=\\\"ngModel\\\" placeholder=\\\"Required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"emailUsernameCreate.valid || emailUsernameCreate.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tEmail Username is required\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<label for=\\\"emailPassword\\\">Email Password*</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"emailPassword\\\" required [(ngModel)]=\\\"emailServerNew.emailPassword\\\" name=\\\"emailPasswordCreate\\\"\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t#emailPasswordCreate=\\\"ngModel\\\" placeholder=\\\"Required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<div [hidden]=\\\"emailPasswordCreate.valid || emailPasswordCreate.pristine\\\" class=\\\"alert alert-danger\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tMails Password is required\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</p-tabPanel>\\r\\n\\t\\t\\t</p-tabView>\\r\\n\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t<hr/>\\r\\n\\t\\t\\t\\t\\t<hr/>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t\\t<div class=\\\"col-md-12\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"col-md-5\\\"></div>\\r\\n\\t\\t\\t\\t<button type=\\\"submit\\\" pButton icon=\\\"fa-check\\\" (click)=\\\"createEmailServerSubmit()\\\" label=\\\"Create\\\" [disabled]=\\\"!contactForm.form.valid\\\" *ngIf=\\\"authorizationService.isUserHasRole('UI_CREATE_SERVERS')\\\"></button>\\r\\n\\t\\t\\t\\t<button type=\\\"button\\\" pButton icon=\\\"fa-close\\\" (click)=\\\"createEmailServerCancleClick()\\\" label=\\\"Cancel\\\"></button>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</form>\\r\\n\\r\\n<!--/div-->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/server/emailserver.component.html\n// module id = ../../../../../src/app/email/server/emailserver.component.html\n// module chunks = 0","import { Component, OnInit } from \"@angular/core\";\r\nimport { SelectItem } from \"primeng/primeng\";\r\nimport { Message } from \"../../message\";\r\nimport { EmailServer } from \"./emailserver\";\r\nimport { EmailServerService } from \"./emailserver.service\";\r\nimport { EmailServerProperties } from \"./emailserver.properties\";\r\nimport { EmailServerPropertyValueTypeConstant } from \"./emailServerPropertyValueTypeConstant\";\r\nimport { EmailServerPropertiesService } from \"./emailserverproperties.service\";\r\nimport { AuthorizationService } from '../../core/authorization.service';\r\n\r\n@Component({\r\n    templateUrl: \"./emailserver.component.html\"\r\n})\r\nexport class EmailServerComponent implements OnInit {\r\n\r\n    msgs: Message[] = [];\r\n    emailServers: EmailServer[] = [];\r\n    emailServerPropertiesForServer: EmailServerProperties[] = [];\r\n    emailServerNew: EmailServer;\r\n    emailServerUpdate: EmailServer;\r\n    createEmailServer: boolean;\r\n    active: boolean = true;\r\n    active2: boolean = true;\r\n    active3: boolean = true;\r\n    viewEmailServer: boolean;\r\n    updateEmailServer: boolean;\r\n    emailServerSelected: EmailServer;\r\n    emailServerPropertyTypes: SelectItem[];\r\n    emailServerPropertyNew: EmailServerProperties;\r\n\r\n    constructor(private emailServerService: EmailServerService,\r\n        private emailServerPropertiesService: EmailServerPropertiesService, private authorizationService: AuthorizationService) { }\r\n\r\n    ngOnInit() {\r\n        this.getAllEmailServers();\r\n        this.loadEmailServerPropertyType();\r\n    }\r\n\r\n    loadEmailServerPropertyType() {\r\n        this.emailServerPropertyTypes = [];\r\n        this.emailServerPropertyTypes.push({ label: 'Select Type', value: null });\r\n        this.emailServerPropertyTypes.push({ label: 'String', value: EmailServerPropertyValueTypeConstant.STRING });\r\n        this.emailServerPropertyTypes.push({ label: 'Number', value: EmailServerPropertyValueTypeConstant.NUMBER });\r\n        this.emailServerPropertyTypes.push({ label: 'Boolean', value: EmailServerPropertyValueTypeConstant.BOOLEAN });\r\n    }\r\n\r\n    onRowSelect(event: any) {\r\n        this.emailServerSelected = event.data;\r\n        this.emailServerPropertyNew = new EmailServerProperties();\r\n        this.viewEmailServer = true;\r\n        this.active = false;\r\n        this.getAllEmailServerProperties();\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n\r\n    getAllEmailServers() {\r\n        this.emailServerService.getAllEmailServers()\r\n            .subscribe(emailServers => { this.emailServers = emailServers; }\r\n            );\r\n    }\r\n\r\n    createEmailServerClick() {\r\n        this.emailServerNew = new EmailServer();\r\n        this.createEmailServer = true;\r\n        this.emailServerPropertyNew = new EmailServerProperties();\r\n        this.emailServerNew.emailServerProperties = [];\r\n        this.active = false;\r\n        setTimeout(() => this.active = true, 0);\r\n    }\r\n\r\n    getAllEmailServerProperties() {\r\n        this.emailServerPropertiesService.getEmailServerPropertiesByEmailServerId(this.emailServerSelected.id)\r\n            .subscribe(emailServers => { this.emailServerPropertiesForServer = emailServers; },\r\n            error => {\r\n                this.msgs.push({ severity: \"error\", summary: \"Error while retrieving Email Server Property for server.\", detail: error })\r\n            });\r\n    }\r\n\r\n\r\n    createEmailServerProperty() {\r\n        this.msgs = [];\r\n        this.emailServerPropertiesService.createEmailServerProperty(this.emailServerPropertyNew, this.emailServerSelected.id)\r\n            .subscribe(() => {\r\n                this.msgs.push({ severity: \"info\", summary: \"Email Server Property created successfully.\", detail: \"\" });\r\n                this.emailServerPropertyNew = new EmailServerProperties();\r\n                this.getAllEmailServerProperties();\r\n            },\r\n            error => {\r\n                this.msgs.push({ severity: \"error\", summary: \"Email Server Property creation failed.\", detail: error })\r\n            });\r\n    }\r\n\r\n    deleteEmailServerProperty(emailServerProperties: EmailServerProperties) {\r\n        this.msgs = [];\r\n        this.emailServerPropertiesService.deleteEmailServerProperty(emailServerProperties.id)\r\n            .subscribe(() => {\r\n                this.msgs.push({ severity: \"info\", summary: \"Email Server Property deleted successfully.\", detail: \"\" });\r\n                this.emailServerPropertyNew = new EmailServerProperties();\r\n                this.getAllEmailServerProperties();\r\n            },\r\n            error => {\r\n                this.msgs.push({ severity: \"error\", summary: \"Email Server Property deletion failed.\", detail: error })\r\n            });\r\n    }\r\n\r\n    createEmailServerSubmit() {\r\n        this.msgs = [];\r\n        this.emailServerService.createEmailServer(this.emailServerNew)\r\n            .subscribe(() => {\r\n                this.msgs.push({ severity: \"info\", summary: \"Email Server created successfully.\", detail: \"\" });\r\n                this.createEmailServer = false;\r\n                this.getAllEmailServers();\r\n            },\r\n            error => {\r\n                this.msgs.push({ severity: \"error\", summary: \"Email Server creation failed.\", detail: error })\r\n            });\r\n    }\r\n\r\n    updateEmailServerSubmit() {\r\n        this.emailServerService.updateEmailServerSubmit(this.emailServerSelected)\r\n            .subscribe(emailServer => {\r\n                this.emailServerSelected = emailServer;\r\n                this.viewEmailServer = true;\r\n                this.updateEmailServer = false;\r\n                this.msgs.push({ severity: \"info\", summary: \"Email Server updated successfully.\", detail: \"\" });\r\n            },\r\n            error => {\r\n                this.msgs.push({ severity: \"error\", summary: \"Email Server updation failed.\", detail: error })\r\n            });\r\n    }\r\n\r\n    createEmailServerCancleClick() {\r\n        this.createEmailServer = false;\r\n        this.updateEmailServer = false;\r\n    }\r\n\r\n    viewEmailServerCancleClick() {\r\n        this.viewEmailServer = false;\r\n        this.updateEmailServer = false;\r\n    }\r\n\r\n    updateEmailServerClick() {\r\n        this.updateEmailServer = true;\r\n        this.viewEmailServer = true;\r\n        this.emailServerUpdate = this.emailServerSelected;\r\n        this.emailServerSelected = this.cloneContact(this.emailServerUpdate);\r\n    }\r\n\r\n    updateEmailServerCancel() {\r\n        this.updateEmailServer = false;\r\n        this.viewEmailServer = true;\r\n        this.emailServerSelected = this.emailServerUpdate;\r\n    }\r\n\r\n    cloneContact(server: EmailServer): EmailServer {\r\n        let emailServer = new EmailServer();\r\n        for (let prop in server) {\r\n            emailServer[prop] = server[prop];\r\n        }\r\n        return emailServer;\r\n    }\r\n\r\n    deleteEmailServerCancleClick() {\r\n        this.msgs = [];\r\n        this.emailServerService.deleteEmailServer(this.emailServerSelected.id)\r\n            .subscribe(() => {\r\n                this.msgs.push({ severity: \"info\", summary: \"Email Server deleted successfully.\", detail: \"\" });\r\n                this.viewEmailServer = false;\r\n                this.getAllEmailServers();\r\n            },\r\n            error => {\r\n                this.msgs.push({ severity: \"error\", summary: \"Email Server deletion failed.\", detail: error });\r\n            });\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/server/emailserver.component.ts","import { EmailServer } from \"./emailserver\";\r\nimport { EmailServerPropertyValueTypeConstant } from \"./emailServerPropertyValueTypeConstant\";\r\nexport class EmailServerProperties {\r\n    id: number;\r\n    version: number;\r\n    propertyName: string;\r\n    value: string;\r\n    emailServerPropertyValueTypeConstant: EmailServerPropertyValueTypeConstant;\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/server/emailserver.properties.ts","import { Injectable } from \"@angular/core\";\r\nimport { Http, Response, Headers } from \"@angular/http\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { EmailServer } from \"./emailserver\";\r\n\r\n@Injectable()\r\nexport class EmailServerService {\r\n\r\n    private emailServerURL = \"emailServer\";\r\n\r\n    constructor(private http: Http) { }\r\n\r\n    getAllEmailServers(): Observable<EmailServer[]> {\r\n        return this.http.get(this.emailServerURL)\r\n            .map((res: Response) => res.json())\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    createEmailServer(emailServer: EmailServer): Observable<EmailServer> {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.post(this.emailServerURL, JSON.stringify(emailServer), { headers: headers })\r\n            .map((res: Response) => { return; })\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    deleteEmailServer(objectId: number): Observable<void> {\r\n        return this.http.delete(this.emailServerURL + \"/\" + objectId)\r\n            .map((res: Response) => { return; })\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    updateEmailServerSubmit(emailServer: EmailServer) {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.put(this.emailServerURL + \"/\" + emailServer.id, JSON.stringify(emailServer), { headers: headers })\r\n            .map((res: Response) => res.json())\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    private extractData(res: Response) {\r\n        let body = res.json();\r\n        return body || {};\r\n    }\r\n\r\n     private handleError(error: any) {\r\n        let errMsg = (error.message) ? error.message :\r\n            error.status ? `${error.status} - ${error.statusText}` : 'Server error';\r\n        //console.error(errMsg);\r\n        return Observable.throw(errMsg);\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/server/emailserver.service.ts","import { EmailServerProperties } from \"./emailserver.properties\";\r\n\r\nexport class EmailServer {\r\n    id: number;\r\n    version: number;\r\n    name: string;\r\n    defaultServer:boolean;\r\n    protocol: string;\r\n    host: string;\r\n    port: string;\r\n    mailsPerSession: number;\r\n    fromAddress: string;\r\n    emailUserName: string;\r\n    emailPassword: string;\r\n    emailServerProperties: EmailServerProperties[];\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/server/emailserver.ts","import { Injectable } from \"@angular/core\";\r\nimport { Http, Response, Headers } from \"@angular/http\";\r\nimport { Observable } from \"rxjs/Observable\";\r\nimport { EmailServer } from \"./emailserver\";\r\nimport { EmailServerProperties } from \"./emailserver.properties\";\r\n\r\n@Injectable()\r\nexport class EmailServerPropertiesService {\r\n\r\n    private emailServerPropertiesURL = \"emailServerProperties\";\r\n\r\n    constructor(private http: Http) { }\r\n\r\n    getEmailServerPropertiesByEmailServerId(emailServerId :number): Observable<EmailServerProperties[]> {\r\n        return this.http.get(this.emailServerPropertiesURL+'/emailServer/' + emailServerId)\r\n            .map((res: Response) => res.json())\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    createEmailServerProperty(emailServerProperty: EmailServerProperties,emailServerId :number): Observable<EmailServerProperties> {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.post(this.emailServerPropertiesURL+ \"/\" + emailServerId, JSON.stringify(emailServerProperty), { headers: headers })\r\n            .map((res: Response) => { return; })\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    deleteEmailServerProperty(objectId: number): Observable<void> {\r\n        return this.http.delete(this.emailServerPropertiesURL + \"/\" + objectId)\r\n            .map((res: Response) => { return; })\r\n            .catch(this.handleError);\r\n    }\r\n\r\n    private extractData(res: Response) {\r\n        let body = res.json();\r\n        return body || {};\r\n    }\r\n\r\n    private handleError(error: any) {\r\n        let errMsg = (error.message) ? error.message :\r\n            error.status ? `${error.status} - ${error.statusText}` : 'Server error';\r\n        console.error(errMsg);\r\n        return Observable.throw(errMsg);\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/server/emailserverproperties.service.ts","import { Injectable } from \"@angular/core\";\r\nimport { ContactService } from \"../contact/contact.service\";\r\nimport { GroupService } from \"../group/group.service\";\r\nimport { SelectItem } from 'primeng/primeng';\r\nimport { Contact } from \"../contact/contact\";\r\nimport { ContactSearchCriteria } from \"../contact/contact_search_criteria\";\r\nimport { GroupSearchCriteria } from \"../group/group_search_criteria\";\r\nimport { Group } from \"../group/group\";\r\n\r\n@Injectable()\r\nexport class CommonService {\r\n\r\n    groupItems: SelectItem[];\r\n    groupNamesForSearch: SelectItem[];\r\n    contacts: Contact[];\r\n    contactSearchCriteria = new ContactSearchCriteria();\r\n    groups: Group[];\r\n    groupSearchCriteria = new GroupSearchCriteria();\r\n\r\n    constructor(private contactService: ContactService, private groupService: GroupService) { }\r\n\r\n    resetContactsBySearchCriteria() {\r\n        this.contacts = [];\r\n        this.contactSearchCriteria = new ContactSearchCriteria();\r\n    }\r\n\r\n    resetGroupsBySearchCriteria() {\r\n        this.groups = [];\r\n        this.groupSearchCriteria = new GroupSearchCriteria();\r\n    }\r\n\r\n    getAllContacts(username:string) {\r\n        this.contactService.getAllContacts(username)\r\n            .subscribe(\r\n            contacts => {\r\n                this.contacts = contacts;\r\n                for (let contact of this.contacts) {\r\n                    for (let contactGroup of contact.contactGroups) {\r\n                        if (contact.groupDetails === undefined) {\r\n                            contact.groupDetails = contactGroup.group.name;\r\n                        } else {\r\n                            contact.groupDetails += \", \" + contactGroup.group.name;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            );\r\n    }\r\n\r\n    getAllContactsBySearchCriteria(username:string) {\r\n        this.contactService.getAllContactsByCriteria(this.contactSearchCriteria,username)\r\n            .subscribe(\r\n            contacts => {\r\n                this.contacts = contacts;\r\n                for (let contact of this.contacts) {\r\n                    for (let contactGroup of contact.contactGroups) {\r\n                        if (contact.groupDetails === undefined) {\r\n                            contact.groupDetails = contactGroup.group.name;\r\n                        } else {\r\n                            contact.groupDetails += \", \" + contactGroup.group.name;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            );\r\n    }\r\n\r\n    getAllGroups(username:string) {\r\n        this.groupService.getAllGroups(username)\r\n            .subscribe(\r\n            groups => {\r\n                this.groupItems = [];\r\n                this.groupNamesForSearch = [];\r\n                for (let group of groups) {\r\n                    this.groupItems.push({ label: group.name, value: group });\r\n                    this.groupNamesForSearch.push({ label: group.name, value: group.id });\r\n                }\r\n            }\r\n            );\r\n    }\r\n\r\n    searchGroupsByCriteria(username:string) {\r\n        this.groupService.getAllGroupsBySearchCriteria(this.groupSearchCriteria,username)\r\n            .subscribe(\r\n            groups => this.groups = groups\r\n            );\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/email/shared/common.service.ts","exports = module.exports = require(\"../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/css?family=Montserrat);\", \"\"]);\n\n// module\nexports.push([module.id, \"md-sidenav-layout {\\r\\n  overflow:visible;\\r\\n}\\r\\nmd-sidenav-layout.m2app-dark {\\r\\n  background-color: black;\\r\\n}\\r\\n\\r\\n.app-content {\\r\\n  /*padding: 20px;\\r\\n  min-height:95vh;*/\\r\\n  background-size: cover;\\r\\nbox-shadow: -5px 23px 101px -23px rgba(0,0,0,0.75);\\r\\n}\\r\\n\\r\\n.app-sidenav {\\r\\n  /*background: white;*/\\r\\n  /*height: 100vh;*/\\r\\n  min-height:100vh;\\r\\n  width:auto;\\r\\n  height:auto;\\r\\n}\\r\\n\\r\\n.app-sidenav table {\\r\\n  margin-top:30px;\\r\\n  margin-left:2px; \\r\\n padding:30px 5px;\\r\\n width:100%;\\r\\n/*-webkit-box-shadow: 6px 18px 20px -23px rgba(0,0,0,0.75);\\r\\n-moz-box-shadow: 6px 18px 20px -23px rgba(0,0,0,0.75);\\r\\nbox-shadow: 6px 18px 20px -23px rgba(0,0,0,0.75);*/\\r\\nmin-height:60vh;\\r\\n\\r\\n}\\r\\n\\r\\n.app-sidenav table tr {\\r\\n width:100%;\\r\\n  padding:30px 5px;\\r\\n/*-webkit-box-shadow: 6px 18px 20px -23px rgba(0,0,0,0.75);\\r\\n-moz-box-shadow: 6px 18px 20px -23px rgba(0,0,0,0.75);\\r\\nbox-shadow: 6px 18px 20px -23px rgba(0,0,0,0.75);*/\\r\\nborder-bottom:1px solid #e6e9ef;\\r\\n}\\r\\n\\r\\n.app-sidenav table td {\\r\\n \\r\\n text-align:left;\\r\\n color:#797a7c;\\r\\n}\\r\\n\\r\\n.app-sidenav table tr:hover {\\r\\n\\tbackground:#54a0d3;\\r\\n}\\r\\n\\r\\n.app-sidenav table td:hover {\\r\\n\\tcolor:white;\\r\\n\\tfont-weight:bold;\\r\\n}\\r\\n\\r\\n.md-button-ripple::after {\\r\\nbackground:#54a0d3;\\r\\ncolor:white;\\r\\n}\\r\\n\\r\\n.app-sidenav table td img {\\r\\n\\twidth:35px;\\r\\n\\theight:35px;\\r\\n}\\r\\n\\r\\n.app-sidenav-links {\\r\\n  /*background: white;*/\\r\\n}\\r\\n\\r\\n.app-sidenav-links:hover\\r\\n{\\r\\n   /*background:white;\\r\\n   background-color: white;*/\\r\\n}\\r\\n\\r\\n.app-toolbar-filler {\\r\\n  -webkit-box-flex: 1;\\r\\n      -ms-flex: 1 1 auto;\\r\\n          flex: 1 1 auto;\\r\\n}\\r\\n\\r\\n.app-toolbar-menu {\\r\\n  padding: 10px;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.app-icon-button {\\r\\n  box-shadow: none;\\r\\n  -webkit-user-select: none;\\r\\n     -moz-user-select: none;\\r\\n      -ms-user-select: none;\\r\\n          user-select: none;\\r\\n  background: none;\\r\\n  border: none;\\r\\n  cursor: pointer;\\r\\n  -webkit-filter: none;\\r\\n          filter: none;\\r\\n  font-weight: normal;\\r\\n  height: auto;\\r\\n  line-height: inherit;\\r\\n  margin: 0;\\r\\n  min-width: 0;\\r\\n  padding: 0;\\r\\n  text-align: left;\\r\\n  text-decoration: none;\\r\\n}\\r\\n\\r\\n.app-action {\\r\\n  display: inline-block;\\r\\n  position: fixed;\\r\\n  bottom: 20px;\\r\\n  right: 20px;\\r\\n}\\r\\n\\r\\n.md-toolbar.md-primary {\\r\\n  padding-left: 60px;\\r\\n  padding-right: 90px;\\r\\n}\\r\\n\\r\\n#tool-bt{\\r\\n  width: 110px;\\r\\n  font-family: 'Montserrat', sans-serif;\\r\\n  background-color: #2382f6;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/home/home.component.css\n// module id = ../../../../../src/app/home/home.component.css\n// module chunks = 0","module.exports = \"<md-sidenav-layout [class.m2app-dark]=\\\"isDarkTheme\\\">\\r\\n\\r\\n  <md-sidenav #sidenav mode=\\\"side\\\" class=\\\"app-sidenav\\\" [opened]=\\\"userLoggedIn\\\">\\r\\n    <md-toolbar color=\\\"primary\\\">\\r\\n      <h3>\\r\\n        <span><img src=\\\"../../app/resources/images/logo.png\\\" style=\\\"width:35px;height:35px;\\\"/></span>\\r\\n      </h3>\\r\\n    </md-toolbar>\\r\\n\\r\\n    <table>\\r\\n      <tr *ngIf=\\\"authorizationService.isUserHasRole('UI_ACCESS_DASHBOARD')\\\">\\r\\n\\t\\t<td>\\r\\n           <img src=\\\"../../app/resources/images/dashboard.png\\\"/>\\r\\n        </td>\\r\\n        <td>\\r\\n           <button md-button [routerLink]=\\\"['dashboard']\\\" routerLinkActive=\\\"active\\\">Dashboard</button>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr *ngIf=\\\"authorizationService.isUserHasRole('UI_ACCESS_CONTACTS')\\\">\\r\\n\\t\\t<td>\\r\\n           <img src=\\\"../../app/resources/images/contact.png\\\"/>\\r\\n        </td>\\r\\n        <td>\\r\\n           <button md-button [routerLink]=\\\"['contacts']\\\" routerLinkActive=\\\"active\\\">Contacts</button>\\r\\n        </td>\\r\\n      </tr>\\r\\n\\t  <tr *ngIf=\\\"authorizationService.isUserHasRole('UI_ACCESS_BULK_UPLOAD')\\\">\\r\\n\\t\\t<td>\\r\\n           <img src=\\\"../../app/resources/images/upload.png\\\"/>\\r\\n        </td>\\r\\n        <td>\\r\\n           <button md-button [routerLink]=\\\"['bulk_upload']\\\" routerLinkActive=\\\"active\\\">Bulk Contacts Upload</button>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr *ngIf=\\\"authorizationService.isUserHasRole('UI_ACCESS_GROUPS')\\\">\\r\\n\\t\\t<td>\\r\\n           <img src=\\\"../../app/resources/images/usergroup.png\\\"/>\\r\\n        </td>\\r\\n        <td>\\r\\n           <button md-button [routerLink]=\\\"['groups']\\\" routerLinkActive=\\\"active\\\">Groups</button>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr *ngIf=\\\"authorizationService.isUserHasRole('UI_ACCESS_SEND_EMAIL')\\\">\\r\\n\\t\\t<td>\\r\\n           <img src=\\\"../../app/resources/images/sendemail.png\\\"/>\\r\\n        </td>\\r\\n        <td>\\r\\n           <button md-button [routerLink]=\\\"['send_email']\\\" routerLinkActive=\\\"active\\\">Send Emails</button>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr *ngIf=\\\"authorizationService.isUserHasRole('UI_ACCESS_SERVERS')\\\">\\r\\n\\t\\t<td>\\r\\n           <img src=\\\"../../app/resources/images/server.png\\\"/>\\r\\n        </td>\\r\\n        <td>\\r\\n           <button md-button [routerLink]=\\\"['servers']\\\" routerLinkActive=\\\"active\\\">Servers</button>\\r\\n        </td>\\r\\n      </tr>\\r\\n\\t  <tr *ngIf=\\\"authorizationService.isUserHasRole('UI_ACCESS_ANALYTICS')\\\">\\r\\n\\t\\t    <td>\\r\\n           <img src=\\\"../../app/resources/images/analytics.png\\\"/>\\r\\n        </td>\\r\\n        <td>\\r\\n           <button md-button [routerLink]=\\\"['analytics']\\\" routerLinkActive=\\\"active\\\">Analytics</button>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr *ngIf=\\\"authorizationService.isUserHasRole('UI_ACCESS_ACCOUNT_APPROVAL')\\\">\\r\\n\\t\\t    <td>\\r\\n           <img src=\\\"../../app/resources/images/approve2.png\\\"/>\\r\\n        </td>\\r\\n        <td>\\r\\n           <button md-button [routerLink]=\\\"['account_approval']\\\" routerLinkActive=\\\"active\\\">Account Approval</button>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr *ngIf=\\\"authorizationService.isUserHasRole('UI_USER_ROLES_ACCESS')\\\">\\r\\n\\t\\t<td>\\r\\n           <img src=\\\"../../app/resources/images/userrole.png\\\"/>\\r\\n        </td>\\r\\n        <td>\\r\\n           <button md-button [routerLink]=\\\"['user_roles']\\\" routerLinkActive=\\\"active\\\">User Roles</button>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr *ngIf=\\\"authorizationService.isUserHasRole('UI_USER_GROUPS_ACCESS')\\\">\\r\\n\\t\\t<td>\\r\\n           <img src=\\\"../../app/resources/images/usergroup.png\\\"/>\\r\\n        </td>\\r\\n        <td>\\r\\n           <button md-button [routerLink]=\\\"['user_groups']\\\" routerLinkActive=\\\"active\\\">User Groups</button>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr *ngIf=\\\"authorizationService.isUserHasRole('UI_USERS_ACCESS')\\\">\\r\\n\\t\\t<td>\\r\\n           <img src=\\\"../../app/resources/images/useraccount.png\\\"/>\\r\\n        </td>\\r\\n        <td>\\r\\n           <button md-button [routerLink]=\\\"['user_accounts']\\\" routerLinkActive=\\\"active\\\">User Accounts</button>\\r\\n        </td>\\r\\n      </tr>\\r\\n    </table>\\r\\n  </md-sidenav>\\r\\n\\r\\n  <md-toolbar color=\\\"primary\\\">\\r\\n    <button class=\\\"app-icon-button\\\" (click)=\\\"sidenav.toggle()\\\"  *ngIf=\\\"userLoggedIn\\\">\\r\\n      <i class=\\\"material-icons app-toolbar-menu\\\">menu</i>\\r\\n    </button> <img src=\\\"../../app/resources/images/white_logo.png\\\" style=\\\"height:40px;\\\">\\r\\n    <span class=\\\"app-toolbar-filler\\\"></span>\\r\\n\\r\\n\\r\\n<button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" id=\\\"tool-bt\\\" style=\\\"margin-right:20px;\\\" [routerLink]=\\\"['/appLogin']\\\" routerLinkActive=\\\"active\\\"\\r\\n      *ngIf=\\\"!userLoggedIn\\\">Sign In</button>\\r\\n <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" id=\\\"tool-bt\\\" [routerLink]=\\\"['/appRegister']\\\" routerLinkActive=\\\"active\\\"\\r\\n      *ngIf=\\\"!userLoggedIn\\\">Sign Up</button>\\r\\n\\r\\n<!--\\r\\n    <button md-button md-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/appLogin']\\\" routerLinkActive=\\\"active\\\"\\r\\n      *ngIf=\\\"!userLoggedIn\\\" style=\\\"padding-right:10px\\\">Login</button>\\r\\n\\t  <button md-button md-raised-button color=\\\"primary\\\"  [routerLink]=\\\"['/appRegister']\\\" routerLinkActive=\\\"active\\\"\\r\\n      *ngIf=\\\"!userLoggedIn\\\">Register</button>  \\r\\n\\r\\n      -->\\r\\n\\r\\n    <div *ngIf=\\\"userLoggedIn\\\" style=\\\"margin-right:30px;\\\">\\r\\n      <button md-button [md-menu-trigger-for]=\\\"menu\\\" md-raised-button color=\\\"primary\\\" *ngIf=\\\"userLoggedIn\\\">\\r\\n        <md-icon>person</md-icon>\\r\\n        {{user.loggedInUserName}}\\r\\n      </button>\\r\\n    </div>\\r\\n    <md-menu #menu=\\\"mdMenu\\\" >\\r\\n      <button md-menu-item>Preferences</button>\\r\\n      <button md-menu-item (click)=\\\"changePassword()\\\">Change password</button>\\r\\n      <button md-menu-item (click)=\\\"logout()\\\">Logout</button>\\r\\n    </md-menu>\\r\\n\\r\\n  </md-toolbar>\\r\\n\\r\\n  <div class=\\\"app-content\\\" [style.background-image]=\\\"backgroundImg\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n\\r\\n</md-sidenav-layout>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/home/home.component.html\n// module id = ../../../../../src/app/home/home.component.html\n// module chunks = 0","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { PageLink } from '../security/model/pagelink';\r\nimport { User } from '../security/model/user';\r\nimport { LoginService } from '../security/login/login.service';\r\nimport { GlobalService } from '../core/global.service';\r\nimport { AuthorizationService } from '../core/authorization.service';\r\nimport { MdMenuModule } from '@angular/material';\r\nimport {BrowserModule, DomSanitizer} from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'home-comp',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  private _pageLinks: PageLink[];\r\n  private _user: User;\r\n  backgroundImg:any;\r\n\r\n  constructor(private router: Router, private loginService: LoginService,\r\n    private globalService: GlobalService, private authorizationService: AuthorizationService,private sanitizer:DomSanitizer) {\r\n    this.backgroundImg = sanitizer.bypassSecurityTrustStyle('url(../../app/resources/images/background.jpg)');  \r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  get userLoggedIn(): boolean {\r\n    //console.log(\"checking user logged in\");\r\n    let userLoggedIn = false;\r\n    if(this.globalService.userLoggedIn)\r\n    {\r\n      //console.log(\"globalServic is enabled - \"+this.globalService.userLoggedIn);\r\n      userLoggedIn = this.globalService.userLoggedIn;\r\n      return userLoggedIn;\r\n\r\n    }\r\n    else if(sessionStorage.getItem('userLoggedIn'))\r\n    {\r\n        //console.log(\"************************* gobal service oops.. check sessionStorage : \"+sessionStorage.getItem('loggedInUser')+\" | \"+sessionStorage.getItem('userLoggedIn'));\r\n        this.globalService.userLoggedIn = true;\r\n        this.globalService.loggedInUser = JSON.parse(sessionStorage.getItem('loggedInUser'));    \r\n        return (sessionStorage.getItem('userLoggedIn')==='true');\r\n    }\r\n\r\n  }\r\n\r\n  logout() {\r\n    sessionStorage.clear();\r\n    localStorage.clear();\r\n    this.router.navigate(['']);\r\n    this.loginService.logout().subscribe(() => {\r\n      window.location.reload();\r\n    },\r\n      error => {\r\n      });\r\n  }\r\n\r\nchangePassword() {\r\n    this.router.navigate(['changePassword']);\r\n  }\r\n  \r\n/*analytics() {\r\n\tthis.router.navigate(['analytics']);\r\n}\t*/\r\n\r\n\r\n  get pageLinks(): PageLink[] {\r\n    /*this._pageLinks = [];\r\n    let pageLink   = new PageLink();\r\n    pageLink.label = \"CONTACTS\";\r\n    pageLink.url = \"contacts\";\r\n    this._pageLinks.push(pageLink);\r\n\r\n    pageLink   = new PageLink();\r\n    pageLink.label = \"GROUPS\";\r\n    pageLink.url = \"groups\";\r\n    this._pageLinks.push(pageLink);\r\n\r\n    pageLink   = new PageLink();\r\n    pageLink.label = \"SEND_EMAILS\";\r\n    pageLink.url = \"send_emails\";\r\n    this._pageLinks.push(pageLink); */\r\n    this._pageLinks = this.globalService.pageLinks;\r\n    //console.log(this._pageLinks);\r\n    return this._pageLinks;\r\n  }\r\n\r\n  get user(): User {\r\n    this._user = this.globalService.loggedInUser;\r\n    return this._user;\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/home/home.component.ts","export * from './app.component';\r\nexport * from './app.module';\r\n\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/index.ts","// Observable class extensions\r\nimport 'rxjs/add/observable/of';\r\nimport 'rxjs/add/observable/throw';\r\n\r\n// Observable operators\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/debounceTime';\r\nimport 'rxjs/add/operator/distinctUntilChanged';\r\nimport 'rxjs/add/operator/do';\r\nimport 'rxjs/add/operator/filter';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/switchMap';\r\n\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/rxjs-extensions.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"#mainContainer\\r\\n{\\r\\n    width:95%;\\r\\n}\\r\\n\\r\\n#pendingapprovaltable\\r\\n{\\r\\n    padding:10px;\\r\\n     width:95%;\\r\\n}\\r\\n\\r\\n#pendingapprovaltable table {\\r\\n    min-width: 92%;\\r\\n    box-shadow: -4px 10px 25px -6px rgba(0,0,0,0.75);\\r\\n}\\r\\n\\r\\n#pendingapprovaltable table thead tr {\\r\\n\\tbackground-color:#604688;\\r\\n\\tcolor:white;\\r\\n    text-align:center;\\r\\n}\\r\\n\\r\\ntable tr\\r\\n{\\r\\n    padding:7px;\\r\\n}\\r\\n\\r\\n#pendingapprovaltable table thead tr td {\\r\\n    border-right:1px solid #ffffff;\\r\\n    padding:10px;\\r\\n}\\r\\n\\r\\n#pendingapprovaltable table tr td {\\r\\n\\tpadding:3px;\\r\\n    text-align:center;\\r\\n    border-right:1px solid #BDBDBE;\\r\\n}\\r\\n\\r\\nbutton{\\r\\n    width:90%;\\r\\n    height:80%;\\r\\n    overflow:hidden;\\r\\n}\\r\\n\\r\\nmd-card {\\r\\n\\t\\t/*-webkit-box-shadow: -4px 10px 25px -6px rgba(0,0,0,0.75);\\r\\n-moz-box-shadow: -4px 10px 25px -6px rgba(0,0,0,0.75);\\r\\nbox-shadow: -4px 10px 25px -6px rgba(0,0,0,0.75);\\r\\nmargin-top:2vh;\\r\\nbackground:white;\\r\\nborder-radius: 12px 12px 12px 12px;\\r\\n-moz-border-radius: 12px 12px 12px 12px;\\r\\n-webkit-border-radius: 12px 12px 12px 12px;\\r\\nborder: 0px solid #000000;*/\\r\\nmin-height:25vh;\\r\\nwidth:105%;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/account-approval/accountapproval.component.css\n// module id = ../../../../../src/app/security/account-approval/accountapproval.component.css\n// module chunks = 0","module.exports = \"<p-growl [value]=\\\"msgs\\\"></p-growl>\\r\\n<form (ngSubmit)=\\\"onSubmit()\\\" autocomplete=\\\"off\\\" novalidate #approvalForm=\\\"ngForm\\\">  \\r\\n<div id=\\\"mainContainer\\\">\\r\\n    <md-card class=\\\"app-input-section\\\" style=\\\"width:94%;\\\">\\r\\n        <md-card-title>\\r\\n            <span><img src=\\\"../../app/resources/images/approval.png\\\" style=\\\"width:60px;height:60px;margin-right:15px;opacity:100;\\\"/></span><span>Account approval requests</span>\\r\\n        </md-card-title>\\r\\n        <md-card-content>\\r\\n             <p> Following account creation requests are waiting for your approval </p>\\r\\n\\r\\n        <div id=\\\"pendingapprovaltable\\\">\\r\\n            <table>\\r\\n                <thead>\\r\\n                    <tr>\\r\\n                        <td>Serial No</td>\\r\\n                        <td>user ID</td>\\r\\n                        <td>Name</td>\\r\\n                        <td>Email</td>\\r\\n\\t\\t\\t\\t\\t\\t<td>Company Name</td>\\r\\n                        <td>Requested On</td>\\r\\n                        <td>Address</td>\\r\\n                        <td>City</td>\\r\\n                        <td>State</td>\\r\\n                        <td>Country</td>\\r\\n                        <td>Zipcode</td>\\r\\n                        <td>Current Status</td>\\r\\n                        <td colspan=\\\"3\\\">Action</td>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngIf=\\\"noDataFound\\\">\\r\\n                        <td colspan=\\\"15\\\">No requests pending for your approval</td>            \\r\\n                    </tr>\\r\\n                        <tr *ngFor=\\\"let data of pendingApprovals\\\">\\r\\n                            <td>{{data.serialNo}}</td>\\r\\n                            <td>{{data.id}}</td>\\r\\n                            <td>{{data.name}}</td>\\r\\n                            <td>{{data.email}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t<td>{{data.companyName}}</td>\\r\\n                            <td>{{data.registrationRequestDate}}</td>\\r\\n                            <td>{{data.address}}</td>\\r\\n                            <td>{{data.city}}</td>\\r\\n                            <td>{{data.state}}</td>\\r\\n                            <td>{{data.country}}</td>\\r\\n                            <td>{{data.zipcode}}</td>\\r\\n                            <td>{{data.status}}</td>\\r\\n                            <td>\\r\\n                                <!--button md-button type=\\\"submit\\\" (click)=\\\"setOnHoldRequestData(data.id)\\\" [disabled]=\\\"disabled\\\" md-raised-button color=\\\"primary\\\" >Approve</button-->  \\r\\n                                 <button type=\\\"submit\\\" class=\\\"btn btn-success btn-s\\\" (click)=\\\"setApproveRequestData(data.id)\\\" [disabled]=\\\"disabled\\\">\\r\\n                                            <span class=\\\"glyphicon glyphicon-upload\\\"></span> Approve\\r\\n                                        </button>\\r\\n                            </td>\\r\\n                            <td>\\t\\r\\n                                <button type=\\\"submit\\\" class=\\\"btn btn-warning btn-s\\\" (click)=\\\"setOnHoldRequestData(data.id)\\\" [disabled]=\\\"data.onHold\\\">\\r\\n                                            <span class=\\\"glyphicon glyphicon-upload\\\"></span> On Hold\\r\\n                                        </button>\\r\\n                            </td>\\r\\n                            <td>\\r\\n                                <button type=\\\"submit\\\" class=\\\"btn btn-danger btn-s\\\"\\r\\n                                                (click)=\\\"setRejectRequestData(data.id)\\\" [disabled]=\\\"data.rejected\\\">\\r\\n                                            <span class=\\\"glyphicon glyphicon-ban-circle\\\"></span> Reject\\r\\n                                </button>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                </tbody>\\r\\n\\r\\n            </table>\\r\\n        </div>\\r\\n        </md-card-content>\\r\\n    </md-card>\\r\\n</div>\\r\\n  <div class=\\\"col-xs-1 col-sm-3 col-md-4 col-lg-4 col-xl-4\\\"></div>\\r\\n   <!--p-dialog header=\\\"Status...\\\" [(visible)]=\\\"approved\\\"  modal=\\\"modal\\\" (onAfterShow)=\\\"approve()\\\" minWidth=\\\"200px\\\">\\r\\n    </p-dialog-->\\r\\n</form>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/account-approval/accountapproval.component.html\n// module id = ../../../../../src/app/security/account-approval/accountapproval.component.html\n// module chunks = 0","import { Component, OnInit } from '@angular/core';\r\nimport { AccountApprovalService } from \"./accountapproval.service\";\r\nimport { Message } from \"../../message\";\r\nimport { User } from '../model/user';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { PendingAccountApprovals } from '../model/pendingaccountapprovals';\r\nimport { GlobalService } from '../../core/global.service';\r\n\r\n@Component({\r\n  selector: 'approval',\r\n  templateUrl: './accountapproval.component.html',\r\n  styleUrls: ['./accountapproval.component.css','../../email/contact/fileupload.component.css'],\r\n  providers: [AccountApprovalService]\r\n})\r\nexport class AccountApprovalComponent implements OnInit {\r\n\r\n    pendingApprovals:PendingAccountApprovals[];\r\n    userName:string;\r\n    approved:boolean;\r\n    msgs: Message[] = [];\r\n    idToApprove:number;\r\n    submitted:boolean;\r\n    disabled:boolean;\r\n    disabled_onhold:boolean;\r\n    disabled_reject:boolean;\r\n    noDataFound:boolean = false;\r\n    request_type:string;\r\n    //user:User;\r\n\r\n    constructor( private router: Router,private accountAppovalService: AccountApprovalService,private globalService: GlobalService) \r\n    {\r\n        if(sessionStorage.getItem(\"userLoggedIn\")!=='true')\r\n        {\r\n            console.log(\"user not logged in.. routing to login\");\r\n            this.router.navigate(['/appLogin']);\r\n        } \r\n        //console.log(\"activation approal component\");\r\n        this.userName = this.globalService.loggedInUser.loggedInUserName;\r\n        //this.userName = this.user.loggedInUserName;\r\n        //console.log(\"calling get pending approvals for \"+this.userName);\r\n        this.getPendingApprovals(this.userName);\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n       // console.log('checking loggedin in init');\r\n        if(sessionStorage.getItem(\"userLoggedIn\")!=='true')\r\n        {\r\n            //console.log(\"[Init] - user not logged in.. routing to login\");\r\n            this.router.navigate(['/appLogin']);\r\n        } \r\n    }\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n        this.disabled = true;\r\n        if(this.request_type === 'APPROVE')\r\n        {\r\n            this.approveRequest(this.idToApprove);\r\n        }\r\n        else if(this.request_type === 'HOLD')\r\n        {\r\n            this.holdRequest(this.idToApprove);\r\n        }\r\n        else if(this.request_type === 'REJECT')\r\n        {\r\n            this.rejectRequest(this.idToApprove);\r\n        }\r\n    }\r\n\r\n    approveRequest(idToApprove:number)\r\n    {\r\n        //console.log(\"calling approve service\");\r\n            this.accountAppovalService.approveRequest(idToApprove.toString())\r\n            .subscribe((data) => {\r\n                //console.log(\"Approval Response : \"+data);\r\n                this.msgs.push({ severity: \"info\", summary: \"Registration Approved\", detail: \"Approval Request processed successfully\" });\r\n                this.approved = false;\r\n                this.disabled=false;\r\n                this.getPendingApprovals(this.userName);\r\n\r\n            },\r\n            error => {\r\n                console.log(error);\r\n                this.msgs.push({ severity: \"error\", summary: \"Failed to process request\", detail: error });\r\n                this.approved = false;\r\n                this.disabled = false;\r\n            });\r\n    }\r\n\r\n    holdRequest(idToApprove:number)\r\n    {\r\n        console.log(\"calling hold service\");\r\n            this.accountAppovalService.holdRequest(idToApprove.toString())\r\n            .subscribe((data) => {\r\n                //console.log(\"Hold Response : \"+data);\r\n                this.msgs.push({ severity: \"info\", summary: \"Registration On Hold\", detail: \"Approval Request processed successfully\" });\r\n                this.approved = false;\r\n                this.disabled=false;\r\n                this.getPendingApprovals(this.userName);\r\n\r\n            },\r\n            error => {\r\n                console.log(error);\r\n                this.msgs.push({ severity: \"error\", summary: \"Failed to process request\", detail: error });\r\n                this.approved = false;\r\n                this.disabled = false;\r\n            });\r\n    }\r\n\r\n\r\n    rejectRequest(idToApprove:number)\r\n    {\r\n        //console.log(\"calling reject service\");\r\n            this.accountAppovalService.rejectRequest(idToApprove.toString())\r\n            .subscribe((data) => {\r\n                console.log(\"Reject Response : \"+data);\r\n                this.msgs.push({ severity: \"info\", summary: \"Registration Rejected\", detail: \"Approval Request processed successfully\" });\r\n                this.approved = false;\r\n                this.disabled=false;\r\n                this.getPendingApprovals(this.userName);\r\n\r\n            },\r\n            error => {\r\n                console.log(error);\r\n                this.msgs.push({ severity: \"error\", summary: \"Failed to process request\", detail: error });\r\n                this.approved = false;\r\n                this.disabled = false;\r\n            });\r\n    }\r\n\r\n    showDialog()\r\n    {\r\n        this.approved = true;\r\n    }\r\n\r\n    setApproveRequestData(idToApprove:number)\r\n    {\r\n        this.idToApprove=idToApprove;\r\n        //console.log(\"input params set : \"+this.idToApprove);\r\n        this.request_type = 'APPROVE';\r\n    }\r\n\r\n    setOnHoldRequestData(idToApprove:number)\r\n    {\r\n        this.idToApprove=idToApprove;\r\n        //console.log(\"input params set : \"+this.idToApprove);\r\n        this.request_type = 'HOLD';\r\n    }\r\n\r\n    setRejectRequestData(idToApprove:number)\r\n    {\r\n        this.idToApprove=idToApprove;\r\n        //console.log(\"input params set : \"+this.idToApprove);\r\n        this.request_type = 'REJECT';\r\n    }\r\n\r\n    getPendingApprovals(userName: string) {\r\n        //console.log(\"caling service for approval account\");\r\n        this.pendingApprovals = [];\r\n        this.accountAppovalService.getPendingApprovals(userName)\r\n            .subscribe((data) => {\r\n                if(data.length===0)\r\n                {\r\n                    this.noDataFound = true;\r\n                    //console.log(\"No requests pending for approval\");\r\n                }\r\n                else\r\n                {    \r\n                    this.pendingApprovals = data;\r\n                    //console.log(this.pendingApprovals);\r\n                }\r\n            },\r\n            error => {\r\n                console.log(error);\r\n                this.noDataFound = true;\r\n            });\r\n  };\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/account-approval/accountapproval.component.ts","import { Injectable }     from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions, RequestMethod, URLSearchParams } from '@angular/http';\r\nimport { Observable }     from 'rxjs/Observable';\r\nimport { PendingAccountApprovals } from '../model/pendingaccountapprovals';\r\nimport { AccountApproval } from '../model/AccountApproval';\r\n\r\n@Injectable()\r\nexport class AccountApprovalService{\r\n\r\n     constructor(private http: Http){}\r\n\r\n    getPendingApprovals (userName: string):  Observable<PendingAccountApprovals[]>  {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n        let options = new RequestOptions({ headers: headers });\r\n        let urlSearchParams = new URLSearchParams();\r\n        urlSearchParams.append('userName', userName);\r\n        let body = urlSearchParams.toString();\r\n        return this.http.post('accounts/getPendingApprovals', body, options )\r\n         .map(res => res.json())\r\n\t\t .catch(this.handleError);;  \r\n  }\r\n\r\n  approveRequest(idToApprove:string): Observable<AccountApproval>\r\n  {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n        let options = new RequestOptions({ headers: headers });\r\n        let urlSearchParams = new URLSearchParams();\r\n        urlSearchParams.append('id', idToApprove);\r\n         urlSearchParams.append('type','APPROVE');\r\n        let body = urlSearchParams.toString();\r\n        return this.http.post('accounts/approveRequest', body, options )\r\n         .map((res: Response)  => { return; })\r\n\t\t .catch(this.handleError);;  \r\n\r\n  }\r\n\r\n  holdRequest(idToApprove:string): Observable<AccountApproval>\r\n  {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n        let options = new RequestOptions({ headers: headers });\r\n        let urlSearchParams = new URLSearchParams();\r\n        urlSearchParams.append('id', idToApprove);\r\n        urlSearchParams.append('type','hold');\r\n        let body = urlSearchParams.toString();\r\n        return this.http.post('accounts/approveRequest', body, options )\r\n         .map((res: Response)  => { return; })\r\n\t\t .catch(this.handleError);;  \r\n\r\n  }\r\n\r\n  rejectRequest(idToApprove:string): Observable<AccountApproval>\r\n  {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n        let options = new RequestOptions({ headers: headers });\r\n        let urlSearchParams = new URLSearchParams();\r\n        urlSearchParams.append('id', idToApprove);\r\n        urlSearchParams.append('type','reject');\r\n        let body = urlSearchParams.toString();\r\n        return this.http.post('accounts/approveRequest', body, options )\r\n         .map((res: Response)  => { return; })\r\n\t\t .catch(this.handleError);;  \r\n\r\n  }\r\n\r\n  private handleError (error: Response | any) {\r\n    // In a real world app, we might use a remote logging infrastructure\r\n    //console.log(error);\r\n    let errMsg: string;\r\n    if (error instanceof Response) {\r\n      const body = error.json() || '';\r\n      const err = body.error || JSON.stringify(body);\r\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\r\n    } else {\r\n      errMsg = error.message ? error.message : error.toString();\r\n    }\r\n    //console.error(errMsg);\r\n    return Observable.throw(errMsg);\r\n  }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/account-approval/accountapproval.service.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/change-password/change-password.component.css\n// module id = ../../../../../src/app/security/change-password/change-password.component.css\n// module chunks = 0","module.exports = \" <p-growl [value]=\\\"msgs\\\"></p-growl>\\r\\n <div class=\\\"col-xs-1 col-sm-3 col-md-4 col-lg-4 col-xl-4\\\"></div>\\r\\n  <div  class=\\\"col-xs-8 col-sm-6 col-md-4 col-lg-4 col-xl-4\\\">\\r\\n    <md-card class=\\\"app-input-section\\\">\\r\\n      <md-card-title>Change password</md-card-title>\\r\\n      <md-card-content>\\r\\n        <table style=\\\"width: 100%\\\" cellspacing=\\\"0\\\">\\r\\n          <tr>\\r\\n            <td>\\r\\n              <md-input placeholder=\\\"Old Password\\\" type=\\\"password\\\" required [(ngModel)]=\\\"userAccountChangePasswordResource.oldPassword\\\" name=\\\"oldPassword\\\" style=\\\"width: 100%\\\">\\r\\n              </md-input>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <md-input placeholder=\\\"New Password\\\" required type=\\\"password\\\" [(ngModel)]=\\\"userAccountChangePasswordResource.newPassword\\\" name=\\\"newPassword\\\" style=\\\"width: 100%\\\">\\r\\n              </md-input>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <md-input placeholder=\\\"Confirm Password\\\" required type=\\\"password\\\" [(ngModel)]=\\\"userAccountChangePasswordResource.confirmPassword\\\" name=\\\"confirmPassword\\\" style=\\\"width: 100%\\\">\\r\\n              </md-input>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </table>\\r\\n      </md-card-content>\\r\\n      <md-card-actions>\\r\\n        <button md-button md-raised-button color=\\\"primary\\\" (click)=\\\"submitChangePassword()\\\">Submit</button>\\r\\n        <button md-button md-raised-button color=\\\"primary\\\" (click)=\\\"cancel()\\\">Cancel</button>\\r\\n      </md-card-actions>\\r\\n    </md-card>\\r\\n  </div>\\r\\n  <div class=\\\"col-xs-1 col-sm-3 col-md-4 col-lg-4 col-xl-4\\\"></div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/change-password/change-password.component.html\n// module id = ../../../../../src/app/security/change-password/change-password.component.html\n// module chunks = 0","import { Component, OnInit } from '@angular/core';\r\nimport { UserAccountChangePasswordResource } from '../model/user_account_change_password_resource';\r\nimport { UserAccountService } from '../user-account/user-account.service';\r\nimport { Message } from 'primeng/primeng';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  templateUrl: './change-password.component.html',\r\n  styleUrls: ['./change-password.component.css']\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n\r\n  userAccountChangePasswordResource: UserAccountChangePasswordResource;\r\n  msgs: Message[] = [];\r\n\r\n  constructor(private router: Router,private userAccountService: UserAccountService) {\r\n    this.userAccountChangePasswordResource = new UserAccountChangePasswordResource();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  cancel() {\r\n    this.router.navigate(['dashboard']);\r\n  }\r\n\r\n  submitChangePassword() {\r\n    this.msgs = [];\r\n    this.userAccountService.changeUserPassword(this.userAccountChangePasswordResource)\r\n      .subscribe(() => {\r\n        this.userAccountChangePasswordResource = new UserAccountChangePasswordResource();\r\n        this.msgs.push({ severity: \"info\", summary: \"Password changed successfully.\", detail: \"\" });\r\n      },\r\n      error => {\r\n        this.msgs.push({ severity: \"error\", summary: \"Password updation failed.\", detail: error });\r\n      });\r\n  };\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/change-password/change-password.component.ts","export * from './change-password.component';\r\n\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/change-password/index.ts","export * from './login.component';\r\n\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/login/index.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/css?family=Montserrat);\", \"\"]);\n\n// module\nexports.push([module.id, \".centered {\\r\\n  position: fixed;\\r\\n  top: 50%;\\r\\n  left: 50%;\\r\\n  -webkit-transform: translate(-50%, -50%);\\r\\n          transform: translate(-50%, -50%);\\r\\n}\\r\\n\\r\\nmd-card {\\r\\n\\t/*\\t-webkit-box-shadow: -4px 10px 25px -6px rgba(0,0,0,0.75);\\r\\n-moz-box-shadow: -4px 10px 25px -6px rgba(0,0,0,0.75);\\r\\nbox-shadow: -4px 10px 25px -6px rgba(0,0,0,0.75);*/\\r\\nmargin-top:2vh;\\r\\nbackground:white;\\r\\n/*border-radius: 12px 12px 12px 12px;\\r\\n-moz-border-radius: 12px 12px 12px 12px;\\r\\n-webkit-border-radius: 12px 12px 12px 12px;*/\\r\\nborder: 0px solid #000000;\\r\\nmin-height:25vh;\\r\\nwidth: 550px;\\r\\nleft: -35px;\\r\\n}\\r\\n\\r\\n.login{\\r\\n      padding-left: 20%;\\r\\n    padding-right: 20%;\\r\\n    margin-bottom: 30px;\\r\\n}\\r\\n\\r\\n.login-logo{\\r\\n  padding-right: 20%;\\r\\n  margin-bottom: 20px;\\r\\n  margin-top: 20px;\\r\\n}\\r\\n\\r\\n.login{\\r\\n  \\r\\n  height: 75px;\\r\\n}\\r\\n\\r\\n.button-class{\\r\\n  padding-left: 20%;\\r\\n  padding-right: 20%;\\r\\n  margin-top: 70px;\\r\\n  margin-bottom: 10px;\\r\\n\\r\\n}\\r\\n\\r\\n#submit{\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n#submit:hover{\\r\\n  background: rgb(200, 200, 200);\\r\\n  color: #000000;\\r\\n}\\r\\n\\r\\n#back-button{\\r\\n  padding-left: 20px;\\r\\n  color: #dedede;\\r\\n}\\r\\n\\r\\n#back-button:hover{\\r\\n  color: #00aeee;\\r\\n}\\r\\n\\r\\n.submit-bt{\\r\\n  letter-spacing: 1px;\\r\\n  font-weight: bolder;\\r\\n}\\r\\n\\r\\n#login-area{\\r\\n  background: #fff;\\r\\n  min-height: 620px;\\r\\n}\\r\\n\\r\\n\\r\\n#login-left{\\r\\n  padding-left: 0px !important;\\r\\n  padding-right: 0px !important;\\r\\n  height: 82vh;\\r\\n   background-image:url('/../../app/resources/images/content/cover.jpg');\\r\\n    background-repeat: no-repeat;\\r\\n    background-size: cover;\\r\\n}\\r\\n\\r\\n#login-page{\\r\\n   padding-left: 0px !important;\\r\\n  padding-right: 0px !important;\\r\\n  padding-bottom: 73px;\\r\\n}\\r\\n\\r\\n.login-content{\\r\\n  padding-top: 20px;\\r\\n}\\r\\n\\r\\n.login-content input{\\r\\n  height: 45px;\\r\\n  font-size: large;\\r\\n  font-family:'Montserrat', sans-serif;\\r\\n  width: 500px;\\r\\n}\\r\\n\\r\\n.head-label{\\r\\n  font-family:'Montserrat', sans-serif;\\r\\n  margin-bottom: 30px;\\r\\n    padding-left: 20px;\\r\\n}\\r\\n\\r\\n.login-form{\\r\\n  padding-left: 20px;\\r\\n}\\r\\n\\r\\n#sub-button{\\r\\n      width: 500px;\\r\\n    height: 40px;\\r\\n    font-size: large;\\r\\n    font-family: 'Montserrat', sans-serif;\\r\\n    background-color: #00aeee;\\r\\n}\\r\\n\\r\\n.form-hr{\\r\\n      margin-top: 30px;\\r\\n    margin-bottom: 30px;\\r\\n    border: 0;\\r\\n    border-top: 2px solid #eee;\\r\\n}\\r\\n\\r\\n.footer{\\r\\n  display: table;\\r\\n    background-color: #1b3049;\\r\\n    height: 75px;\\r\\n    position: fixed;\\r\\n    bottom: 0;\\r\\n    left: 0;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.footer p{\\r\\n      color: #fff;\\r\\n    padding-top: 25px;\\r\\n    float: right;\\r\\n    padding-right: 60px;\\r\\n}\\r\\n\\r\\na:hover{\\r\\n  cursor: pointer;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/login/login.component.css\n// module id = ../../../../../src/app/security/login/login.component.css\n// module chunks = 0","module.exports = \"<p-growl [value]=\\\"msgs\\\"></p-growl>\\r\\n<div class=\\\"col-md-12\\\" id=\\\"login-page\\\">\\r\\n<div class=\\\"col-md-7\\\" id=\\\"login-left\\\">\\r\\n\\r\\n</div>\\r\\n\\r\\n<div class=\\\"col-md-5\\\" id=\\\"login-area\\\">\\r\\n  \\r\\n<div class=\\\"login-content\\\">\\r\\n  <a class=\\\"btn-floating btn-large waves-effect waves-light red\\\" id=\\\"back-button\\\" (click)=home()><i class=\\\"material-icons\\\"><i class=\\\"fa fa-arrow-left\\\" aria-hidden=\\\"true\\\"></i></i></a>\\r\\n<form (ngSubmit)=\\\"onSubmit()\\\" autocomplete=\\\"off\\\" novalidate #loginForm=\\\"ngForm\\\">\\r\\n  \\r\\n  <img class=\\\"login\\\" src=\\\"../../app/resources/images/logo.png\\\">\\r\\n  <h2 class=\\\"head-label\\\">Log in</h2>\\r\\n  <div class=\\\"login-form\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"username\\\" aria-describedby=\\\"username\\\" name=\\\"username\\\" placeholder=\\\"Username\\\" required [(ngModel)]=\\\"username\\\">\\r\\n  </div>\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" placeholder=\\\"Password\\\" name=\\\"password\\\" required [(ngModel)]=\\\"password\\\">\\r\\n  </div>\\r\\n  \\r\\n  <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" id=\\\"sub-button\\\" (click)=\\\"showDialog()\\\" [disabled]=\\\"!loginForm.form.valid\\\">Sign In</button>\\r\\n  </div>\\r\\n</form>\\r\\n<hr class=\\\"form-hr\\\">\\r\\n<p style=\\\"font-size:17px; padding-bottom:10px;\\\">Forgot your<a> username</a> or <a>password?</a></p>\\r\\n<p>Don't have an account?<a (click)=appregister() > Sign up free.</a></p>\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n    \\r\\n    <!--\\r\\n<form (ngSubmit)=\\\"onSubmit()\\\" autocomplete=\\\"off\\\" novalidate #loginForm=\\\"ngForm\\\">\\r\\n  <div class=\\\"col-xs-1 col-sm-3 col-md-4 col-lg-4 col-xl-4\\\"></div>\\r\\n  <div class=\\\"col-xs-8 col-sm-6 col-md-4 col-lg-4 col-xl-4\\\">\\r\\n    <md-card class=\\\"app-input-section\\\">\\r\\n      <a class=\\\"btn-floating btn-large waves-effect waves-light red\\\" id=\\\"back-button\\\" (click)=home()><i class=\\\"material-icons\\\"><i class=\\\"fa fa-arrow-left\\\" aria-hidden=\\\"true\\\"></i></i></a>\\r\\n     <!-- <button md-button md-raised-button color=\\\"primary\\\" (click)=home()><i class=\\\"fa fa-arrow-left\\\" aria-hidden=\\\"true\\\"></i></button> -->\\r\\n    <!-- <md-card-title class=\\\"login-logo\\\"><img class=\\\"login\\\" src=\\\"../../app/resources/images/logo.png\\\"></md-card-title>\\r\\n      <md-card-content class=\\\"login\\\">\\r\\n        <table style=\\\"width: 100%\\\" cellspacing=\\\"0\\\">\\r\\n          <tr>\\r\\n            <td>\\r\\n              <md-input placeholder=\\\"User name\\\" required [(ngModel)]=\\\"username\\\" name=\\\"username\\\" style=\\\"width: 100%\\\">\\r\\n                <span md-prefix>\\r\\n                <i class=\\\"material-icons app-input-icon\\\">person</i>\\r\\n              </span>\\r\\n              </md-input>\\r\\n            </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <md-input placeholder=\\\"Password\\\" required type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" style=\\\"width: 100%\\\">\\r\\n                <span md-prefix>\\r\\n                <i class=\\\"material-icons app-input-icon\\\">vpn_key</i>\\r\\n              </span>\\r\\n              </md-input>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </table>\\r\\n      </md-card-content>\\r\\n      <md-card-actions class=\\\"button-class\\\">\\r\\n        <button md-button type=\\\"submit\\\" (click)=\\\"showDialog()\\\" md-raised-button color=\\\"primary\\\" id=\\\"submit\\\" [disabled]=\\\"!loginForm.form.valid\\\"><span class=\\\"submit-bt\\\">SUBMIT</span></button>\\r\\n             \\r\\n      </md-card-actions>\\r\\n    </md-card>\\r\\n  </div>\\r\\n  <div class=\\\"col-xs-1 col-sm-3 col-md-4 col-lg-4 col-xl-4\\\"></div>\\r\\n   <!--p-dialog header=\\\"Status...\\\" [(visible)]=\\\"loggedin\\\"  modal=\\\"modal\\\" (onAfterShow)=\\\"login()\\\" minWidth=\\\"200px\\\">\\r\\n    </p-dialog-->\\r\\n <!--</form> -->\\r\\n\\r\\n\\r\\n \\r\\n</div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"col-md-12\\\">\\r\\n  <div class=\\\"footer\\\">\\r\\n    <p>&copy; 2017 Contact Swing</p>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/login/login.component.html\n// module id = ../../../../../src/app/security/login/login.component.html\n// module chunks = 0","import { Component, OnInit } from '@angular/core';\r\nimport { LoginService } from \"./login.service\";\r\nimport { User } from '../model/user';\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { GlobalService } from '../../core/global.service';\r\nimport { Message } from \"../../message\";\r\n\r\n@Component({\r\n  selector: 'login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls:['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  username : string;\r\n  password : string;\r\n  msgs: Message[] = [];\r\n  loggedin: boolean = false;\r\n  user:User;\r\n  \r\n  constructor(private loginService: LoginService, private router: Router,private globalService: GlobalService) {     \r\n }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    this.login(this.username,this.password);\r\n  }\r\n\r\n  getUserName(){\r\n    \r\n  }\r\n\r\n  login(username: string ,password: string) {\r\n    this.loginService.login(this.username,this.password)\r\n            .subscribe((data) => {\r\n              //console.log(\"Raw res : \"+data.loggedInUserName+data.uiRoles+data.userType);\r\n              this.user = data;\r\n              //console.log(\"User Data : \"+this.user.uiRoles+ \" | \"+this.user.userType+' | '+this.user);\r\n                 this.loggedInUser();\r\n            },\r\n            error => {\r\n                //alert(\"Login failed: \"+error);\r\n\t\t\t\tthis.msgs.push({ severity: \"error\", summary: \"Login failed\", detail: error });\r\n                this.loggedin = false;\r\n            });\r\n  };\r\n  \r\n  home() {\r\n\t  this.router.navigate(['/']);\r\n  }\r\n  \r\n  showDialog() {\r\n        this.loggedin = true;\r\n    }\r\n\r\n  loggedInUser() {\r\n\r\n    this.loginService.loggedInUser()\r\n            .subscribe((user) => {\r\n                 //console.log('user from server ',user);\r\n                 //console.log('Stringified user',JSON.stringify(user));\r\n                 this.globalService.loggedInUser = user;\r\n                 sessionStorage.setItem('loggedInUser',JSON.stringify(user));\r\n                 this.globalService.userLoggedIn = true;\r\n                 sessionStorage.setItem('userLoggedIn','true'); \r\n                 //console.log(\"User Authenticated.. Setting session storage and Calling pagelinks\");\r\n                 this.pageLinksAllowedForUser();     \r\n            },\r\n            error => {\r\n                \r\n            });\r\n  };\r\n\r\n  pageLinksAllowedForUser() {\r\n\r\n    this.loginService.pageLinksAllowedForUser()\r\n            .subscribe((pageLinks) => {\r\n                 console.log('pageLinks from user ',pageLinks);\r\n                 this.globalService.pageLinks = pageLinks;\r\n                 sessionStorage.setItem('pageLinks',JSON.stringify(pageLinks)); \r\n                 this.router.navigate(['/']);                 \r\n                 this.router.navigate(['dashboard']);         \r\n            },\r\n            error => {\r\n                console.log(\"Error page links : \"+error);\r\n            });\r\n  };\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/login/login.component.ts","import { Injectable }     from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions, URLSearchParams } from '@angular/http';\r\nimport { Observable }     from 'rxjs/Observable';\r\nimport { User } from '../model/user';\r\nimport { PageLink } from '../model/pagelink';\r\n\r\n@Injectable()\r\nexport class LoginService {\r\n    \r\n  constructor (private http: Http) {    \r\n  }\r\n\r\n  login (userName: string, password: string):  Observable<User>  {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/x-www-form-urlencoded');\r\n        let options = new RequestOptions({ headers: headers });\r\n        let urlSearchParams = new URLSearchParams();\r\n        urlSearchParams.append('username', userName);\r\n        urlSearchParams.append('password', password);\r\n        let body = urlSearchParams.toString(); \r\n        return this.http.post('login', body, options ).catch(this.handleError);     \r\n  }\r\n\r\n loggedInUser ():  Observable<User>  {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        let options = new RequestOptions({ headers: headers });\r\n          return this.http.get('user')\r\n         .map(res => res.json()).catch(this.handleError);;     \r\n  }\r\n\r\nlogout ():  Observable<User>  {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        let options = new RequestOptions({ headers: headers });\r\n        return this.http.get('user/logout').catch(this.handleError);  \r\n  }\r\n\r\n pageLinksAllowedForUser ():  Observable<PageLink[]>  {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        let options = new RequestOptions({ headers: headers });\r\n          return this.http.get('pageLinks')\r\n         .map(res => res.json()).catch(this.handleError);;     \r\n  }\r\n\r\n  private extractData(res: Response) {     \r\n    let body = res.json();\r\n    return body.data || { };\r\n  }\r\n\r\n  private handleError (error: Response | any) {\r\n    // In a real world app, we might use a remote logging infrastructure\r\n    //console.log(error);\r\n    let errMsg: string;\r\n    if (error instanceof Response) {\r\n      const body = error.json() || '';\r\n      const err = body.error || JSON.stringify(body);\r\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\r\n    } else {\r\n      errMsg = error.message ? error.message : error.toString();\r\n    }\r\n    //console.error(errMsg);\r\n    return Observable.throw(errMsg);\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/login/login.service.ts","import {UserAccountTypeConstant} from './UserAccountTypeConstant';\r\n\r\nexport class UserAccountSearchCriteria{\r\n    username: string;\r\n    email: string;\r\n    active : boolean;\r\n    accountExpired: boolean;\r\n    credentialsExpired:boolean;\r\n    accountLocked:boolean;\r\n    userAccountType:UserAccountTypeConstant;\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/model/UserAccountSearchCriteria.ts","export class Item {\r\n    public id:number;\r\n    public text:string;\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/model/item.ts","export class UserRoleSearchCriteria{\r\n    name: string;\r\n    description: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/model/user.role.search.criteria.ts","import {BaseEntity} from '../../core/model/base.entity';\r\n \r\nexport class UserRole extends BaseEntity{\r\n    public roleName: string;\r\n    public description: string;\r\n    public userRoleAuthorities: string[];\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/model/user.role.ts","import {BaseEntity} from '../../core/model/base.entity';\r\nimport {UserAccountUserGroup} from './user_account_user_group';\r\nimport {UserAccountTypeConstant} from './UserAccountTypeConstant';\r\n\r\nexport class UserAccount extends BaseEntity{\r\n    username: string;\r\n    userAccountUserGroups: UserAccountUserGroup[];\r\n    active : boolean;\r\n    accountExpired: boolean;\r\n    credentialsExpired:boolean;\r\n    accountLocked:boolean;\r\n    userAccountType:UserAccountTypeConstant;\r\n    employeeNumber:string;\r\n\tcompanyName:string;\r\n    email: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/model/user_account.ts","export class UserAccountChangePasswordResource{\r\n    oldPassword: string;\r\n    newPassword: string; \r\n    confirmPassword: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/model/user_account_change_password_resource.ts","import {BaseEntity} from '../../core/model/base.entity';\r\nimport {UserGroup} from './user_group';\r\n \r\nexport class UserAccountUserGroup extends BaseEntity{\r\n    public  userGroup: UserGroup;\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/model/user_account_user_group.ts","import {BaseEntity} from '../../core/model/base.entity';\r\n import {UserGroupUserRole} from './user_group_user_role';\r\n\r\nexport class UserGroup extends BaseEntity{\r\n    public groupName: string;\r\n    public description: string;\r\n    public userGroupUserRoles: UserGroupUserRole[];\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/model/user_group.ts","export class UserGroupSearchCriteria{\r\n    groupName: string;\r\n    description: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/model/user_group_searchcriteria.ts","import {BaseEntity} from '../../core/model/base.entity';\r\nimport {UserRole} from './user.role';\r\n \r\nexport class UserGroupUserRole extends BaseEntity{\r\n    public  userRole: UserRole;\r\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/model/user_group_user_role.ts","export * from './registration.component'\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/registration/index.ts","exports = module.exports = require(\"../../../../node_modules/@angular/cli/node_modules/css-loader/lib/css-base.js\")(false);\n// imports\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/css?family=Montserrat);\", \"\"]);\n\n// module\nexports.push([module.id, \".centered {\\r\\n  position: fixed;\\r\\n  top: 50%;\\r\\n  left: 50%;\\r\\n  -webkit-transform: translate(-50%, -50%);\\r\\n          transform: translate(-50%, -50%);\\r\\n}\\r\\n\\r\\n#registration-area{\\r\\n  padding-top: 50px;\\r\\n  font-family: 'Montserrat', sans-serif;\\r\\n}\\r\\n\\r\\n#small{\\r\\n  font-size: 14px;\\r\\n  color: #337ab7;\\r\\n    letter-spacing: 0.4px;\\r\\n}\\r\\n\\r\\n#registration-area input[type = text], input[type = password]{\\r\\n  height: 40px;\\r\\n  font-size: 15px;\\r\\n}\\r\\n\\r\\na:hover{\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.signUp-bt{\\r\\n  padding-top: 30px;\\r\\n  padding-bottom: 30px;\\r\\n}\\r\\n\\r\\n#sign-up{\\r\\n   width: 500px;\\r\\n    height: 40px;\\r\\n    font-size: large;\\r\\n    font-family: 'Montserrat', sans-serif;\\r\\n    background-color: #00aeee;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/registration/registration.component.css\n// module id = ../../../../../src/app/security/registration/registration.component.css\n// module chunks = 0","module.exports = \"<!--<small appCompare>hi</small>-->\\r\\n<!--<script>\\r\\n  $('.js-show-password-button').on('click', function () {\\r\\n    var $this = $(this);\\r\\n    var $input = $($this.data('target'));\\r\\n\\r\\n    var newType = $input.attr('type') === 'password' ? 'text' : 'password';\\r\\n\\r\\n    $input.attr('type', newType);\\r\\n    $this.text(newType === 'password' ? 'show' : 'hide');\\r\\n  });\\r\\n\\r\\n</script> -->\\r\\n\\r\\n<p-growl [value]=\\\"msgs\\\"></p-growl>\\r\\n<div class=\\\"col-md-12\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-8 col-md-offset-1\\\" id=\\\"registration-area\\\">\\r\\n      <form class=\\\"form-horizontal\\\" role=\\\"form\\\" (ngSubmit)=\\\"onSubmit()\\\" autocomplete=\\\"off\\\" novalidate #registerForm=\\\"ngForm\\\">\\r\\n        <fieldset>\\r\\n          <legend>\\r\\n            <h2>Sign Up Today for FREE</h2>\\r\\n            <p style=\\\"font-size:14px\\\">Create an account for free and start campaigning to your customers, for a better business. <br/> Already have\\r\\n              an account? <a (click)=applogin() class=\\\"link\\\">Log in here</a></p>\\r\\n            <small id=\\\"small\\\">Please register using valid details to use Contact Swing</small>\\r\\n          </legend>\\r\\n\\r\\n          <!-- Name Group-->\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n              <input type=\\\"text\\\" name=\\\"firstName\\\" placeholder=\\\"First Name\\\" class=\\\"form-control\\\" minlength=\\\"5\\\" maxlength=\\\"50\\\" required [(ngModel)]=\\\"user.firstName\\\" #firstName=\\\"ngModel\\\">\\r\\n              <div *ngIf=\\\"firstName.errors && (firstName.dirty || firstName.touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n                <div [hidden]=\\\"!firstName.errors.required\\\">\\r\\n                  First name is required\\r\\n                </div>\\r\\n                <div [hidden]=\\\"!firstName.errors.maxlength\\\">\\r\\n                  Max Character Lenght is 50\\r\\n                </div>\\r\\n                <div [hidden]=\\\"!firstName.dirty || firstName.errors.required\\\">\\r\\n                  Invalid first name\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-2\\\">\\r\\n              <input type=\\\"text\\\" name=\\\"middleName\\\" placeholder=\\\"Middle Name\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.middleName\\\">\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n              <input type=\\\"text\\\" name=\\\"lastName\\\" placeholder=\\\"Last Name\\\" class=\\\"form-control\\\" minlength=\\\"5\\\" required [(ngModel)]=\\\"user.lastName\\\" #lastName=\\\"ngModel\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <!-- Email ID-->\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"col-sm-10\\\">\\r\\n              <input type=\\\"email\\\" placeholder=\\\"Email Address\\\" class=\\\"form-control\\\" emailPattern required [(ngModel)]=\\\"user.email\\\" name=\\\"email\\\"\\r\\n                #email=\\\"ngModel\\\" required pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <!-- Username-->\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"col-sm-10\\\">\\r\\n              <input type=\\\"text\\\" placeholder=\\\"Username\\\" class=\\\"form-control\\\" name=\\\"username\\\" minlength=\\\"5\\\" required [(ngModel)]=\\\"user.username\\\"\\r\\n                #username=\\\"ngModel\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <!-- Password -->\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"col-sm-10\\\">\\r\\n              <input type=\\\"password\\\" placeholder=\\\"Password\\\" class=\\\"form-control\\\" compareControl=\\\"confirmPassword\\\" sourceCompare=\\\"true\\\"\\r\\n                required [(ngModel)]=\\\"user.password\\\" #password=\\\"ngModel\\\" name=\\\"password\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"col-sm-10\\\">\\r\\n              <input type=\\\"password\\\" placeholder=\\\"Retype-Password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.confirmPassword\\\" #confirmPassword=\\\"ngModel\\\"\\r\\n                compareControl=\\\"password\\\" name=\\\"confirmPassword\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <!-- Address Section -->\\r\\n          <!-- Form Name -->\\r\\n          <legend style=\\\"padding-top:30px;\\\">Organization Details</legend>\\r\\n          <!-- Text input-->\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"col-sm-10\\\">\\r\\n              <input type=\\\"text\\\" name=\\\"companyName\\\" placeholder=\\\"Organization Name\\\" class=\\\"form-control\\\" required [(ngModel)]=\\\"user.companyName\\\"\\r\\n                name=\\\"companyname\\\" #companyname=\\\"ngModel\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"col-sm-10\\\">\\r\\n              <input type=\\\"text\\\" name=\\\"phonenumber\\\" placeholder=\\\"Phone Number \\\" class=\\\"form-control\\\" maxlength=\\\"10\\\" required [(ngModel)]=\\\"user.phone\\\"\\r\\n                name=\\\"phone\\\" #phone=\\\"ngModel\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <!-- Text input-->\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"col-sm-10\\\">\\r\\n              <input type=\\\"text\\\" name=\\\"addressLine1\\\" placeholder=\\\"Address Line \\\" class=\\\"form-control\\\" maxlength=\\\"200\\\" required [(ngModel)]=\\\"user.addressLine1\\\"\\r\\n                name=\\\"address\\\" #adddress=\\\"ngModel\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <!-- Text input-->\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"col-sm-10\\\">\\r\\n              <input type=\\\"text\\\" name=\\\"addressLine2\\\" placeholder=\\\"Suite/ Apt \\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.addressLine2\\\" maxlength=\\\"30\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <!-- Text input-->\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n              <select class=\\\"form-control\\\" required style=\\\"height:40px;color: #8f8f8f;\\\" [(ngModel)]=\\\"user.country\\\" name=\\\"country\\\" (ngModelChange)=\\\"getStates($event)\\\">\\r\\n                  <option value=\\\"\\\" disabled selected>Select Country</option>\\r\\n                  <option *ngFor=\\\"let country of countries\\\"  value=\\\"{{country.fullName}}\\\">\\r\\n                    {{country.fullName}}\\r\\n                  </option>\\r\\n                </select>\\r\\n\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-2\\\">\\r\\n              <select class=\\\"form-control\\\" required style=\\\"height:40px; color:#8f8f8f;\\\" [(ngModel)]=\\\"user.state\\\" name=\\\"state\\\" (ngModelChange)=\\\"getCities($event)\\\">\\r\\n                    <option value=\\\"\\\" disabled selected>Select State</option>\\r\\n                    <option *ngFor=\\\"let state of states\\\"  value=\\\"{{state.name}}\\\">\\r\\n                      {{state.name}}\\r\\n                    </option>\\r\\n                  </select>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n              <select class=\\\"form-control\\\" required style=\\\"height:40px; color:#8f8f8f\\\" [(ngModel)]=\\\"user.city\\\" name=\\\"city\\\">\\r\\n                   <option value=\\\"\\\" disabled selected>Select City</option>\\r\\n                  <option *ngFor=\\\"let city of cities\\\"  value=\\\"{{city.name}}\\\">\\r\\n                    {{city.name}}\\r\\n                  </option>\\r\\n                </select>\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n              <input type=\\\"text\\\" name=\\\"postalCode\\\" placeholder=\\\"Post Code\\\" class=\\\"form-control\\\" maxlength=\\\"10\\\" required [(ngModel)]=\\\"user.zipcode\\\"\\r\\n                name=\\\"zipcode\\\" #zipcode=\\\"ngModel\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-check\\\" style=\\\"padding-top:20px;\\\">\\r\\n            <p>By clicking Sign Up button, you agree to Contact Swing's <a>Anti-spam Policy & Terms of Use.</a></p>\\r\\n\\r\\n          </div>\\r\\n          <div class=\\\"signUp-bt\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <div class=\\\"col-sm-10\\\">\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" id=\\\"sign-up\\\" [disabled]=\\\"!registerForm.form.valid || disabled\\\">Sign Up</button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-check\\\" style=\\\"padding-bottom:30px; color:#8f8f8f\\\">\\r\\n            <p>&copy;2017 All Rights Reserved. Contact Swing is a registered trademark of <br/><a (click)=\\\"bluespace()\\\">Blue Space Technologies, INC.</a>              -- <a>Privacy</a> and <a>Terms</a></p>\\r\\n          </div>\\r\\n        </fieldset>\\r\\n      </form>\\r\\n    </div>\\r\\n    <!-- /.col-lg-12 -->\\r\\n  </div>\\r\\n  <!-- /.row -->\\r\\n\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/registration/registration.component.html\n// module id = ../../../../../src/app/security/registration/registration.component.html\n// module chunks = 0","import { Component, OnInit } from '@angular/core';\r\nimport { RegistrationService } from \"./registration.service\";\r\nimport { UserRegistration } from '../model/user_registration';\r\nimport { Message } from \"../../message\";\r\nimport { Router, ActivatedRoute, Params } from '@angular/router';\r\nimport { Country } from '../model/Country';\r\nimport { State } from '../model/State';\r\nimport { City } from '../model/City';\r\nimport { Item } from '../model/item';\r\nimport {SelectModule} from 'ng2-select';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.css'],\r\n  providers: [RegistrationService]\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n\r\n  submitted = false;\r\n  user: UserRegistration;\r\n  msgs: Message[] = [];\r\n  registered: boolean = false;\r\n  disabled:boolean = false;\r\n  countries:Country[]=[];\r\n  countryItems:Item[]=[];\r\n  item:Item;\r\n  states:State[]=[];\r\n  cities:City[]=[];\r\n  value:any = {};\r\n  _disabledV:string = '0';\r\n  country_dropdown_disabled:boolean = false;\r\n\r\n\r\n  \r\n\r\n\r\n  constructor( private router: Router,private registerService: RegistrationService) {\r\n\r\n    console.log(\"in construct..\");\r\n    this.getCountries();\r\n   }\r\n\r\n  ngOnInit() {\r\n    console.log(\"in init\");\r\n    this.user = {\r\n      firstName: '',\r\n      middleName: '',\r\n      lastName: '',\r\n            username: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n\t\t\temail: '',\r\n      companyName: '',\r\n      phone: '',\r\n      addressLine1:'',\r\n      addressLine2: '',\r\n      country:'',\r\n      state:'',\r\n      city:'',\r\n      zipcode:'',\r\n      federalId:''\r\n        }\r\n  }\r\n\r\n \r\n\r\n  clearForm()\r\n  {\r\n    //console.log(\"in clear form\");\r\n    this.user = {\r\n      firstName: '',\r\n      middleName: '',\r\n      lastName: '',\r\n            username: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n\t\t\temail: '',\r\n      companyName: '',\r\n      phone: '',\r\n      addressLine1:'',\r\n      addressLine2: '',\r\n      country:'',\r\n      state:'',\r\n      city:'',\r\n      zipcode:'',\r\n      federalId:''\r\n        }\r\n  }\r\n\r\n  getCountries()\r\n  {\r\n    this.registerService.getCountries()\r\n                .subscribe((data) => {\r\n                 this.countries = data;\r\n                 console.log(\"Countries loaded with \"+this.countries.length+\" size\");\r\n                 for(let cnt of this.countries)\r\n                 {\r\n                    let item = new Item();\r\n                    item.id = cnt.id;\r\n                    item.text = cnt.fullName;\r\n                    this.countryItems.push(item);\r\n                 }\r\n\r\n    console.log(\"countries populated with size : \"+this.countryItems.length);\r\n            },\r\n            error => {\r\n              console.error(\"Failed to get country list\");\r\n            });\r\n  }\r\n\r\n  getStates(fullName:string)\r\n  {\r\n    console.log(fullName+\" passed as argument to get states \");\r\n    this.registerService.getStates(fullName)\r\n                .subscribe((data) => {\r\n                  this.states = data;\r\n            },\r\n            error => {\r\n              console.error(\"Failed to get state list\");\r\n            });\r\n  }\r\n\r\n   getCities(name:string)\r\n  {\r\n    console.log(name+\" passed as argument to get states\");\r\n    this.registerService.getCities(name)\r\n                .subscribe((data) => {\r\n                 this.cities = data;\r\n            },\r\n            error => {\r\n              console.error(\"Failed to get city list\");\r\n            });\r\n  }\r\n\r\n  onSubmit() {\r\n    this.submitted = true;\r\n\t  this.disabled = true;\r\n    this.register(this.user);\r\n  }\r\n\r\n  register(model: UserRegistration) {\r\n    this.registerService.register(model)\r\n            .subscribe((data) => {\r\n                 console.log(data);\r\n\t\t\t\t this.disabled = false;\r\n\t\t\t\t this.msgs.push({ severity: \"info\", summary: \"Registration Successful\", detail: \"Registration request has been sent to the administrator and awaiting approval. Please check your email for details on account activation.\" });\r\n\t\t\t\t this.registered = false;\r\n         this.clearForm();\r\n         this.router.navigate(['/appRegister']);\r\n\t\t\t\t //this.router.navigate(['/appLogin']);\r\n            },\r\n            error => {\r\n                this.msgs.push({ severity: \"error\", summary: \"Registration Failed\", detail: error });\r\n\t\t\t\t        this.registered = false;\r\n\t\t\t\t        this.disabled = false;\r\n            });\r\n  };\r\n  \r\n  home()\r\n  {\r\n\t  this.router.navigate(['/']);\r\n  }\r\n\r\n  applogin(){\r\n    this.router.navigate(['/appLogin']);\r\n  }\r\n  bluespace(){\r\n    window.location.href='http://www.bluespacetech.com' ;\r\n  }\r\n  \r\n  showDialog() \r\n  {\r\n      this.registered = true;\r\n  }\r\n \r\n  private get disabledV():string {\r\n    return this._disabledV;\r\n  }\r\n \r\n  private set disabledV(value:string) {\r\n    this._disabledV = value;\r\n    this.disabled = this._disabledV === '1';\r\n  }\r\n \r\n  public selected(value:any):void {\r\n    console.log('Selected value is: ', value);\r\n  }\r\n \r\n  public removed(value:any):void {\r\n    console.log('Removed value is: ', value);\r\n  }\r\n \r\n  public typed(value:any):void {\r\n    console.log('New search input: ', value);\r\n  }\r\n \r\n  public refreshValue(value:any):void {\r\n    this.value = value;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/registration/registration.component.ts","import { Injectable }     from '@angular/core';\nimport { Http, Response, Headers, RequestOptions, RequestMethod, URLSearchParams } from '@angular/http';\nimport { Observable }     from 'rxjs/Observable';\nimport { UserRegistration } from '../model/user_registration';\nimport { Country } from '../model/Country';\nimport { State } from '../model/State';\nimport { City } from '../model/City';\n\n@Injectable()\nexport class RegistrationService{\n\n    constructor(private http: Http){}\n\n    register (model: UserRegistration):  Observable<UserRegistration>  {\n        let headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        let requestOptions = new RequestOptions({\n          method: RequestMethod.Post,\n          headers: headers,\n          body: JSON.stringify(model)\n        })\n        let body= JSON.stringify(model);\n        console.log(body);\n        return this.http.post('new/register', body, requestOptions ).catch(this.handleError);     \n  }\n\n  getCountries():Observable<Country[]> {\n        let headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        return this.http.get('new/getCountries')\n        .map((res: Response) => res.json())\n        .catch(this.handleError);     \n\n  }\n\n  getStates(fullName:string):Observable<State[]> {\n        let headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        return this.http.post('new/getStatesFromCountry/'+fullName, { headers: headers })\n            .map(res => res.json())\n            .catch(this.handleError);    \n\n  }\n\n  getCities(name:string):Observable<City[]> {\n        let headers = new Headers();\n        headers.append('Content-Type', 'application/json');\n        return this.http.post('new/getCitiesFromState/'+name, { headers: headers })\n            .map(res => res.json())\n            .catch(this.handleError);      \n\n  }\n\n  private handleError (error: Response | any) {\n    // In a real world app, we might use a remote logging infrastructure\n    //console.log(error);\n    let errMsg: string;\n    if (error instanceof Response) {\n      const body = error.json() || '';\n      const err = body.error || JSON.stringify(body);\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n    } else {\n      errMsg = error.message ? error.message : error.toString();\n    }\n    //console.error(errMsg);\n    return Observable.throw(errMsg);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/registration/registration.service.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule,JsonpModule } from '@angular/http';\r\nimport { MaterialModule } from '@angular/material';\r\nimport { UserRoleComponent } from './user-role/user-role.component';\r\nimport { UserRoleService } from './user-role/user-role.service';\r\nimport { UserGroupComponent } from './user-group/user-group.component';\r\nimport { UserGroupService } from './user-group/user-group.service';\r\nimport { UserAccountComponent } from './user-account/user-account.component';\r\nimport { ChangePasswordComponent } from './change-password/change-password.component';\r\nimport { AccountApprovalComponent } from './account-approval/accountapproval.component';\r\nimport { UserAccountService } from './user-account/user-account.service';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegistrationComponent } from './registration/registration.component';\r\nimport { LoginService } from './login/login.service';\r\nimport { RegistrationService } from './registration/registration.service';\r\nimport {SelectModule} from 'ng2-select';\r\nimport { AccountApprovalService} from './account-approval/accountapproval.service';\r\nimport { DataTableModule, SharedModule, GrowlModule, Message, \r\n         ButtonModule, Header, Footer, DialogModule, SelectItem, PickListModule,\r\n         PanelModule, MultiSelectModule, ListboxModule, TabViewModule, DropdownModule} from 'primeng/primeng';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UserRoleComponent,\r\n    UserAccountComponent,\r\n    UserGroupComponent,\r\n    LoginComponent,\r\n\t  RegistrationComponent,\r\n    AccountApprovalComponent,\r\n    ChangePasswordComponent  \r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,HttpModule,JsonpModule,\r\n    MaterialModule.forRoot(),\r\n    SelectModule,\r\n    DataTableModule, ButtonModule, PickListModule,\r\n    DialogModule, PanelModule, SharedModule, GrowlModule, MultiSelectModule, ListboxModule, TabViewModule, DropdownModule\r\n  ],\r\n  providers: [UserRoleService,LoginService,RegistrationService,UserGroupService,UserAccountService,AccountApprovalService],\r\n})\r\nexport class SecurityModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/security.module.ts","export * from './user-account.component';\r\n\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/user-account/index.ts","module.exports = \"<p-growl [value]=\\\"msgs\\\"></p-growl>\\r\\n<div class=\\\"main-panel\\\" style=\\\"min-height:110vh;\\\">\\r\\n<div *ngIf=\\\"!displayUserAccountDetails\\\">\\r\\n  <md-card>\\r\\n    <md-card-title color=\\\"primary\\\">Search User Accounts</md-card-title>\\r\\n    <md-card-content>\\r\\n      <md-input placeholder=\\\"Name\\\" [(ngModel)]=\\\"userAccountSearchCriteria.username\\\" class=\\\"col-md-5\\\"></md-input>\\r\\n      <div class=\\\"col-md-2\\\"></div>\\r\\n      <md-input placeholder=\\\"Email\\\" [(ngModel)]=\\\"userAccountSearchCriteria.email\\\" class=\\\"col-md-5\\\"></md-input>\\r\\n    </md-card-content>\\r\\n    <md-card-actions class=\\\"center\\\">\\r\\n      <button md-raised-button color=\\\"primary\\\" (click)=\\\"searchUserAccounts()\\\" *ngIf=\\\"authorizationService.isUserHasRole('UI_USERS_ACCESS')\\\">Search</button>\\r\\n      <button md-raised-button color=\\\"primary\\\" (click)=\\\"resetSearchCriteria()\\\">Reset</button>\\r\\n    </md-card-actions>\\r\\n  </md-card>\\r\\n  <br>\\r\\n  <br>\\r\\n  <p-dataTable [value]=\\\"userAccounts\\\" selectionMode=\\\"single\\\" [responsive]=\\\"true\\\" (onRowSelect)=\\\"onRowSelect($event)\\\">\\r\\n    <header>User Accounts</header>\\r\\n    <p-column field=\\\"username\\\" header=\\\"Name\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\"></p-column>\\r\\n    <p-column field=\\\"email\\\" header=\\\"Email\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\"></p-column>\\r\\n    <p-footer>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <button md-raised-button color=\\\"primary\\\" (click)=\\\"createUserAccount()\\\" *ngIf=\\\"authorizationService.isUserHasRole('UI_USERS_CREATE')\\\">Create</button>\\r\\n          <!--button md-raised-button color=\\\"primary\\\">Import</button-->\\r\\n        </div>\\r\\n      </div>\\r\\n    </p-footer>\\r\\n  </p-dataTable>\\r\\n</div>\\r\\n<div *ngIf=\\\"displayUserAccountDetails\\\">\\r\\n  <md-card>\\r\\n    <md-card-title color=\\\"primary\\\">Create User Account</md-card-title>\\r\\n    <md-card-content>\\r\\n      <div>\\r\\n        <md-input placeholder=\\\"Name\\\" [(ngModel)]=\\\"selectedUserAccount.username\\\" class=\\\"col-md-3\\\"></md-input>\\r\\n          <div class=\\\"col-md-1\\\"></div>\\r\\n        <md-input placeholder=\\\"Company Name\\\" [(ngModel)]=\\\"selectedUserAccount.companyName\\\" class=\\\"col-md-3\\\"></md-input>  \\r\\n\\t\\t      <div class=\\\"col-md-1\\\"></div>\\r\\n        <md-input placeholder=\\\"Email\\\" [(ngModel)]=\\\"selectedUserAccount.email\\\" class=\\\"col-md-4\\\"></md-input> \\r\\n      </div>\\r\\n      <div style=\\\"margin-top:15px;\\\">\\r\\n        <md-checkbox [(ngModel)]=\\\"selectedUserAccount.active\\\" class=\\\"col-md-5\\\" >Active</md-checkbox>\\r\\n        <div class=\\\"col-md-2\\\"></div>\\r\\n        <md-checkbox [(ngModel)]=\\\"selectedUserAccount.accountExpired\\\" class=\\\"col-md-5\\\" >Account Expired</md-checkbox>\\r\\n      </div>\\r\\n      <div>\\r\\n        <md-checkbox [(ngModel)]=\\\"selectedUserAccount.credentialsExpired\\\" class=\\\"col-md-5\\\" >Credentials Expired</md-checkbox>\\r\\n        <div class=\\\"col-md-2\\\"></div>\\r\\n        <md-checkbox [(ngModel)]=\\\"selectedUserAccount.accountLocked\\\" class=\\\"col-md-5\\\">Account Locked</md-checkbox>\\r\\n      </div>\\r\\n      <br>\\r\\n      <br>\\r\\n      <br>\\r\\n      <br>\\r\\n      <div>\\r\\n        <p-pickList [source]=\\\"sourceUserAccountUserGroups\\\" [target]=\\\"targetUserAccountUserGroups\\\" sourceHeader=\\\"Available Groups\\\" targetHeader=\\\"Selected Groups\\\"\\r\\n          [responsive]=\\\"true\\\" [sourceStyle]=\\\"{'height':'300px'}\\\" [targetStyle]=\\\"{'height':'300px'}\\\">\\r\\n          <template let-userAccountUserRole pTemplate=\\\"item\\\">\\r\\n            <div class=\\\"ui-helper-clearfix\\\">\\r\\n              <div style=\\\"font-size:14px;float:center;margin:15px 5px 0 0\\\">{{userAccountUserRole.userGroup.groupName}}</div>\\r\\n            </div>\\r\\n          </template>\\r\\n        </p-pickList>\\r\\n      </div>\\r\\n    </md-card-content>\\r\\n    <md-card-actions class=\\\"center\\\">\\r\\n      <button md-raised-button color=\\\"primary\\\" (click)=\\\"submitNewUserAccount()\\\" *ngIf=\\\"authorizationService.isUserHasRole('UI_USERS_UPDATE')\\\">Submit</button>\\r\\n      <button md-raised-button color=\\\"primary\\\" (click)=\\\"deleteNewUserAccount()\\\" *ngIf=\\\"authorizationService.isUserHasRole('UI_USERS_DELETE')\\\">Delete</button>\\r\\n      <button md-raised-button color=\\\"primary\\\" (click)=\\\"backToUserAccounts()\\\">Back</button>\\r\\n    </md-card-actions>\\r\\n  </md-card>\\r\\n</div>\\r\\n\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/user-account/user-account.component.html\n// module id = ../../../../../src/app/security/user-account/user-account.component.html\n// module chunks = 0","import { Component, OnInit } from '@angular/core';\r\nimport { UserGroupService } from \"../user-group/user-group.service\";\r\nimport { UserGroup } from '../model/user_group';\r\nimport { UserGroupUserRole } from '../model/user_group_user_role';\r\nimport { UserGroupSearchCriteria } from '../model/user_group_searchcriteria';\r\nimport { UserAccountSearchCriteria } from '../model/UserAccountSearchCriteria';\r\nimport { Message } from 'primeng/primeng';\r\nimport { UserAccount } from '../model/user_account';\r\nimport { UserAccountService } from \"../user-account/user-account.service\";\r\nimport { UserAccountUserGroup } from \"../model/user_account_user_group\";\r\nimport { AuthorizationService } from '../../core/authorization.service';\r\nimport { Company } from '../model/Company';\r\n\r\n@Component({\r\n  selector: 'user-account',\r\n  templateUrl: './user-account.component.html'\r\n})\r\nexport class UserAccountComponent implements OnInit {\r\n\r\n  sourceUserAccountUserGroups: UserAccountUserGroup[] = [];\r\n  targetUserAccountUserGroups: UserAccountUserGroup[] = [];\r\n  availableUserGroups: string[] = [];\r\n  userGroupUserRoles: UserGroupUserRole[] = [];\r\n  userAccounts: UserAccount[];\r\n  selectedUserAccount: UserAccount;\r\n  userGroupSearchCriteria: UserGroupSearchCriteria = new UserGroupSearchCriteria();\r\n  userAccountSearchCriteria: UserAccountSearchCriteria = new UserAccountSearchCriteria();\r\n  displayUserAccountDetails: boolean;\r\n  updateUserAccount: boolean;\r\n  msgs: Message[] = [];\r\n  companylist:Company[] = [];\r\n\r\n  constructor(private userAccountService: UserAccountService, private userGroupService: UserGroupService, private authorizationService: AuthorizationService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onRowSelect(event: any) {\r\n    this.selectedUserAccount = event.data;\r\n    this.targetUserAccountUserGroups = [];\r\n    this.availableUserGroups = [];\r\n    this.userAccountService.getUserAccountById(this.selectedUserAccount.objectId)\r\n      .subscribe(userAccountFromDB => {\r\n        this.selectedUserAccount = userAccountFromDB;\r\n        this.targetUserAccountUserGroups = userAccountFromDB.userAccountUserGroups;\r\n        for (var i = 0; i < userAccountFromDB.userAccountUserGroups.length; i++) {\r\n          this.availableUserGroups[i] = userAccountFromDB.userAccountUserGroups[i].userGroup.groupName;\r\n        }\r\n        this.displayUserAccountDetails = true;\r\n        this.updateUserAccount = true;\r\n        this.searchUserGroups();\r\n      });\r\n  }\r\n\r\n\r\n  searchUserAccounts() {\r\n    this.userAccountService.getUserAccounts(this.userAccountSearchCriteria)\r\n      .subscribe((userAccounts) => {\r\n        this.userAccounts = userAccounts;\r\n      },\r\n      error => {\r\n\r\n      });\r\n  };\r\n  \r\n  getCompanyList()\r\n  {\r\n\t this.userAccountService.getCompanyList()\r\n      .subscribe(data => {\r\n        this.companylist = data;\r\n      });\r\n  }\r\n\r\n  searchUserGroups() {\r\n    this.sourceUserAccountUserGroups = [];\r\n    this.userGroupService.getUserGroups(this.userGroupSearchCriteria)\r\n      .subscribe((userGroups) => {\r\n        let count = 0;\r\n        for (let i = 0; i < userGroups.length; i++) {\r\n          if (this.availableUserGroups.indexOf(userGroups[i].groupName) < 0) {\r\n            let userAccountUserGroup = new UserAccountUserGroup();\r\n            userAccountUserGroup.userGroup = userGroups[i];\r\n            this.sourceUserAccountUserGroups[count] = userAccountUserGroup;\r\n            count++;\r\n          }\r\n        }\r\n      },\r\n      error => {\r\n\r\n      });\r\n  };\r\n\r\n  resetSearchCriteria() {\r\n    this.userGroupSearchCriteria = new UserGroupSearchCriteria();\r\n  };\r\n\r\n  createUserAccount() {\r\n    this.selectedUserAccount = new UserAccount();\r\n    this.targetUserAccountUserGroups = [];\r\n    this.displayUserAccountDetails = true;\r\n    this.updateUserAccount = false;\r\n    this.searchUserGroups();\r\n  };\r\n\r\n  backToUserAccounts() {\r\n    this.selectedUserAccount = new UserAccount();\r\n    this.displayUserAccountDetails = false;\r\n    this.updateUserAccount = false;\r\n  };\r\n\r\n  submitNewUserAccount() {\r\n    this.msgs = [];\r\n    this.displayUserAccountDetails = false;\r\n    this.selectedUserAccount.userAccountUserGroups = this.targetUserAccountUserGroups;\r\n    if (this.updateUserAccount) {\r\n      this.userAccountService.updateUserAccount(this.selectedUserAccount)\r\n        .subscribe(() => {\r\n          this.searchUserAccounts();\r\n          this.msgs.push({ severity: \"info\", summary: \"User account updated successfully.\", detail: \"\" });\r\n        },\r\n        error => {\r\n          this.msgs.push({ severity: \"error\", summary: \"User account updation failed.\", detail: error });\r\n        });\r\n    } else {\r\n      this.userAccountService.createUserAccount(this.selectedUserAccount)\r\n        .subscribe(() => {\r\n          this.searchUserAccounts();\r\n          this.msgs.push({ severity: \"info\", summary: \"User account created successfully.\", detail: \"\" });\r\n        },\r\n        error => {\r\n          this.msgs.push({ severity: \"error\", summary: \"User account creation failed.\", detail: error });\r\n        });\r\n    }\r\n  };\r\n\r\n\r\n  deleteNewUserAccount() {\r\n    this.msgs = [];\r\n    this.displayUserAccountDetails = false;\r\n    this.userAccountService.deleteUserAccountById(this.selectedUserAccount.objectId)\r\n      .subscribe(() => {\r\n        this.searchUserAccounts();\r\n        this.msgs.push({ severity: \"info\", summary: \"User account deleted successfully.\", detail: \"\" });\r\n      },\r\n      error => {\r\n        this.msgs.push({ severity: \"error\", summary: \"User account deletion failed.\", detail: error });\r\n      });\r\n  };\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/user-account/user-account.component.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\nimport { Observable }     from 'rxjs/Observable';\r\nimport {UserAccountTypeConstant} from '../model/UserAccountTypeConstant';\r\nimport {UserAccountSearchCriteria} from '../model/UserAccountSearchCriteria';\r\nimport {UserAccount} from '../model/user_account';\r\nimport { UserAccountChangePasswordResource } from '../model/user_account_change_password_resource';\r\nimport {Company} from '../model/Company';\r\n\r\n@Injectable()\r\nexport class UserAccountService {\r\n\r\n  constructor(private http: Http) { }\r\n\r\n \r\ngetUserAccounts (userAccountSearchCriteria: UserAccountSearchCriteria):  Observable<UserAccount[]>  {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.post('userAccounts/search', JSON.stringify(userAccountSearchCriteria), { headers: headers })\r\n            .map(res => res.json())\r\n            .catch(this.handleError);   \r\n  }\r\n\r\ngetCompanyList() :Observable<Company[]> {\r\n          let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.get('userAccounts/getCompanyList', { headers: headers })\r\n            .map(res => res.json())\r\n            .catch(this.handleError);\r\n}\t\r\n\r\ngetUserAccountById(id: number): Observable<UserAccount> {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.get('userAccounts/' + id)\r\n            .map((res: Response) => res.json())\r\n            .catch(this.handleError);\r\n    } \r\n\r\ncreateUserAccount (userAccount: UserAccount):  Observable<UserAccount>  {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.post('userAccounts', JSON.stringify(userAccount), { headers: headers })\r\n            .map((res: Response)  => { return; })\r\n            .catch(this.handleError);   \r\n  }\r\n\r\ndeleteUserAccountById(id: number): Observable<UserAccount> {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.delete('userAccounts/' + id)\r\n            .map((res: Response)  => { return; })\r\n            .catch(this.handleError);\r\n} \r\n\r\nupdateUserAccount (userAccount: UserAccount):  Observable<UserAccount>  {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.put('userAccounts' + \"/\" + userAccount.objectId, JSON.stringify(userAccount), { headers: headers })\r\n            .map((res: Response)  => { return; })\r\n            .catch(this.handleError);  \r\n  }\r\n\r\nchangeUserPassword (userAccountChangePasswordResource: UserAccountChangePasswordResource):  Observable<UserAccount>  {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.post('userAccounts/changepassword' , JSON.stringify(userAccountChangePasswordResource), { headers: headers })\r\n            .map((res: Response)  => { return; })\r\n            .catch(this.handleError);  \r\n  }\r\n\r\n  private extractData(res: Response) {     \r\n    let body = res.json();\r\n    return body.data || { };\r\n  }\r\n\r\n  private handleError (error: Response | any) {\r\n    // In a real world app, we might use a remote logging infrastructure\r\n    //console.log(error);\r\n    let errMsg: string;\r\n    if (error instanceof Response) {\r\n      const body = error.json() || '';\r\n      const err = body.error || JSON.stringify(body);\r\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\r\n    } else {\r\n      errMsg = error.message ? error.message : error.toString();\r\n    }\r\n    //console.error(errMsg);\r\n    return Observable.throw(errMsg);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/user-account/user-account.service.ts","export * from './user-group.component';\r\n\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/user-group/index.ts","module.exports = \"<p-growl [value]=\\\"msgs\\\"></p-growl>\\r\\n<div class=\\\"main-panel\\\" style=\\\"min-height:110vh;\\\">\\r\\n<div *ngIf=\\\"!displayUserGroupDetails\\\">\\r\\n  <md-card>\\r\\n    <md-card-title color=\\\"primary\\\">Search User Groups</md-card-title>\\r\\n    <md-card-content>\\r\\n      <md-input placeholder=\\\"Name\\\" [(ngModel)]=\\\"userGroupSearchCriteria.groupName\\\" class=\\\"col-md-5\\\"></md-input>\\r\\n      <div class=\\\"col-md-2\\\"></div>\\r\\n      <md-input placeholder=\\\"Description\\\" [(ngModel)]=\\\"userGroupSearchCriteria.description\\\" class=\\\"col-md-5\\\"></md-input>\\r\\n    </md-card-content>\\r\\n    <md-card-actions class=\\\"center\\\">\\r\\n      <button md-raised-button color=\\\"primary\\\" (click)=\\\"searchUserGroups()\\\" *ngIf=\\\"authorizationService.isUserHasRole('UI_USER_GROUPS_ACCESS')\\\">Search</button>\\r\\n      <button md-raised-button color=\\\"primary\\\" (click)=\\\"resetSearchCriteria()\\\">Reset</button>\\r\\n    </md-card-actions>\\r\\n  </md-card>\\r\\n  <br>\\r\\n  <br>\\r\\n  <p-dataTable [value]=\\\"userGroups\\\" selectionMode=\\\"single\\\" [responsive]=\\\"true\\\" (onRowSelect)=\\\"onRowSelect($event)\\\">\\r\\n    <header>User Groups</header>\\r\\n    <p-column field=\\\"groupName\\\" header=\\\"Name\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\"></p-column>\\r\\n    <p-column field=\\\"description\\\" header=\\\"Description\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\"></p-column>\\r\\n    <p-footer>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <button md-raised-button color=\\\"primary\\\" (click)=\\\"createUserGroup()\\\" *ngIf=\\\"authorizationService.isUserHasRole('UI_USER_GROUPS_CREATE')\\\">Create</button>\\r\\n          <!--button md-raised-button color=\\\"primary\\\">Import</button-->\\r\\n        </div>\\r\\n      </div>\\r\\n    </p-footer>\\r\\n  </p-dataTable>\\r\\n</div>\\r\\n<div *ngIf=\\\"displayUserGroupDetails\\\">\\r\\n  <md-card>\\r\\n    <md-card-title color=\\\"primary\\\">Create User Group</md-card-title>\\r\\n    <md-card-content>\\r\\n      <div>\\r\\n        <md-input placeholder=\\\"Name\\\" [(ngModel)]=\\\"selectedUserGroup.groupName\\\" class=\\\"col-md-5\\\"></md-input>\\r\\n        <div class=\\\"col-md-2\\\"></div>\\r\\n        <md-input placeholder=\\\"Description\\\" [(ngModel)]=\\\"selectedUserGroup.description\\\" class=\\\"col-md-5\\\"></md-input>\\r\\n      </div>\\r\\n      <br>\\r\\n      <br>\\r\\n      <div>\\r\\n        <p-pickList [source]=\\\"sourceUserGroupUserRoles\\\" [target]=\\\"targetUserGroupUserRoles\\\" sourceHeader=\\\"Available Roles\\\" targetHeader=\\\"Selected Roles\\\"\\r\\n          [responsive]=\\\"true\\\" [sourceStyle]=\\\"{'height':'300px'}\\\" [targetStyle]=\\\"{'height':'300px'}\\\">\\r\\n          <template let-userGroupUserRole pTemplate=\\\"item\\\">\\r\\n            <div class=\\\"ui-helper-clearfix\\\">\\r\\n              <div style=\\\"font-size:14px;float:center;margin:15px 5px 0 0\\\">{{userGroupUserRole.userRole.roleName}}</div>\\r\\n            </div>\\r\\n          </template>\\r\\n        </p-pickList>\\r\\n      </div>\\r\\n    </md-card-content>\\r\\n    <md-card-actions class=\\\"center\\\">\\r\\n      <button md-raised-button color=\\\"primary\\\" (click)=\\\"submitNewUserGroup()\\\" *ngIf=\\\"authorizationService.isUserHasRole('UI_USER_GROUPS_UPDATE')\\\">Submit</button>\\r\\n      <button md-raised-button color=\\\"primary\\\" (click)=\\\"deleteNewUserGroup()\\\" *ngIf=\\\"authorizationService.isUserHasRole('UI_USER_GROUPS_DELETE')\\\">Delete</button>\\r\\n      <button md-raised-button color=\\\"primary\\\" (click)=\\\"backToUserGroups()\\\">Back</button>\\r\\n    </md-card-actions>\\r\\n  </md-card>\\r\\n</div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/user-group/user-group.component.html\n// module id = ../../../../../src/app/security/user-group/user-group.component.html\n// module chunks = 0","import { Component, OnInit } from '@angular/core';\r\nimport { UserGroupService } from \"./user-group.service\";\r\nimport { UserRoleService } from \"../user-role/user-role.service\";\r\nimport { UserGroup } from '../model/user_group';\r\nimport { UserRole } from '../model/user.role';\r\nimport { UserGroupUserRole } from '../model/user_group_user_role';\r\nimport { UserGroupSearchCriteria } from '../model/user_group_searchcriteria';\r\nimport { UserRoleSearchCriteria } from '../model/user.role.search.criteria';\r\nimport { Message } from 'primeng/primeng';\r\nimport { AuthorizationService } from '../../core/authorization.service';\r\n\r\n@Component({\r\n  selector: 'user-group',\r\n  templateUrl: './user-group.component.html'\r\n})\r\nexport class UserGroupComponent implements OnInit {\r\n\r\n  sourceUserGroupUserRoles: UserGroupUserRole[] = [];\r\n  targetUserGroupUserRoles: UserGroupUserRole[] = [];\r\n  availableUserRoles: string[] = [];\r\n  userGroupUserRoles: UserGroupUserRole[] = [];\r\n  userGroups: UserGroup[];\r\n  selectedUserGroup: UserGroup;\r\n  userGroupSearchCriteria: UserGroupSearchCriteria = new UserGroupSearchCriteria();\r\n  userRoleSearchCriteria: UserRoleSearchCriteria = new UserRoleSearchCriteria();\r\n  displayUserGroupDetails: boolean;\r\n  updateUserGroup: boolean;\r\n  msgs: Message[] = [];\r\n\r\n  constructor(private userGroupService: UserGroupService, private userRoleService: UserRoleService, private authorizationService: AuthorizationService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onRowSelect(event: any) {\r\n    this.selectedUserGroup = event.data;\r\n    this.targetUserGroupUserRoles = [];\r\n    this.availableUserRoles = [];\r\n    this.userGroupService.getUserGroupById(this.selectedUserGroup.objectId)\r\n      .subscribe(userGroupFromDB => {\r\n        this.selectedUserGroup = userGroupFromDB;\r\n        this.targetUserGroupUserRoles = userGroupFromDB.userGroupUserRoles;\r\n        for (var i = 0; i < userGroupFromDB.userGroupUserRoles.length; i++) {\r\n          this.availableUserRoles[i] = userGroupFromDB.userGroupUserRoles[i].userRole.roleName;\r\n        }\r\n        this.displayUserGroupDetails = true;\r\n        this.updateUserGroup = true;\r\n        this.searchUserRoles();\r\n      });\r\n  }\r\n\r\n\r\n  searchUserGroups() {\r\n    this.userGroupService.getUserGroups(this.userGroupSearchCriteria)\r\n      .subscribe((userGroups) => {\r\n        this.userGroups = userGroups;\r\n      },\r\n      error => {\r\n\r\n      });\r\n  };\r\n\r\n  searchUserRoles() {\r\n    this.sourceUserGroupUserRoles = [];\r\n    this.userRoleService.getUserRoles(this.userRoleSearchCriteria)\r\n      .subscribe((userRoles) => {\r\n        let count = 0;\r\n        for (let i = 0; i < userRoles.length; i++) {\r\n          if (this.availableUserRoles.indexOf(userRoles[i].roleName)<0) {\r\n            let userGroupUserRole = new UserGroupUserRole();\r\n            userGroupUserRole.userRole = userRoles[i];\r\n            this.sourceUserGroupUserRoles[count] = userGroupUserRole;\r\n            count++;\r\n          }\r\n        }\r\n      },\r\n      error => {\r\n\r\n      });\r\n  };\r\n\r\n  resetSearchCriteria() {\r\n    this.userGroupSearchCriteria = new UserGroupSearchCriteria();\r\n  };\r\n\r\n  createUserGroup() {\r\n    this.selectedUserGroup = new UserGroup();\r\n    this.displayUserGroupDetails = true;\r\n    this.updateUserGroup = false;\r\n    this.searchUserRoles();\r\n  };\r\n\r\n  backToUserGroups() {\r\n    this.selectedUserGroup = new UserGroup();\r\n    this.displayUserGroupDetails = false;\r\n    this.updateUserGroup = false;\r\n  };\r\n\r\n  submitNewUserGroup() {\r\n    this.msgs = [];\r\n    this.displayUserGroupDetails = false;\r\n    this.selectedUserGroup.userGroupUserRoles = this.targetUserGroupUserRoles;\r\n    if (this.updateUserGroup) {\r\n      this.userGroupService.updateUserGroup(this.selectedUserGroup)\r\n        .subscribe(() => {\r\n          this.searchUserGroups();\r\n          this.msgs.push({ severity: \"info\", summary: \"User group updated successfully.\", detail: \"\" });\r\n        },\r\n        error => {\r\n          this.msgs.push({ severity: \"error\", summary: \"User group updation failed.\", detail: error });\r\n        });\r\n    } else {\r\n      this.userGroupService.createUserGroup(this.selectedUserGroup)\r\n        .subscribe(() => {\r\n          this.searchUserGroups();\r\n          this.msgs.push({ severity: \"info\", summary: \"User group created successfully.\", detail: \"\" });\r\n        },\r\n        error => {\r\n          this.msgs.push({ severity: \"error\", summary: \"User group creation failed.\", detail: error });\r\n        });\r\n    }\r\n  };\r\n\r\n\r\n  deleteNewUserGroup() {\r\n    this.msgs = [];\r\n    this.displayUserGroupDetails = false;\r\n    this.userGroupService.deleteUserGroupById(this.selectedUserGroup.objectId)\r\n      .subscribe(() => {\r\n        this.searchUserGroups();\r\n        this.msgs.push({ severity: \"info\", summary: \"User group deleted successfully.\", detail: \"\" });\r\n      },\r\n      error => {\r\n        this.msgs.push({ severity: \"error\", summary: \"User group deletion failed.\", detail: error });\r\n      });\r\n  };\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/user-group/user-group.component.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\nimport { Observable }     from 'rxjs/Observable';\r\nimport {AuthoritiesByModuleResource} from '../model/authorities.by.module'\r\nimport {UserGroup} from '../model/user_group';\r\nimport{UserGroupSearchCriteria} from '../model/user_group_searchcriteria';\r\n\r\n@Injectable()\r\nexport class UserGroupService {\r\n\r\n  constructor(private http: Http) { }\r\n\r\ngetUserGroups (userGroupSearchCriteria: UserGroupSearchCriteria):  Observable<UserGroup[]>  {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.post('userGroups/search', JSON.stringify(userGroupSearchCriteria), { headers: headers })\r\n            .map(res => res.json())\r\n            .catch(this.handleError);   \r\n  }\r\n\r\ngetUserGroupById(id: number): Observable<UserGroup> {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.get('userGroups/' + id)\r\n            .map((res: Response) => res.json())\r\n            .catch(this.handleError);\r\n    } \r\n\r\ncreateUserGroup (userGroup: UserGroup):  Observable<UserGroup>  {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        headers.append('Access-Control-Allow-Origin', '*');      \r\n        return this.http.post('userGroups', JSON.stringify(userGroup), { headers: headers })\r\n            .map((res: Response)  => { return; })\r\n            .catch(this.handleError);   \r\n  }\r\n\r\ndeleteUserGroupById(id: number): Observable<UserGroup> {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.delete('userGroups/' + id)\r\n            .map((res: Response)  => { return; })\r\n            .catch(this.handleError);\r\n} \r\n\r\nupdateUserGroup (userGroup: UserGroup):  Observable<UserGroup>  {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.put('userGroups' + \"/\" + userGroup.objectId, JSON.stringify(userGroup), { headers: headers })\r\n            .map((res: Response)  => { return; })\r\n            .catch(this.handleError);  \r\n  }\r\n\r\n  private extractData(res: Response) {     \r\n    let body = res.json();\r\n    console.log('body extractData ' , res);\r\n    return body.data || { };\r\n  }\r\n\r\n  private handleError (error: Response | any) {\r\n    // In a real world app, we might use a remote logging infrastructure\r\n    //console.log(error);\r\n    let errMsg: string;\r\n    if (error instanceof Response) {\r\n      const body = error.json() || '';\r\n      const err = body.error || JSON.stringify(body);\r\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\r\n    } else {\r\n      errMsg = error.message ? error.message : error.toString();\r\n    }\r\n    //console.error(errMsg);\r\n    return Observable.throw(errMsg);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/user-group/user-group.service.ts","export * from './user-role.component';\r\n\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/user-role/index.ts","module.exports = \"<p-growl [value]=\\\"msgs\\\"></p-growl>\\r\\n<div class=\\\"main-panel\\\" style=\\\"min-height:110vh;\\\">\\r\\n<div *ngIf=\\\"!displayUserRoleDetails\\\">\\r\\n  <md-card>\\r\\n    <md-card-title color=\\\"primary\\\">Search User Roles</md-card-title>\\r\\n    <md-card-content>\\r\\n      <md-input placeholder=\\\"Name\\\" [(ngModel)]=\\\"userRoleSearchCriteria.roleName\\\" class=\\\"col-md-5\\\"></md-input>\\r\\n      <div class=\\\"col-md-2\\\"></div>\\r\\n      <md-input placeholder=\\\"Description\\\" [(ngModel)]=\\\"userRoleSearchCriteria.description\\\" class=\\\"col-md-5\\\"></md-input>\\r\\n    </md-card-content>\\r\\n    <md-card-actions class=\\\"center\\\">\\r\\n      <button md-raised-button color=\\\"primary\\\" (click)=\\\"searchUserRoles()\\\" *ngIf=\\\"authorizationService.isUserHasRole('UI_USER_ROLES_ACCESS')\\\">Search</button>\\r\\n      <button md-raised-button color=\\\"primary\\\" (click)=\\\"resetSearchCriteria()\\\">Reset</button>\\r\\n    </md-card-actions>\\r\\n  </md-card>\\r\\n  <br>\\r\\n  <br>\\r\\n  <p-dataTable [value]=\\\"userRoles\\\" selectionMode=\\\"single\\\" [responsive]=\\\"true\\\" (onRowSelect)=\\\"onRowSelect($event)\\\">\\r\\n    <header>User Roles</header>\\r\\n    <p-column field=\\\"roleName\\\" header=\\\"Name\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\"></p-column>\\r\\n    <p-column field=\\\"description\\\" header=\\\"Description\\\" [sortable]=\\\"true\\\" [filter]=\\\"true\\\"></p-column>\\r\\n    <p-footer>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <button md-raised-button color=\\\"primary\\\" (click)=\\\"createUserRole()\\\" *ngIf=\\\"authorizationService.isUserHasRole('UI_USER_ROLES_CREATE')\\\">Create</button>\\r\\n          <!--button md-raised-button color=\\\"primary\\\">Import</button-->\\r\\n        </div>\\r\\n      </div>\\r\\n    </p-footer>\\r\\n  </p-dataTable>\\r\\n</div>\\r\\n<div *ngIf=\\\"displayUserRoleDetails\\\">\\r\\n  <md-card>\\r\\n    <md-card-title color=\\\"primary\\\">Create User Role</md-card-title>\\r\\n    <md-card-content>\\r\\n      <div>\\r\\n        <md-input placeholder=\\\"Name\\\" [(ngModel)]=\\\"selectedUserRole.roleName\\\" class=\\\"col-md-5\\\"></md-input>\\r\\n        <div class=\\\"col-md-2\\\"></div>\\r\\n        <md-input placeholder=\\\"Description\\\" [(ngModel)]=\\\"selectedUserRole.description\\\" class=\\\"col-md-5\\\"></md-input>\\r\\n      </div>\\r\\n      <br>\\r\\n      <br>\\r\\n      <br>\\r\\n      <br>\\r\\n      <div>\\r\\n        <p-panel *ngFor=\\\"let authorityByModule of authoritiesByModule;\\\" [toggleable]=\\\"true\\\">\\r\\n          <header>\\r\\n            {{authorityByModule.moduleName}}\\r\\n          </header>\\r\\n          <table class=\\\"table table-bordered table-sm\\\">\\r\\n            <thead>\\r\\n              <tr>\\r\\n                <th class=\\\"text-center\\\">Grant</th>\\r\\n                <th class=\\\"text-center\\\">View</th>\\r\\n                <th class=\\\"text-center\\\">Create</th>\\r\\n                <th class=\\\"text-center\\\">Update</th>\\r\\n                <th class=\\\"text-center\\\">Delete</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let authority of authorityByModule.authorityResources;\\\">\\r\\n                <td class=\\\"text-center\\\">{{authority.authorityConstant}}</td>\\r\\n                <td class=\\\"text-center\\\">\\r\\n                  <input type=\\\"checkbox\\\" *ngIf=\\\"authority.viewGrant\\\"  style=\\\"width: 20px; height: 20px; cursor: pointer;\\\" (click)=\\\"toggleUserRoleAuthority(authority.viewGrant)\\\" [checked]=\\\"existsUserRoleAuthority(authority.viewGrant)\\\">\\r\\n                </td>\\r\\n                <td class=\\\"text-center\\\">\\r\\n                  <input type=\\\"checkbox\\\" *ngIf=\\\"authority.createGrant\\\"  style=\\\"width: 20px; height: 20px; cursor: pointer;\\\" (click)=\\\"toggleUserRoleAuthority(authority.createGrant)\\\" [checked]=\\\"existsUserRoleAuthority(authority.createGrant)\\\">\\r\\n                </td>\\r\\n                <td class=\\\"text-center\\\">\\r\\n                  <input type=\\\"checkbox\\\" *ngIf=\\\"authority.updateGrant\\\"  style=\\\"width: 20px; height: 20px; cursor: pointer;\\\" (click)=\\\"toggleUserRoleAuthority(authority.updateGrant)\\\" [checked]=\\\"existsUserRoleAuthority(authority.updateGrant)\\\">\\r\\n                </td>\\r\\n                <td class=\\\"text-center\\\">\\r\\n                  <input type=\\\"checkbox\\\" *ngIf=\\\"authority.deleteGrant\\\"  style=\\\"width: 20px; height: 20px; cursor: pointer;\\\" (click)=\\\"toggleUserRoleAuthority(authority.deleteGrant)\\\" [checked]=\\\"existsUserRoleAuthority(authority.deleteGrant)\\\">\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </p-panel>\\r\\n      </div>\\r\\n    </md-card-content>\\r\\n    <md-card-actions class=\\\"center\\\">\\r\\n      <button md-raised-button color=\\\"primary\\\" (click)=\\\"submitNewUserRole()\\\" *ngIf=\\\"authorizationService.isUserHasRole('UI_USER_ROLES_UPDATE')\\\">Submit</button>\\r\\n      <button md-raised-button color=\\\"primary\\\" (click)=\\\"deleteNewUserRole()\\\" *ngIf=\\\"authorizationService.isUserHasRole('UI_USER_ROLES_DELETE')\\\">Delete</button>\\r\\n      <button md-raised-button color=\\\"primary\\\" (click)=\\\"backToUserRoles()\\\">Back</button>\\r\\n    </md-card-actions>\\r\\n  </md-card>\\r\\n</div>\\r\\n\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/user-role/user-role.component.html\n// module id = ../../../../../src/app/security/user-role/user-role.component.html\n// module chunks = 0","import { Component, OnInit } from '@angular/core';\r\nimport { UserRoleService } from \"./user-role.service\";\r\nimport { AuthoritiesByModuleResource } from \"../model/authorities.by.module\";\r\nimport { UserRole } from '../model/user.role';\r\nimport { UserRoleSearchCriteria } from '../model/user.role.search.criteria';\r\nimport { Message } from 'primeng/primeng';\r\nimport { AuthorizationService } from '../../core/authorization.service';\r\n\r\n@Component({\r\n  selector: 'user-role',\r\n  templateUrl: './user-role.component.html'\r\n})\r\nexport class UserRoleComponent implements OnInit {\r\n\r\n  private userRoles: UserRole[];\r\n  private selectedUserRole: UserRole;\r\n  private userRoleSearchCriteria: UserRoleSearchCriteria = new UserRoleSearchCriteria();\r\n  private displayUserRoleDetails: boolean;\r\n  private authoritiesByModule: AuthoritiesByModuleResource[] = [];\r\n  private userRoleAuthorities: string[] = [];\r\n  private updateUserRole: boolean;\r\n  msgs: Message[] = [];\r\n\r\n  constructor(private userRoleService: UserRoleService, private authorizationService: AuthorizationService) { }\r\n\r\n  ngOnInit() {\r\n    this.getAuthoritiesByModule();\r\n  }\r\n\r\n  onRowSelect(event: any) {\r\n    this.selectedUserRole = event.data;\r\n    this.userRoleService.getUserRoleById(this.selectedUserRole.objectId)\r\n      .subscribe(userRoleFromDB => {\r\n        this.selectedUserRole = userRoleFromDB;\r\n        this.userRoleAuthorities = this.selectedUserRole.userRoleAuthorities;\r\n        this.displayUserRoleDetails = true;\r\n        this.updateUserRole = true;\r\n      });\r\n  }\r\n\r\n\r\n  searchUserRoles() {\r\n    this.userRoleService.getUserRoles(this.userRoleSearchCriteria)\r\n      .subscribe((userRoles) => {\r\n        this.userRoles = userRoles;\r\n      },\r\n      error => {\r\n\r\n      });\r\n  };\r\n\r\n  resetSearchCriteria() {\r\n     this.userRoleSearchCriteria  = new UserRoleSearchCriteria();\r\n  };\r\n\r\n  createUserRole() {\r\n    this.selectedUserRole = new UserRole();\r\n    this.userRoleAuthorities = [];\r\n    this.displayUserRoleDetails = true;\r\n    this.updateUserRole = false;\r\n  };\r\n\r\n  backToUserRoles() {\r\n    this.selectedUserRole = new UserRole();\r\n    this.userRoleAuthorities = [];\r\n    this.displayUserRoleDetails = false;\r\n    this.updateUserRole = false;\r\n  };\r\n\r\n  submitNewUserRole() {\r\n    this.msgs = [];\r\n    this.displayUserRoleDetails = false;\r\n    this.selectedUserRole.userRoleAuthorities = this.userRoleAuthorities;\r\n    if (this.updateUserRole) {\r\n      this.userRoleService.updateUserRole(this.selectedUserRole)\r\n        .subscribe(() => {\r\n          this.searchUserRoles();\r\n          this.msgs.push({ severity: \"info\", summary: \"User role updated successfully.\", detail: \"\" });\r\n        },\r\n        error => {\r\n          this.msgs.push({ severity: \"error\", summary: \"User role updation failed.\", detail: error });\r\n        });\r\n    } else {\r\n      this.userRoleService.createUserRole(this.selectedUserRole)\r\n        .subscribe(() => {\r\n          this.searchUserRoles();\r\n          this.msgs.push({ severity: \"info\", summary: \"User role created successfully.\", detail: \"\" });\r\n        },\r\n        error => {\r\n          this.msgs.push({ severity: \"error\", summary: \"User role creation failed.\", detail: error });\r\n        });\r\n    }\r\n  };\r\n\r\n\r\n  deleteNewUserRole() {\r\n    this.msgs = [];\r\n    this.displayUserRoleDetails = false;\r\n    this.userRoleService.deleteUserRoleById(this.selectedUserRole.objectId)\r\n        .subscribe(() => {\r\n          this.searchUserRoles();\r\n          this.msgs.push({ severity: \"info\", summary: \"User role deleted successfully.\", detail: \"\" });\r\n        },\r\n        error => {\r\n          this.msgs.push({ severity: \"error\", summary: \"User role deletion failed.\", detail: error });\r\n        });\r\n  };\r\n\r\n  getAuthoritiesByModule() {\r\n    this.userRoleService.getAuthoritiesByModule()\r\n      .subscribe((authorities) => {\r\n        this.authoritiesByModule = authorities;\r\n      },\r\n      error => {\r\n\r\n      });\r\n  };\r\n\r\n  toggleUserRoleAuthority(item) {\r\n    var idx = this.userRoleAuthorities.indexOf(item);\r\n    if (idx > -1) {\r\n      this.userRoleAuthorities.splice(idx, 1);\r\n    }\r\n    else {\r\n      this.userRoleAuthorities.push(item);\r\n    }\r\n  };\r\n\r\n  existsUserRoleAuthority(item) {\r\n    return this.userRoleAuthorities.indexOf(item) > -1;\r\n  };\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/user-role/user-role.component.ts","import { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\nimport { Observable }     from 'rxjs/Observable';\r\nimport {AuthoritiesByModuleResource} from '../model/authorities.by.module'\r\nimport {UserRole} from '../model/user.role';\r\nimport{UserRoleSearchCriteria} from '../model/user.role.search.criteria';\r\n\r\n@Injectable()\r\nexport class UserRoleService {\r\n\r\n  constructor(private http: Http) { }\r\n\r\ngetAuthoritiesByModule ():  Observable<AuthoritiesByModuleResource[]>  {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        let options = new RequestOptions({ headers: headers });\r\n          return this.http.get('enumConstants/authorityConstants')\r\n         .map(res => res.json()).catch(this.handleError);;     \r\n  }\r\n\r\ngetUserRoles (userRoleSearchCriteria: UserRoleSearchCriteria):  Observable<UserRole[]>  {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        headers.append('Access-Control-Allow-Origin', '*');      \r\n        return this.http.post('userRoles/search', JSON.stringify(userRoleSearchCriteria), { headers: headers })\r\n            .map(res => res.json())\r\n            .catch(this.handleError);   \r\n  }\r\n\r\ngetUserRoleById(id: number): Observable<UserRole> {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.get('userRoles/' + id)\r\n            .map((res: Response) => res.json())\r\n            .catch(this.handleError);\r\n    } \r\n\r\ncreateUserRole (userRole: UserRole):  Observable<UserRole>  {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        headers.append('Access-Control-Allow-Origin', '*');      \r\n        return this.http.post('userRoles', JSON.stringify(userRole), { headers: headers })\r\n            .map((res: Response)  => { return; })\r\n            .catch(this.handleError);   \r\n  }\r\n\r\ndeleteUserRoleById(id: number): Observable<UserRole> {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.delete('userRoles/' + id)\r\n            .map((res: Response)  => { return; })\r\n            .catch(this.handleError);\r\n} \r\n\r\nupdateUserRole (userRole: UserRole):  Observable<UserRole>  {\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        return this.http.put('userRoles' + \"/\" + userRole.objectId, JSON.stringify(userRole), { headers: headers })\r\n            .map((res: Response)  => { return; })\r\n            .catch(this.handleError);  \r\n  }\r\n\r\n  private extractData(res: Response) {     \r\n    let body = res.json();\r\n    console.log('body extractData ' , res);\r\n    return body.data || { };\r\n  }\r\n\r\n  private handleError (error: Response | any) {\r\n    // In a real world app, we might use a remote logging infrastructure\r\n    //console.log(error);\r\n    let errMsg: string;\r\n    if (error instanceof Response) {\r\n      const body = error.json() || '';\r\n      const err = body.error || JSON.stringify(body);\r\n      errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\r\n    } else {\r\n      errMsg = error.message ? error.message : error.toString();\r\n    }\r\n    //console.error(errMsg);\r\n    return Observable.throw(errMsg);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/app/security/user-role/user-role.service.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/environments/environment.ts","import './polyfills.ts';\r\n\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { environment } from './environments/environment';\r\nimport { AppModule } from './app/';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/main.ts","// This file includes polyfills needed by Angular 2 and is loaded before\r\n// the app. You can add your own extra polyfills to this file.\r\nimport 'core-js/es6/symbol';\r\nimport 'core-js/es6/object';\r\nimport 'core-js/es6/function';\r\nimport 'core-js/es6/parse-int';\r\nimport 'core-js/es6/parse-float';\r\nimport 'core-js/es6/number';\r\nimport 'core-js/es6/math';\r\nimport 'core-js/es6/string';\r\nimport 'core-js/es6/date';\r\nimport 'core-js/es6/array';\r\nimport 'core-js/es6/regexp';\r\nimport 'core-js/es6/map';\r\nimport 'core-js/es6/set';\r\nimport 'core-js/es6/reflect';\r\n\r\nimport 'core-js/es7/reflect';\r\nimport 'zone.js/dist/zone';\r\n\n\n\n// WEBPACK FOOTER //\n// D:/workspace-sts-3.7.0.RELEASE/emialapp-ui/src/polyfills.ts"],"sourceRoot":"webpack:///"}